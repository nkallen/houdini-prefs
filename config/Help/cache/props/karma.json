{"body": [{"indent": 0, "text": ["Karma rendering properties"], "type": "title", "extent": [0, 31], "level": 0}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [183, 300], "text": ["Enabling this option will cause karma to abort the render with an error if it encounters a missing texture map."]}], "indent": 0, "text": ["Abort Missing Texture"], "role": "item", "attrs": {"kagroup": "Control", "hprop": "karma:global:abortmissingtexture"}, "extent": [89, 115], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [382, 641], "text": ["As rendering progresses, print out progress using the Alfred progress\n    format.  For multi-frame renders, this progress will be cumulative across\n    frames (i.e. if there are 4 frames, percent complete will be 25% after the\n    first frame finishes)."]}], "indent": 0, "text": ["Show Alfred Progress"], "role": "item", "attrs": {"kagroup": "Statistics", "hprop": "karma:global:alfred"}, "extent": [300, 324], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [718, 875], "text": ["Specifies a camera that is used for dicing complicated surfaces.  This can\n    provide consistent dicing of surfaces when the viewing camera is moving."]}], "indent": 0, "text": ["Dicing Camera"], "role": "item", "attrs": {"kagroup": "Dicing", "hprop": "karma:global:dicingcamera"}, "extent": [641, 658], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [959, 997], "text": ["Enable depth of field rendering."]}], "indent": 0, "text": ["Enable Depth of Field"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:enabledof"}, "extent": [875, 900], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1081, 1435], "text": ["A whitespace-separated list of shading component names that will be\n    computed for export. If you have defined new component labels in your\n    materials, these can be added to the list so that they are exported for\n    per-component export planes. If you are not using some components, remove\n    them from the list to improve render efficiency."]}, {"indent": 4, "type": "para", "extent": [1435, 1656], "text": ["PBR light exports assume that this list is complete - that is, all\n    components created by shaders are listed. If there are unlisted components,\n    light exports may be missing illumination from these components."]}], "indent": 0, "text": ["Export Components"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:exportcomponents"}, "extent": [997, 1018], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1742, 2009], "text": ["A space-separated list of component types that will behave like diffuse\n    bounces.  This will affect which reflection scope is used based on the ray\n    type and also which bounce limit to use.  Uncategorized component types are\n    assumed to be reflections."]}], "indent": 0, "text": ["Diffuse Components"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:diffusecomponents"}, "extent": [1656, 1678], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2095, 2362], "text": ["A space-separated list of component types that will behave like refract\n    bounces.  This will affect which reflection scope is used based on the ray\n    type and also which bounce limit to use.  Uncategorized component types are\n    assumed to be reflections."]}], "indent": 0, "text": ["Refract Components"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:refractcomponents"}, "extent": [2009, 2031], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2446, 2712], "text": ["A space-separated list of component types that will behave like volume\n    bounces.  This will affect which reflection scope is used based on the ray\n    type and also which bounce limit to use.  Uncategorized component types are\n    assumed to be reflections."]}], "indent": 0, "text": ["Volume Components"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:volumecomponents"}, "extent": [2362, 2383], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2790, 3068], "text": ["A space-separated list of component types that will behave like subsurface\n    scatter bounces.  This will affect which reflection scope is used based on\n    the ray type and also which bounce limit to use.  Uncategorized component\n    types are assumed to be reflections."]}], "indent": 0, "text": ["SSS Components"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:ssscomponents"}, "extent": [2712, 2730], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3153, 3258], "text": ["Disable all lighting and material evaluation, using only the display color\n    to shade primitives."]}], "indent": 0, "text": ["Disable Lighting"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:disable_lighting"}, "extent": [3068, 3088], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3348, 3537], "text": ["When rendering in headlight mode with ambient occlusion shading, this\n    distance is used for occlusion testing.  Smaller values will result in\n    faster, but less accurate shading."]}], "indent": 0, "text": ["Headlight AO Distance"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_ao_distance"}, "extent": [3258, 3283], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3625, 3723], "text": ["When rendering in headlight mode, perform this many ambient occlusion\n    samples per shade."]}], "indent": 0, "text": ["Headlight AO Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_ao_samples"}, "extent": [3537, 3561], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3813, 3964], "text": ["The near/far distance for depth cue fog when lighting is disabled.  If the\n    far distance is less than the near distance, fog will be disabled."]}], "indent": 0, "text": ["Headlight Fog Distance"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_depthcue_z"}, "extent": [3723, 3749], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4055, 4113], "text": ["The color of the depthcue fog for disabled lighting."]}], "indent": 0, "text": ["Headlight Fog Color"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_depthcue_color"}, "extent": [3964, 3987], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4204, 4263], "text": ["The alpha for depthcue fog when lighting is disabled."]}], "indent": 0, "text": ["Headlight Fog Alpha"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_depthcue_alpha"}, "extent": [4113, 4136], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4340, 4446], "text": ["When rendering to the Solaris viewport, this causes each render to start\n    with a new random seed."]}], "indent": 0, "text": ["IPR Inc Random"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_inc_random"}, "extent": [4263, 4281], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4522, 4568], "text": ["The initial tile size for IPR rendering."]}], "indent": 0, "text": ["IPR Tile Size"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_proxydepth"}, "extent": [4446, 4463], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4663, 4793], "text": ["As tiles are rendered, the coarse tile size decreases.  This specifies the\n    threshold at which denoising will be invoked."]}], "indent": 0, "text": ["IPR Denoise Tile Size"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_proxy_for_imagefilter"}, "extent": [4568, 4593], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4880, 4973], "text": ["When rendering in IPR mode, reserve this number of threads for other\n    Houdini tasks."]}], "indent": 0, "text": ["IPR Reserve Threads"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_reserve_threads"}, "extent": [4793, 4816], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5048, 5128], "text": ["Image filters post-process the filtered pixels to produce the final image."]}, {"indent": 4, "type": "para", "extent": [5128, 5226], "text": ["This parameter specifies a list of filters.  These filters are specified as\n    a JSON list."]}], "indent": 0, "text": ["Image Filters"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:imagefilter"}, "extent": [4973, 4990], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5300, 5422], "text": ["When rendering, a Pixel Oracle tells karma which pixels need additional\n    sampling and which pixels are converged."]}, {"indent": 4, "type": "para", "extent": [5422, 5475], "text": ["This parameter tells karma which oracle to use."]}], "indent": 0, "text": ["Pixel Oracle"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:pixeloracle"}, "extent": [5226, 5242], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5551, 5603], "text": ["This is the random seed to use for the render."]}], "indent": 0, "text": ["Random Seed"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:randomseed"}, "extent": [5475, 5490], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5682, 5827], "text": ["Whether to use a fixed size cache (", {"text": ["karma:global:cachesize"], "type": "code"}, ") or whether to use a proportion of physical memory (", {"text": ["karma:global:cacheratio"], "type": "code"}, ")"]}], "indent": 0, "text": ["Cache Limit"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:usecacheratio"}, "extent": [5603, 5618], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5910, 5987], "text": ["The proportion of physical memory Karma will use for its unified cache."]}, {"indent": 4, "type": "para", "extent": [5987, 6125], "text": ["For example, with the default ", {"text": ["vm_cacheratio"], "type": "code"}, " of ", {"text": ["0.25"], "type": "code"}, " and 16 Gb of\n    physical memory, Karma will use 4 Gb for its unified cache."]}, {"indent": 4, "type": "para", "extent": [6125, 6228], "text": ["The unified cache stores dynamic, unloadable data used by the render\n    including the following:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [6228, 6258], "text": ["2D ", {"text": [".rat"], "type": "code"}, " texture tiles"]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [6258, 6288], "text": ["3D ", {"text": [".i3d"], "type": "code"}, " texture tiles"]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [6288, 6355], "text": ["3D ", {"text": [".pc"], "type": "code"}, " point cloud pages (when not preloaded into memory)"]}], "container": true, "type": "bullet_group"}, {"indent": 4, "type": "para", "extent": [6355, 6424], "text": ["Note:  This value is only used for off-line rendering, not IPR."]}], "indent": 0, "text": ["Cache Memory Ratio"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:cacheratio"}, "extent": [5827, 5849], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6503, 6634], "text": ["An explicit memory limit for the unified shading cache.  This is deprecated\n    in favor of using the ", {"text": ["Cache Memory Ratio"], "type": "ui"}, "."]}, {"indent": 4, "type": "para", "extent": [6634, 6703], "text": ["Note:  This value is only used for off-line rendering, not IPR."]}], "indent": 0, "text": ["Cache Size (MB)"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:cachesize"}, "extent": [6424, 6443], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6771, 6814], "text": ["The ray-bias used for secondary rays."]}], "indent": 0, "text": ["Ray Bias"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:raybias"}, "extent": [6703, 6715], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6887, 6914], "text": ["The rendering camera."]}], "indent": 0, "text": ["Camera"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:rendercamera"}, "extent": [6814, 6824], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6989, 7038], "text": ["The resolution of the image to be rendered."]}], "indent": 0, "text": ["Resolution"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:resolution"}, "extent": [6914, 6928], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7114, 7417], "text": ["This is the region of the image that will be rendered.  If the region is\n    smaller than the full image, the data window will act as a crop region.  If\n    the data window is larger than the full window, the data window will act as\n    overscan rendering.  The data window is specified in pixels."]}], "indent": 0, "text": ["Data Window"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:img_datawindow"}, "extent": [7038, 7053], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7502, 7637], "text": ["Most pixels are square.  However, some display devices have non-square\n    pixels.  This option specifies the pixel aspect ratio."]}], "indent": 0, "text": ["Pixel Aspect Ratio"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:img_pixel_aspect"}, "extent": [7417, 7439], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7713, 7803], "text": ["Sample filters are used to modify samples before they are sent to pixel\n    filters."]}, {"indent": 4, "type": "para", "extent": [7803, 7901], "text": ["This parameter specifies a list of filters.  These filters are specified as\n    a JSON list."]}], "indent": 0, "text": ["Sample Filter"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:samplefilter"}, "extent": [7637, 7654], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7983, 8092], "text": ["The number of ray-samples sent through each pixel.  More samples will\n    result in a less noisy image."]}], "indent": 0, "text": ["Pixel Samples"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:samplesperpixel"}, "extent": [7901, 7918], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Screendoor Limit"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:global:screendoorlimit"}, "extent": [8092, 8112], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8284, 8491], "text": ["Whether Karma should perform uniform sampling of lights or whether\n    rendering should use the light tree.  The light tree can be significantly\n    faster for scenes that have large numbers of lights."]}], "indent": 0, "text": ["Light Sampling Mode"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:light_sampling_mode"}, "extent": [8192, 8215], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8589, 8833], "text": ["This is a global control to improve sampling quality for all lights.  This\n    acts as a multiplier on the individual light quality controls.  Increasing\n    the quality will improve direct light sampling as well as\n    shadows/occlusion."]}], "indent": 0, "text": ["Light Sampling Quality"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:light_sampling_quality"}, "extent": [8491, 8517], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8905, 9017], "text": ["Karma breaks down an image into multiple tiles for rendering.  This\n    specifies the size of these tiles."]}], "indent": 0, "text": ["Tile Size"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:tilesize"}, "extent": [8833, 8846], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9105, 9699], "text": ["This parameter controls the shading quality scale factor for geometry that\n    is not directly visible to the camera. For geometry that is outside the\n    field of view (ie. visible only to secondary rays), mantra will smoothly\n    reduce the shading quality based on the angle between the geometry and the\n    edge of the viewing frustum.  Smaller values can increase performance\n    particularly in scenes where the camera is within the displacement bound of\n    nearby geometry, where it permits the hidden primitives to be diced more\n    coarsely than those that are directly visible."]}], "indent": 0, "text": ["Offscreen Quality"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:offscreenquality"}, "extent": [9017, 9038], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9775, 10072], "text": ["The maximum value a shading sample is allowed to contribute to an LPE image\n    plane to reduce appearance of \"fireflies\" caused by undersampling of \n    extremely bright light sources. Note that reducing this value can result in\n    an overall reduction in the amount of light in your scene"]}], "indent": 0, "text": ["Color Limit"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:colorlimit"}, "extent": [9699, 9714], "type": "properties_item"}], "container": true, "role": "item_group", "type": "properties_item_group"}, {"indent": 0, "text": ["Camera Properties"], "type": "title", "extent": [10072, 10094], "level": 0}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [10154, 10187], "text": ["Camera focal length (zoom)."]}], "indent": 0, "text": ["focal"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:focal"}, "extent": [10094, 10103], "type": "properties_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [10294, 10331], "text": ["Width of the visible field."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [10345, 10437], "text": ["The correct aperture width for Super 35mm format motion picture film is 24.89."]}], "indent": 8, "role": "item", "type": "note", "extent": [10331, 10345]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "text": [{"text": "", "fullpath": "/nodes/images/fov.png", "scheme": "Image", "type": "link", "value": "/nodes/images/fov.png"}], "role": "item", "extent": [10253, 10294], "type": "fig"}], "container": true, "role": "item_group", "type": "fig_group"}], "indent": 0, "text": ["aperture"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:aperture"}, "extent": [10187, 10199], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10511, 10581], "text": ["Whether the camera has a perspective or orthographic projection."]}], "indent": 0, "text": ["orthographic"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:orthographic"}, "extent": [10437, 10453], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10651, 10698], "text": ["The width of the orthographic projection."]}], "indent": 0, "text": ["orthowidth"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:orthowidth"}, "extent": [10581, 10595], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10756, 10803], "text": ["Position of near and far clipping planes."]}], "indent": 0, "text": ["clip"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:clip"}, "extent": [10698, 10706], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10871, 11110], "text": ["The shutter time refers to the portion of a frame the shutter is actually open. On a physical camera, this if often referred to as Shutter Speed. The renderer uses this determine motion blur. The value should be in the range ", {"text": ["[0,1]"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [11110, 11346], "text": ["A value of 0 for the shutter time would mean that there is no motion blur at all, as the shutter is only \"Open\" for an instant. A value of 1 on the other hand would mean that the shutter is open for the entire length of the frame."]}, {"indent": 4, "type": "para", "extent": [11346, 11399], "text": [{"text": "", "fullpath": "/images/render/mug/blur/ShutterTime.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/blur/ShutterTime.jpg"}]}, {"indent": 4, "type": "para", "extent": [11399, 11715], "text": ["In the above example the sphere is rotating a full 360 degrees over the course of a single frame. You can see how the length of the \"motion trail\" or \"blur\" changes based on the shutter time. In most cases, the default value of .5 is appropriate for animated sequences and a good match for real world settings."]}, {"indent": 4, "type": "para", "extent": [11715, 11982], "text": ["Keep in mind that this parameter controls the amount of time within a single frame, that the shutter is open. It does not refer to how long an individual frame is. To adjust the frame rate, change the Frames Per Second parameter in the Global Animation Options."]}], "indent": 0, "text": ["shutter"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:camera:shutter"}, "extent": [10803, 10814], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12058, 12261], "text": ["The lens focal distance and distance from the camera at\n    which objects will be in focus. This is only used when rendering using\n    depth of field. Objects outside this distance will be blurred."]}], "indent": 0, "text": ["focusdistance"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:focusdistance"}, "extent": [11982, 11999], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12321, 12446], "text": ["Lens fstop. This is only used when rendering using depth of field.\n    Determines blurriness of depth of field effects."]}], "indent": 0, "text": ["fstop"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:fstop"}, "extent": [12261, 12270], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12515, 12811], "text": ["The Screen Window specifies a window on the image projection.  There are 4\n    values specifying the (xmin, xmax, ymin, ymax) values in NDC space of the\n    image plane.  This window is mapped to the full image.  This provides the\n    ability to do 2D pan and zoom on the screen projection."]}], "indent": 0, "text": ["Screen Window"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:camera:window"}, "extent": [12446, 12463], "type": "properties_item"}], "container": true, "role": "item_group", "type": "properties_item_group"}, {"indent": 0, "text": ["Light Properties"], "type": "title", "extent": [12811, 12832], "level": 0}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [12900, 12941], "text": ["The shape of the area light source."]}], "indent": 0, "text": ["Area Shape"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:light:areashape"}, "extent": [12832, 12846], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13017, 13112], "text": ["Whether the light intensity should be normalized based on the size of the\n    area light."]}], "indent": 0, "text": ["Normalize Area"], "role": "item", "attrs": {"kagroup": "View", "hprop": "karma:light:normalizearea"}, "extent": [12941, 12959], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13179, 13279], "text": ["The dimensions of the area light.  This has different meaning depending on\n    the light type:"]}, {"body": [{"body": [{"indent": 11, "type": "para", "extent": [13297, 13394], "text": ["The first value specifies the radius of the light.  The second value is ignored."]}], "indent": 4, "type": "dt", "extent": [13279, 13297], "text": ["Sphere Light"]}, {"body": [{"indent": 11, "type": "para", "extent": [13417, 13503], "text": ["The first value specifies the width, the second specifies the height."]}], "indent": 4, "type": "dt", "extent": [13394, 13417], "text": ["Rectangular Light"]}], "container": true, "type": "dt_group"}, {"body": [{"indent": 11, "type": "para", "extent": [13518, 13615], "text": ["The first value specifies the radius of the light.  The second value is ignored."]}], "indent": 4, "type": "para", "extent": [13503, 13518], "text": ["Disk Light"]}, {"body": [{"indent": 11, "type": "para", "extent": [13634, 13734], "text": ["The first value specifies the height of the cylinder.  The second value the radius."]}], "indent": 4, "type": "para", "extent": [13615, 13634], "text": ["Cylinder Light"]}, {"body": [{"indent": 11, "type": "para", "extent": [13749, 13833], "text": ["The first value is the length of the line.  The second value is ignored"]}], "indent": 4, "type": "para", "extent": [13734, 13749], "text": ["Line Light"]}], "indent": 0, "text": ["Area Size"], "role": "item", "attrs": {"kagroup": "Light", "hprop": "karma:light:areasize"}, "extent": [13112, 13125], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13914, 13971], "text": ["Outside this radius, the light will have no effect."]}], "indent": 0, "text": ["Active Radius"], "role": "item", "attrs": {"kagroup": "Attenuation", "hprop": "karma:light:activeradius"}, "extent": [13833, 13850], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14038, 14097], "text": ["Specifies the environment map to use for area lights."]}], "indent": 0, "text": ["Area Map"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:areamap"}, "extent": [13971, 13983], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14171, 14317], "text": ["The color of shadows for the light.  This defaults to black.  Setting the\n    color to white (1,1,1), means the light will not cast shadows."]}], "indent": 0, "text": ["Shadow Color"], "role": "item", "attrs": {"kagroup": "Shadow", "hprop": "karma:light:shadowcolor"}, "extent": [14097, 14113], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14397, 14607], "text": ["This value can be used to limit shadow tests to a specific distance.  For\n    example, with a dome light, setting the shadow distance to a smaller value\n    will limit shadow tests to only nearby objects."]}], "indent": 0, "text": ["Shadow Distance"], "role": "item", "attrs": {"kagroup": "Shadow", "hprop": "karma:light:shadowdistance"}, "extent": [14317, 14336], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14674, 14795], "text": ["Controls whether multiple importance sampling will sample from the BSDF,\n    the light, or both the BSDF and light."]}], "indent": 0, "text": ["MIS Bias"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:misbias"}, "extent": [14607, 14619], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14871, 15016], "text": ["For inifinite lights, this setting specifies the softness of shadows.\n    Normally for infinite light sources, shadows are perfectly sharp."]}], "indent": 0, "text": ["Distant Blur"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:distant_blur"}, "extent": [14795, 14811], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15100, 15306], "text": ["This is the per-light sampling quality.  Increasing the quality will add\n    additional samples for this light source, improving the sampling quality\n    of this light relative to other light sources."]}], "indent": 0, "text": ["Sampling Quality"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:light:samplingquality"}, "extent": [15016, 15036], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15409, 15672], "text": ["When an object is used as a geometry light source, this sets the per-light\n    sampling quality.  Increasing the quality will add additional samples for\n    this light source, improving the sampling quality of this light relative to\n    other light sources."]}, {"indent": 4, "type": "para", "extent": [15672, 15747], "text": ["Note: This is not the quality of light received by an object."]}], "indent": 0, "text": ["Light Sampling Quality"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:object:lightsource_samplingquality"}, "extent": [15306, 15332], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15847, 16326], "text": ["Any object with an emissive material will generate light within the\n    scene.  If an object is significant enough (eg size, brightness, etc\u2026)\n    then it is possible for Karma to treat that object as if it were an \n    explicit lightsource (similar to regular lights), meaning the emitted\n    light will be handled much more efficiently.  But doing so will add\n    extra overhead elsewhere in the system (eg increased memory usage, \n    slower update times, etc\u2026)."]}, {"indent": 4, "type": "para", "extent": [16326, 16596], "text": ["There are three options.  \"No\" will set the object as not being\n    a lightsource.  \"Yes\" will set the object as being a lightsource.  \n    \"Auto\" (default) means Karma will use an internal heuristic \n    to decide if the object should be treated as a lightsource."]}], "indent": 0, "text": ["Treat As Light Source"], "role": "item", "attrs": {"kagroup": "Light", "hprop": "karma:object:treat_as_lightsource"}, "extent": [15747, 15772], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16693, 17011], "text": ["When using the light tree for rendering, Karma will try to put any light\n    source that\u2019s compatible into the tree.  This option can force a light to\n    be excluded from the tree and subject to uniform sampling, which can \n    sometimes yield an improved sampling quality the light at the expense\n    of speed."]}], "indent": 0, "text": ["Force Uniform Sampling"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:light:force_uniform_sampling"}, "extent": [16596, 16622], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17093, 17170], "text": ["The trace-set of geometry which act as occluders for this light source."]}], "indent": 0, "text": ["Shadow Trace Set"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:shadowtraceset"}, "extent": [17011, 17031], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17238, 17318], "text": ["The category identifier used to select this light source for illumination."]}], "indent": 0, "text": ["Category"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:category"}, "extent": [17170, 17182], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17402, 17659], "text": ["If an environment map is larger than this resolution, it will be scaled\n    down when performing texture analysis.  If the map has some very small,\n    very bright values, this filtering may affect how sampling of the\n    environment map is performed."]}], "indent": 0, "text": ["Maximum HDRI Size"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:light:hdri_max_isize"}, "extent": [17318, 17339], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17735, 17840], "text": ["A multiplier for the effect of this light on the diffuse, SSS, and volume\n    response of materials"]}], "indent": 0, "text": ["Diffuse Scale"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:diffusescale"}, "extent": [17659, 17675], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17918, 18024], "text": ["A multiplier for the effect of this light on the reflection and refraction\n    response of materials"]}], "indent": 0, "text": ["Specular Scale"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:light:specularscale"}, "extent": [17840, 17857], "type": "properties_item"}], "container": true, "role": "item_group", "type": "properties_item_group"}, {"indent": 0, "text": ["Object Properties"], "type": "title", "extent": [18024, 18046], "level": 0}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [18127, 18243], "text": ["Whether to enable motion blur.  Changing this in the display options will\n    require a restart of the render."]}], "indent": 0, "text": ["Enable Motion Blur"], "role": "item", "attrs": {"kagroup": "Motion Blur", "hprop": "karma:object:mblur"}, "extent": [18046, 18069], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18318, 18751], "text": ["This parameter lets you choose what type of ", {"text": ["geometry velocity blur"], "type": "em"}, " to do on an object, if any. Separate from ", {"text": ["transform blur"], "type": "em"}, " and ", {"text": ["deformation blur"], "type": "em"}, ", you can render motion blur based on point movement, using attributes stored on the points that record change over time. You should use this type of blur if the number points in the geometry changes over time (for example, a particle simulation where points are born and die)."]}, {"indent": 4, "type": "para", "extent": [18751, 19201], "text": ["If your geometry changes topology frame-to-frame, Karma will not be able to interpolate the geometry to correctly calculate Motion Blur. In these cases, motion blur can use a ", {"text": ["v"], "type": "code"}, " and/or ", {"text": ["accel"], "type": "code"}, " attribute which is consistent even while the underlying geometry is changing. The surface of a fluid simulation is a good example of this. In this case, and other types of simulation data, the solvers will automatically create the velocity attribute."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [19223, 19324], "text": ["Do not render motion blur on this object, even if the renderer is set to allow motion blur."]}], "indent": 4, "type": "dt", "extent": [19201, 19223], "text": ["No Velocity Blur"]}, {"body": [{"indent": 8, "type": "para", "extent": [19343, 19753], "text": ["To use velocity blur, you must compute and store point velocities in a point attribute ", {"text": ["v"], "type": "code"}, ". The renderer uses this attribute, if it exists, to render velocity motion blur (assuming the renderer is set to allow motion blur). The ", {"text": ["v"], "type": "code"}, " attribute may be created automatically by simulation nodes (such as particle DOPs), or you can compute and add it using the ", {"text": ["Point velocity SOP"], "fullpath": "/nodes/sop/pointvelocity", "scheme": "Node", "type": "link", "value": "/nodes/sop/pointvelocity"}, "."]}, {"indent": 8, "type": "para", "extent": [19753, 19827], "text": ["The ", {"text": ["v"], "type": "code"}, " attribute value is measured in Houdini units per second."]}], "indent": 4, "type": "dt", "extent": [19324, 19343], "text": ["Velocity Blur"]}, {"body": [{"indent": 8, "type": "para", "extent": [19850, 20268], "text": ["To use acceleration blur, you must compute and store point acceleration in a point attribute ", {"text": ["accel"], "type": "code"}, ". The renderer uses this attribute, if it exists, to render multi-segment acceleration motion blur (assuming the renderer is set to allow motion blur). The ", {"text": ["accel"], "type": "code"}, " attribute may be created automatically by simulation nodes, or you can compute and add it using the ", {"text": ["Point velocity SOP"], "fullpath": "/nodes/sop/pointvelocity", "scheme": "Node", "type": "link", "value": "/nodes/sop/pointvelocity"}, "."]}, {"indent": 8, "type": "para", "extent": [20268, 20526], "text": ["When Acceleration Blur is on, if the geometry has a ", {"text": ["angular velocity"], "type": "em"}, " attribute (", {"text": ["w"], "type": "code"}, "), rapid rotation will also be blurred. This should be a vector attribute, where the components represent rotation speeds in radians per second around X, Y, and Z."]}], "indent": 4, "type": "dt", "extent": [19827, 19850], "text": ["Acceleration Blur"]}], "container": true, "type": "dt_group"}, {"indent": 4, "type": "para", "extent": [20526, 20771], "text": ["When this is set to \"Velocity Blur\" or \"Acceleration Blur\", deformation blur is not applied to the object. When this is set to \"Acceleration Blur\", use the ", {"text": "", "scheme": "Karma", "type": "link", "exists": true, "value": "karma:object:geosamples"}, " property to set the number of acceleration samples."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "summary", "extent": [20841, 20940], "text": ["Velocity motion blur used the velocity attribute (", {"text": ["v"], "type": "code"}, ") to do linear motion blur."]}], "indent": 8, "text": [{"text": "", "fullpath": "/images/render/motionblur_velocity.jpg", "scheme": "Image", "type": "link", "value": "/images/render/motionblur_velocity.jpg"}], "role": "item", "extent": [20781, 20841], "type": "fig"}], "container": true, "role": "item_group", "type": "fig_group"}], "indent": 4, "role": "item", "type": "col", "extent": [20771, 20781]}, {"body": [{"body": [{"body": [{"indent": 12, "type": "summary", "extent": [21014, 21140], "text": ["Acceleration motion blur uses the change in velocity to more accurately blue objects turning at high speed."]}], "indent": 8, "text": [{"text": "", "fullpath": "/images/render/motionblur_acceleration.jpg", "scheme": "Image", "type": "link", "value": "/images/render/motionblur_acceleration.jpg"}], "role": "item", "extent": [20950, 21014], "type": "fig"}], "container": true, "role": "item_group", "type": "fig_group"}], "indent": 4, "role": "item", "type": "col", "extent": [20940, 20950]}, {"body": [{"body": [{"body": [{"indent": 12, "type": "summary", "extent": [21222, 21326], "text": ["Angular acceleration blur works with object spin, such as these fast-spinning cubes."]}], "indent": 8, "text": [{"text": "", "fullpath": "/images/render/motionblur_angular_acceleration.jpg", "scheme": "Image", "type": "link", "value": "/images/render/motionblur_angular_acceleration.jpg"}], "role": "item", "extent": [21150, 21222], "type": "fig"}], "container": true, "role": "item_group", "type": "fig_group"}], "indent": 4, "role": "item", "type": "col", "extent": [21140, 21150]}], "container": true, "role": "item_group", "type": "col_group"}], "indent": 0, "text": ["Velocity Blur"], "role": "item", "attrs": {"kagroup": "Motion Blur", "hprop": "karma:object:vblur"}, "extent": [18243, 18260], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21414, 21901], "text": ["The number of sub-frame samples to compute when rendering ", {"text": ["deformation"], "type": "em"}, " motion blur over the shutter open time. The default is 1 (sample only at the start of the shutter time), giving ", {"text": ["no"], "type": "strong"}, " deformation blur by default. If you want rapidly deforming geometry to blur properly, you must increase this value to 2 or more. Note that this value is limited by the number of sub-samples available in the USD file being rendered.  An exception to this is the USD Skel deformer which allows."]}, {"indent": 4, "type": "para", "extent": [21901, 22102], "text": ["\"Deformation\" may refer to simple transformations at the Geometry (SOP) level, or actual surface deformation, such as a character or object which changes shape rapidly over the course of a frame."]}, {"indent": 4, "type": "para", "extent": [22102, 22164], "text": [{"text": "", "fullpath": "/images/render/mug/blur/GeoTimeSamplesSimple.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/blur/GeoTimeSamplesSimple.jpg"}]}, {"indent": 4, "type": "para", "extent": [22164, 22286], "text": ["Objects whose deformations are quite complex within a single frame will require a higher number of Geo Time Samples."]}, {"indent": 4, "type": "para", "extent": [22286, 22342], "text": [{"text": "", "fullpath": "/images/render/mug/blur/GeoTimeSamples.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/blur/GeoTimeSamples.jpg"}]}, {"indent": 4, "type": "para", "extent": [22342, 22529], "text": ["Deformation blur also lets you blur ", {"text": ["attribute change"], "type": "em"}, " over the shutter time. For example, if point colors are changing rapidly as the object moves, you can blur the ", {"text": ["Cd"], "type": "code"}, " attribute."]}, {"indent": 4, "type": "para", "extent": [22529, 22893], "text": ["Increasing the number of Geo Time Samples ", {"text": ["can have an impact"], "type": "strong"}, " on the amount of memory Karma uses.  For each additional Sample, Karma must retain a copy of the geometry in memory while it samples across the shutter time. When optimizing your renders, it is a good idea to find the minimum number of Geo Time Samples necessary to create a smooth motion trail."]}, {"indent": 4, "type": "para", "extent": [22893, 23004], "text": ["Deformation blur is ignored for objects that have ", {"fragment": "#velocity", "text": ["Velocity motion blur"], "value": "/render/blur#velocity", "fullpath": "/render/blur#velocity", "scheme": null, "type": "link"}, " turned on."]}], "indent": 0, "text": ["Geometry Time Samples"], "role": "item", "attrs": {"kagroup": "Motion Blur", "hprop": "karma:object:geosamples"}, "extent": [21326, 21351], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23095, 23303], "text": ["The number of samples to compute when rendering ", {"text": ["transformation"], "type": "em"}, " motion blur over the shutter open time.  The default is 2 samples (at the start and end of the shutter time), giving one blurred segment."]}, {"indent": 4, "type": "para", "extent": [23303, 23362], "text": [{"text": "", "fullpath": "/images/render/mug/blur/XFormSampleSimple.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/blur/XFormSampleSimple.jpg"}]}, {"indent": 4, "type": "para", "extent": [23362, 23528], "text": ["If you have object moving and changing direction extremely quickly, you might want to increase the number of samples to capture the sub-frame direction changes."]}, {"indent": 4, "type": "para", "extent": [23528, 23588], "text": [{"text": "", "fullpath": "/images/render/mug/blur/XFormSampleComplex.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/blur/XFormSampleComplex.jpg"}]}, {"indent": 4, "type": "para", "extent": [23588, 23818], "text": ["In the above example, it requires 40 transformation samples to correctly render the complex motion that occurs within one frame. (This amount of change within a single frame is very unusual and only used as a demonstration.)"]}, {"indent": 4, "type": "para", "extent": [23818, 24068], "text": ["Transformation blur simulates blur by interpolating each object\u2019s transformation between frames, so it\u2019s cheap to compute but does not capture surface deformation. To enable blurring deforming geometry, increase ", {"text": "", "scheme": "Karma", "type": "link", "exists": true, "value": "karma:object:geosamples"}, "."]}], "indent": 0, "text": ["Transform Time Samples"], "role": "item", "attrs": {"kagroup": "Motion Blur", "hprop": "karma:object:xformsamples"}, "extent": [23004, 23030], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24147, 24529], "text": ["This parameter controls the geometric subdivision resolution for smooth surfaces (subdivision surfaces and displaced surfaces).  With all other parameters at their defaults, a value of 1 means that approximately 1 micropolygon will be created per pixel.  A higher value will generate smaller micropolygons meaning that more shading will occur - but the quality will be higher."]}, {"indent": 4, "type": "para", "extent": [24529, 24814], "text": ["The effect of changing the shading quality is to increase or decrease the amount of shading by a factor of ", {"text": ["karma:object:dicingquality"], "type": "code"}, " ", {"text": ["squared"], "type": "strong"}, " - so a shading quality of 2 will perform 4 times as much shading and a shading quality of 0.5 will perform 1/4 times as much shading."]}], "indent": 0, "text": ["Dicing Quality"], "role": "item", "attrs": {"kagroup": "Dicing", "hprop": "karma:object:dicingquality"}, "extent": [24068, 24086], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24896, 25148], "text": ["Specifies the quality of indirect diffuse shading.  A value of one\n    translates to roughly one additional diffuse sample per shading\n    computation.  A sample of 4 translates to roughly 4 additional diffuse\n    samples per shading computation."]}], "indent": 0, "text": ["Diffuse Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:object:diffusesamples"}, "extent": [24814, 24833], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25230, 25491], "text": ["Specifies the quality of indirect reflection shading.  A value of one\n    translates to roughly one additional reflection sample per shading\n    computation.  A sample of 4 translates to roughly 4 additional reflection\n    samples per shading computation."]}], "indent": 0, "text": ["Reflect Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:object:reflectsamples"}, "extent": [25148, 25167], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25573, 25834], "text": ["Specifies the quality of indirect refraction shading.  A value of one\n    translates to roughly one additional refraction sample per shading\n    computation.  A sample of 4 translates to roughly 4 additional refraction\n    samples per shading computation."]}], "indent": 0, "text": ["Refract Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:object:refractsamples"}, "extent": [25491, 25510], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25914, 26175], "text": ["Specifies the quality of indirect volumetric shading.  A value of one\n    translates to roughly one additional volumetric sample per shading\n    computation.  A sample of 4 translates to roughly 4 additional volumetric\n    samples per shading computation."]}], "indent": 0, "text": ["Volume Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:object:volumesamples"}, "extent": [25834, 25852], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [26249, 26546], "text": ["Specifies the quality of indirect sub-surface scattering shading.  A value\n    of one translates to roughly one additional sub-surface scattering sample\n    per shading computation.  A sample of 4 translates to roughly 4 additional\n    sub-surface scattering samples per shading computation."]}], "indent": 0, "text": ["SSS Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:object:ssssamples"}, "extent": [26175, 26190], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [26623, 26695], "text": ["The number of times diffuse rays can propagate through your scene."]}, {"body": [{"indent": 4, "role": "item", "type": "fig", "extent": [26695, 26760], "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/DiffuseLimit.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/DiffuseLimit.jpg"}]}], "container": true, "role": "item_group", "type": "fig_group"}, {"indent": 4, "type": "para", "extent": [26760, 27060], "text": ["Unlike the Reflect and Refract Limits, this parameter will increase the overall amount of light in your scene and contribute to the majority of global illumination. With this parameter set above zero diffuse surfaces will accumulate light from other objects in addition to direct light sources."]}, {"indent": 4, "type": "para", "extent": [27060, 27127], "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/DiffuseLimitCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/DiffuseLimitCompare.jpg"}]}, {"indent": 4, "type": "para", "extent": [27127, 27620], "text": ["In this example, increasing the Diffuse Limit has a dramatic effect on the appearance of the final image. To replicate realistic lighting conditions, it is often necessary to increase the Diffuse Limit. However, since the amount of light contribution usually decreases with each diffuse bounce, increasing the Diffuse Limit beyond 4 does little to improve the visual fidelity of a scene. Additionally, increasing the Diffuse Limit can dramatically increase noise levels and render times."]}, {"indent": 4, "type": "para", "extent": [27620, 27688], "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/DiffuseSubtleCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/DiffuseSubtleCompare.jpg"}]}], "indent": 0, "text": ["Diffuse Limit"], "role": "item", "attrs": {"kagroup": "Limits", "hprop": "karma:object:diffuselimit"}, "extent": [26546, 26563], "type": "properties_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [27832, 27899], "text": ["The number of times a ray can be reflected in your scene."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/ReflectLimit.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/ReflectLimit.jpg"}], "role": "item", "extent": [27768, 27832], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [27969, 28079], "text": ["This example shows a classic \"Hall of Mirrors\" scenario with the subject placed between two mirrors."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/ReflectSceneSetup.png", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/ReflectSceneSetup.png"}], "role": "item", "extent": [27899, 27969], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [28151, 28220], "text": ["This effectively creates an infinite series of reflections."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/ReflectLimitCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/ReflectLimitCompare.jpg"}], "role": "item", "extent": [28079, 28151], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [28293, 28599], "text": ["From this camera angle the reflection limits are very obvious and have a large impact on the accuracy of the final image. However, in most cases the reflection limit will be more subtle, allowing you to reduce the number of reflections in your scene and optimize the time it takes to render them."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/ReflectSubtleCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/ReflectSubtleCompare.jpg"}], "role": "item", "extent": [28220, 28293], "type": "fig"}], "container": true, "role": "item_group", "type": "fig_group"}, {"indent": 4, "type": "para", "extent": [28599, 28816], "text": ["Remember that the first time a light source is reflected in an object, it is considered a direct reflection. Therefore, even with Reflect Limit set to 0, you will still see specular reflections of light sources."]}], "indent": 0, "text": ["Reflection Limit"], "role": "item", "attrs": {"kagroup": "Limits", "hprop": "karma:object:reflectlimit"}, "extent": [27688, 27708], "type": "properties_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [28961, 29047], "text": ["This parameter control the number of times a ray be refracted in your scene."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/RefractLimit.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/RefractLimit.jpg"}], "role": "item", "extent": [28896, 28961], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [29117, 29189], "text": ["This example shows a simple scene with ten grids all in a row."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/RefractSceneSetup.png", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/RefractSceneSetup.png"}], "role": "item", "extent": [29047, 29117], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [29261, 29384], "text": ["By applying a refractive shader, we will be able see through the grids to an image of a sunset in the background."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/RefractLimitCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/RefractLimitCompare.jpg"}], "role": "item", "extent": [29189, 29261], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [29457, 29829], "text": ["From this camera angle, in order for the image to be accurate, the refraction limit must match the number of grids that that are in the scene. However, most scenes will not have this number of refractive objects all in a row and so it is possible to reduce the refract limit without affecting the final image while also reducing the time it takes to render them."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/RefractSubtleCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/RefractSubtleCompare.jpg"}], "role": "item", "extent": [29384, 29457], "type": "fig"}, {"body": [{"indent": 8, "type": "para", "extent": [29902, 30042], "text": ["Keep in mind that this Refract Limit refers to the number of surfaces that the ray must travel through, not the number of objects."]}], "indent": 4, "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/RefractLimitSurfaces.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/RefractLimitSurfaces.jpg"}], "role": "item", "extent": [29829, 29902], "type": "fig"}], "container": true, "role": "item_group", "type": "fig_group"}, {"indent": 4, "type": "para", "extent": [30042, 30419], "text": ["Remember that the first time a light source is refracted through a surface, it is considered a direct refraction. Therefore, even with Refract Limit set to 0, you will see refractions of Light Sources. However, since most objects in your scene will have at least two surfaces between it and the light source, direct refractions are often not evident in your final render."]}], "indent": 0, "text": ["Refraction Limit"], "role": "item", "attrs": {"kagroup": "Limits", "hprop": "karma:object:refractlimit"}, "extent": [28816, 28836], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [30494, 30637], "text": ["The number of times a volumetric ray can propagate through a scene. It functions in a similar fashion to the ", {"text": ["Diffuse Limit"], "type": "ui"}, " parameter."]}, {"indent": 4, "type": "para", "extent": [30637, 30696], "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/VolumeLimit.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/VolumeLimit.jpg"}]}, {"indent": 4, "type": "para", "extent": [30696, 31029], "text": ["Increasing the Volume Limit parameter will result in much more realistic volumetric effects. This is especially noticeable in situations where only part of a volume is receiving direct lighting. Also, in order for a volumetric object to receive indirect light from other objects, the Volume Limit parameter must be set above 0."]}, {"indent": 4, "type": "para", "extent": [31029, 31095], "text": [{"text": "", "fullpath": "/images/render/mug/limits_tab/VolumeLimitCompare.jpg", "scheme": "Image", "type": "link", "value": "/images/render/mug/limits_tab/VolumeLimitCompare.jpg"}]}, {"indent": 4, "type": "para", "extent": [31095, 31466], "text": ["With the Volume Limit set to values above zero, the fog volume takes on the characteristic light scattering you would expect from light traveling through a volume. However, as with the Diffuse Limit, the light contribution generally decreases with each bounced ray and therefore using values above 4 does not necessarily result in a noticeably more realistic image."]}, {"indent": 4, "type": "para", "extent": [31466, 31596], "text": ["Also, increasing the value of this parameter can dramatically increase the amount of time spent rendering volumetric images."]}], "indent": 0, "text": ["Volume Limit"], "role": "item", "attrs": {"kagroup": "Limits", "hprop": "karma:object:volumelimit"}, "extent": [30419, 30435], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["SSS Limit"], "role": "item", "attrs": {"status": "nd", "kagroup": "Limits", "hprop": "karma:object:ssslimit"}, "extent": [31596, 31609], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Volume Sampling Mode"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:volumesampling"}, "extent": [31681, 31705], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Volume Step Rate"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:volumesteprate"}, "extent": [31784, 31804], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Uniform Volume"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:volumeuniform"}, "extent": [31883, 31901], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Uniform Volume Density"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:volumeuniformdensity"}, "extent": [31979, 32005], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Visibility Mask"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:visibilitymask"}, "extent": [32090, 32109], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Trace Sets"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:tracesets"}, "extent": [32188, 32202], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Light Categories"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:lightcategories"}, "extent": [32276, 32296], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [32444, 32703], "text": ["When this is set, the object will be consdered to be \"matte\".  That is,\n    no illumination will be computed, the opacity of the surface will be used\n    to occlude objects behind the object, but there will be no alpha written\n    into the output image."]}], "indent": 0, "text": ["Is Matte"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:object:ismatte"}, "extent": [32376, 32388], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [32784, 32920], "text": ["When rendering point clouds, they can be rendered as camera oriented\n    discs, spheres or discs oriented to the normal attribute."]}], "indent": 0, "text": ["Render points as"], "role": "item", "attrs": {"kagroup": "Geometry", "hprop": "karma:object:point_style"}, "extent": [32703, 32723], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [33001, 33180], "text": ["When rendering curves, they can be rendered as ribbons oriented to face\n    the camera, rounded tubes or ribbons oriented to the normal attribute\n    attached to the points."]}], "indent": 0, "text": ["Render curves as"], "role": "item", "attrs": {"kagroup": "Geometry", "hprop": "karma:object:curve_style"}, "extent": [32920, 32940], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [33266, 33641], "text": ["USD supports Curve Basis types that may not be supported directly in\n    Houdini.  In some cases, you may want to override the Houdini curve basis.\n    For example, if you have linear curves in Houdini, you may want to render\n    them with a Bezier, B-Spline or Catmull-Rom basis.  This menu will force\n    Karma to override the basis that\u2019s tied to the USD primitives."]}, {"indent": 4, "type": "para", "extent": [33641, 33874], "text": ["Note that the topology of the curves must match the target basis.  For\n    example, when selecting any cubic curve basis, every curves must have at\n    least 4 vertices.  For the Bezier basis, curves must have 4 + 3*N vertices."]}], "indent": 0, "text": ["Override curves basis"], "role": "item", "attrs": {"kagroup": "Geometry", "hprop": "karma:object:curve_basis"}, "extent": [33180, 33205], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Fix Shadow Terminator"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:object:smoothp"}, "extent": [33874, 33899], "type": "properties_item"}], "container": true, "role": "item_group", "type": "properties_item_group"}], "indent": 0, "level": 2, "text": ["Global Properties"], "extent": [64, 89], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [34077, 34127], "text": ["This is the clear color for the image plane."]}], "indent": 0, "text": ["Default value"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:plane:defaultvalue"}, "extent": [34001, 34019], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [34195, 34282], "text": ["Pixel filters are used to combine multiple samples into a single pixel\n    color."]}, {"indent": 4, "type": "para", "extent": [34282, 34380], "text": ["This parameter specifies a list of filters.  These filters are specified as\n    a JSON list."]}], "indent": 0, "text": ["Pixel Filter"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:plane:filter"}, "extent": [34127, 34143], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [34451, 34640], "text": ["Indicates whether to average multiple samples into the final color or\n    whether to use the first ray that hits an object.  This setting is\n    deprecated in favour of pixel filters."]}], "indent": 0, "text": ["Multi-sampled"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:plane:sampling"}, "extent": [34380, 34397], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Exclude from DCM"], "role": "item", "attrs": {"status": "nd", "kagroup": "Image", "hprop": "karma:plane:exclude_dcm"}, "extent": [34640, 34660], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Disable Image Plane"], "role": "item", "attrs": {"status": "nd", "kagroup": "Image", "hprop": "karma:plane:disable"}, "extent": [34733, 34756], "type": "properties_item"}, {"body": [], "indent": 0, "text": ["Seperate Filename"], "role": "item", "attrs": {"status": "nd", "kagroup": "Image", "hprop": "karma:plane:filename"}, "extent": [34825, 34846], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [34981, 35321], "text": ["When Karma quantizes pixels to 8 or 16 bit integer channels, this\n    specifies the dithering to be used.  This is only done if the AOV is\n    specified as 8/16 bit output depth.  It will not be done if conversion is\n    done when writing floating point values to an image format that only\n    supports 8/16 bit integer channel data."]}], "indent": 0, "text": ["Dithering"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:plane:dither"}, "extent": [34916, 34929], "type": "properties_item"}], "container": true, "role": "item_group", "type": "properties_item_group"}], "indent": 0, "level": 2, "text": ["Image Plane Properties"], "extent": [33972, 34001], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [35351, 35493], "text": ["These properties are used to specify default values for options normally\nspecified on the command line of the ", {"text": ["karma"], "type": "code"}, " stand-alone renderer."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [35563, 35595], "text": ["The start frame to render."]}], "indent": 0, "text": ["Start Frame"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:frame"}, "extent": [35493, 35508], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [35671, 35708], "text": ["The number of frames to render."]}], "indent": 0, "text": ["Frame Count"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:frame_count"}, "extent": [35595, 35610], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [35786, 35909], "text": ["When rendering multiple frames (see ", {"text": ["frame_count"], "type": "code"}, "), this specifies the\n    frame increment for each subsequent frame."]}], "indent": 0, "text": ["Frame Increment"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:frame_inc"}, "extent": [35708, 35727], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [35983, 36039], "text": ["The time between checkpointing of partial results."]}], "indent": 0, "text": ["Checkpoint"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:checkpoint"}, "extent": [35909, 35923], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [36119, 36167], "text": ["Limit rendering to this number of seconds."]}], "indent": 0, "text": ["Render Time Limit"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:timelimit"}, "extent": [36039, 36060], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [36256, 36354], "text": ["The render time limit is applied per image in a sequence rather than to the\n    full render."]}], "indent": 0, "text": ["Time Limit Per-Image"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:timelimit_image"}, "extent": [36167, 36191], "type": "properties_item"}, {"body": [{"indent": 4, "type": "para", "extent": [36458, 36616], "text": ["Normally, if the render time limit is exceeded, the partial image will be\n    saved.  If this option is disabled, a partial image will not be saved."]}], "indent": 0, "text": ["Time Limit No Save Partial"], "role": "item", "attrs": {"kagroup": "Command", "hprop": "karma:command:timelimit_nosave_partial"}, "extent": [36354, 36384], "type": "properties_item"}], "container": true, "role": "item_group", "type": "properties_item_group"}], "indent": 0, "level": 2, "text": ["Command Line Properties"], "extent": [35321, 35351], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Properties", "role": "section", "extent": [52, 64], "container": true, "type": "properties_section", "id": "properties"}], "type": "root", "attrs": {"type": "properties"}, "title": ["Karma rendering properties"]}