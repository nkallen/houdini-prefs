{"body": [{"indent": 0, "text": ["Render Settings"], "type": "title", "extent": [0, 20], "level": 0}, {"indent": 0, "type": "summary", "extent": [117, 226], "text": ["Creates or edits a UsdRenderSettings prim, which holds the general settings for rendering the scene."]}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [241, 460], "text": ["A UsdRenderSettings prim holds global render settings for\n    rendering the scene, as well as a list of ", {"text": ["UsdRenderProduct"], "type": "code"}, " prims representing the rendered files/buffers, and which ", {"text": ["purposes"], "type": "em"}, " should be rendered."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [460, 548], "text": ["Render settings prims must be somewhere under ", {"text": ["/Render"], "type": "code"}, " in the scene graph tree."]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [226, 241], "container": true, "type": "h", "id": null}, {"body": [{"type": "para", "indent": 0, "extent": [4468, 4800], "text": ["This node belongs to a class of ", {"text": ["nodes that create or edit USD prims directly"], "type": "strong"}, ". These nodes operate in ", {"text": ["Create mode"], "type": "em"}, " or ", {"text": ["Edit mode"], "type": "em"}, ". This is controlled by a ", {"text": ["Create primitives"], "type": "ui"}, " checkbox or a ", {"text": ["Create/Edit popup menu"], "type": "em"}, ". In create mode, the node creates new prims. In edit mode, the node changes the attributes on an existing prim."]}, {"type": "para", "indent": 0, "extent": [4800, 4930], "text": ["Parameters that correspond to a USD attribute have a pop-up menu to the left that controls ", {"text": ["how"], "type": "em"}, " the node authors the attribute."]}, {"body": [{"body": [{"body": [{"body": [{"text": ["Set or Create "], "role": "td", "indent": 4, "extent": [5026, 5047], "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [5047, 5133], "text": ["Sets the attribute to the given value, whether it previously existed or not."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"text": ["Set If Exists "], "role": "td", "indent": 4, "extent": [5133, 5153], "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [5153, 5230], "text": ["Only set the attribute to the given value if it previously existed."]}, {"type": "para", "indent": 8, "extent": [5230, 5412], "text": ["Use this mode to make sure an attribute is only set on primitives of the correct type. For example, only ", {"text": ["UsdGeomSphere"], "type": "code"}, " primitives are likely to have a ", {"text": ["radius"], "type": "code"}, " attribute."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"text": ["Block "], "role": "td", "indent": 4, "extent": [5412, 5424], "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [5424, 5581], "text": ["Makes the attribute appear to not exist, so it takes on its default value. (If the attribute doesn\u2019t already exist on the prim, this does nothing.)"]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"text": ["Do Nothing "], "role": "td", "indent": 4, "extent": [5581, 5598], "type": "cell"}, {"body": [{"type": "para", "indent": 8, "extent": [5598, 5680], "text": ["Ignore this parameter, don\u2019t create or change the attribute in any way."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}], "type": "table", "thead": [{"body": [{"indent": 4, "text": ["Pop-up menu item "], "role": "th", "attrs": {"width": "25%"}, "extent": [4963, 4987], "type": "cell"}, {"role": "th", "text": ["Meaning "], "indent": 8, "extent": [5007, 5026], "type": "cell"}], "type": "row", "divider": false}]}], "indent": 0, "role": "item", "attrs": {"id": "control_menu"}, "extent": [4930, 4936], "type": "box"}], "role": "item_group", "container": true, "type": "box_group"}], "container": true, "level": 2, "text": ["Creating vs. editing prims"], "extent": [4427, 4468], "indent": 0, "type": "h", "id": "oview"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [88, 164], "text": ["Whether this node should create new prims, or edit existing prims."]}], "indent": 4, "text": ["Action"], "role": "item", "attrs": {"id": "createprims"}, "extent": [50, 62], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [207, 302], "text": ["In create mode, this lets you control where in the scene graph to create the prim(s)."]}, {"indent": 8, "type": "para", "extent": [302, 631], "text": ["The default is usually ", {"text": ["/$OS"], "type": "code"}, ". This creates a primitive at the root level with the same name as the node (for example, ", {"text": ["/tube1"], "type": "code"}, "). This is a useful default for preventing naming conflicts, but terrible for organization. You should try to remember to change the ", {"text": ["Primitive path"], "type": "ui"}, " to a better value when you create prims."]}, {"indent": 8, "type": "para", "extent": [631, 811], "text": ["For example, instead of naming models after the node that created them, you might want to name them after the geometry inside, and organize them under a ", {"text": ["/Models"], "type": "code"}, " branch."]}, {"indent": 8, "type": "para", "extent": [811, 911], "text": ["The \"Create primitives\" section contains basic controls for how to create the new prim(s)."]}], "indent": 4, "text": ["Primitive Path"], "role": "item", "attrs": {"id": "primpath"}, "extent": [164, 184], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [953, 1314], "text": ["In edit mode, the node has a ", {"text": ["Primitive pattern"], "type": "ui"}, " parameter. This lets you specify the prim(s) the node should operate on. You can click the select button beside the text box to select the primitives from the scene graph tree. You can also use ", {"text": ["primitive patterns"], "fullpath": "/solaris/pattern", "scheme": null, "type": "link", "value": "/solaris/pattern"}, " for advanced matching, including matching all prims in a collection."]}], "indent": 4, "text": ["Primitives"], "role": "item", "attrs": {"id": "primpattern"}, "extent": [911, 927], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [691, 948], "text": ["A list of paths to UsdRenderProduct prims, representing the rendered outputs. If you don\u2019t specify any explict products, the renderer should by default output an RGB image using the render settings on this node, to a default display or image name."]}], "indent": 4, "text": ["Products"], "role": "item", "attrs": {"id": "products"}, "extent": [653, 668], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1002, 1347], "text": ["A list of ", {"text": ["purpose"], "type": "em"}, " tokens (such as ", {"text": ["render"], "type": "code"}, " (final render), ", {"text": ["proxy"], "type": "code"}, ", and ", {"text": ["guide"], "type": "code"}, ", from ", {"text": ["UsdGeomImageable"], "type": "code"}, "). Only geometry with its purpose set to one of these tokens will be sent to the renderer. The ", {"text": ["default"], "type": "code"}, " purpose is the purpose for all geometry that doesn\u2019t have an explicitly set purpose, so you will usually want to include it."]}, {"indent": 8, "type": "para", "extent": [1347, 1451], "text": ["(This cannot be specified per-product because it is a statement of which geometry is present.)"]}], "indent": 4, "text": ["Included Purposes"], "role": "item", "attrs": {"id": "includedPurposes"}, "extent": [948, 971], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1520, 1609], "text": ["A list of material purpose tokens to consider when resolving material bindings."]}], "indent": 4, "text": ["Material Binding Purposes"], "role": "item", "attrs": {"id": "materialBindingPurposes"}, "extent": [1451, 1482], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1642, 1721], "text": ["Path to a USD camera (", {"text": ["UsdGeomCamera"], "type": "code"}, ") prim to render the scene from."]}], "indent": 4, "text": ["Camera"], "role": "item", "attrs": {"id": "camera"}, "extent": [1609, 1621], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1762, 1836], "text": ["The horizontal and vertical size of the output image, in pixels."]}], "indent": 4, "text": ["Resolution"], "role": "item", "attrs": {"id": "resolution"}, "extent": [1721, 1737], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1898, 2090], "text": ["Override the camera\u2019s ", {"text": ["Shutter close"], "type": "ui"}, " parameter to be equal to its ", {"text": ["Shutter open"], "type": "ui"}, " time, to produce a zero-width shutter interval. This is a convenient way to disable motion blur."]}], "indent": 4, "text": ["Instantaneous Shutter"], "role": "item", "attrs": {"id": "instantaneousShutter"}, "extent": [1836, 1863], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2162, 2451], "text": ["What to do if the aspect ratio of the output image (", {"text": ["Resolution"], "type": "ui"}, " width divided by height) doesn\u2019t match the aspect ratio of the camera aperture (controlled by attributes on the camera). This allows a standard renderer to do something reasonable when you switch between cameras."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [2476, 2550], "text": ["If necessary, expand the camera aperture to match the image."]}], "indent": 8, "type": "dt", "extent": [2451, 2476], "text": ["Expand Aperture"]}, {"body": [{"indent": 12, "type": "para", "extent": [2573, 2645], "text": ["If necessary, crop the camera aperture to match the image."]}], "indent": 8, "type": "dt", "extent": [2550, 2573], "text": ["Crop Aperture"]}, {"body": [{"indent": 12, "type": "para", "extent": [2676, 2756], "text": ["If necessary, change the camera aperture width to match the image."]}], "indent": 8, "type": "dt", "extent": [2645, 2676], "text": ["Adjust Aperture Width"]}, {"body": [{"indent": 12, "type": "para", "extent": [2788, 2869], "text": ["If necessary, change the camera aperture height to match the image."]}], "indent": 8, "type": "dt", "extent": [2756, 2788], "text": ["Adjust Aperture Height"]}, {"body": [{"indent": 12, "type": "para", "extent": [2904, 2975], "text": ["Change the aspect ratio of the image to match the camera."]}], "indent": 8, "type": "dt", "extent": [2869, 2904], "text": ["Adjust Pixel Aspect Ratio"]}], "container": true, "type": "dt_group"}], "indent": 4, "text": ["Aspect Ratio Conform Policy"], "role": "item", "attrs": {"id": "aspectRatioConformPolicy"}, "extent": [2090, 2123], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3024, 3361], "text": ["Directs the renderer to only render within this window of the entire output image. The rectangle is specified in as ", {"text": ["minX, minY, maxX, maxY"], "type": "code"}, ", in a normalized range ", {"text": ["0"], "type": "code"}, " to ", {"text": ["1"], "type": "code"}, ". Coordinates ", {"text": ["0, 0"], "type": "code"}, " are the bottom left and ", {"text": ["1, 1"], "type": "code"}, " are the top right. The default window ", {"text": ["0, 0, 1, 1"], "type": "code"}, " covers the entire image (that is, is not cropped)."]}, {"indent": 8, "type": "para", "extent": [3361, 3470], "text": ["You can use this window to temporarily ", {"text": ["crop"], "type": "em"}, " the render to a smaller region, for testing purposes."]}, {"indent": 8, "type": "para", "extent": [3470, 3572], "text": ["You can also specify negative values and/or values greater than 1 to reveal ", {"text": ["overscan"], "type": "em"}, " data."]}, {"indent": 8, "type": "para", "extent": [3572, 3645], "text": ["Pixels are only rendered if they are ", {"text": ["fully inside"], "type": "em"}, " the window."]}, {"indent": 8, "type": "para", "extent": [3645, 3762], "text": ["The normalized coordinates map to the image ", {"text": ["after"], "type": "em"}, " any adjustments by the ", {"text": ["Aspect ratio conform policy"], "type": "ui"}, "."]}], "indent": 4, "text": ["Data Window NDC"], "role": "item", "attrs": {"id": "dataWindowNDC"}, "extent": [2975, 2996], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3817, 3959], "text": ["The aspect ratio (width/height) of image ", {"text": ["pixels"], "type": "em"}, " (", {"text": ["not"], "type": "em"}, " the image itself).\n        The default is ", {"text": ["1.0"], "type": "code"}, ", indicating square pixels."]}], "indent": 4, "text": ["Pixel Aspect Ratio"], "role": "item", "attrs": {"id": "pixelAspectRatio"}, "extent": [3762, 3786], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Standard"], "extent": [638, 653], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [382, 641], "text": ["As rendering progresses, print out progress using the Alfred progress\n    format.  For multi-frame renders, this progress will be cumulative across\n    frames (i.e. if there are 4 frames, percent complete will be 25% after the\n    first frame finishes)."]}], "indent": 0, "text": ["Show Alfred Progress"], "role": "item", "attrs": {"hprop": "karma:global:alfred", "kagroup": "Statistics"}, "extent": [300, 324], "type": "parameters_item", "id": "karma:global:alfred"}, {"body": [{"indent": 4, "type": "para", "extent": [4340, 4446], "text": ["When rendering to the Solaris viewport, this causes each render to start\n    with a new random seed."]}], "indent": 0, "text": ["IPR Inc Random"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_inc_random"}, "extent": [4263, 4281], "type": "parameters_item", "id": "karma:global:ipr_inc_random"}, {"body": [{"indent": 4, "type": "para", "extent": [4522, 4568], "text": ["The initial tile size for IPR rendering."]}], "indent": 0, "text": ["IPR Tile Size"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_proxydepth"}, "extent": [4446, 4463], "type": "parameters_item", "id": "karma:global:ipr_proxydepth"}, {"body": [{"indent": 4, "type": "para", "extent": [4880, 4973], "text": ["When rendering in IPR mode, reserve this number of threads for other\n    Houdini tasks."]}], "indent": 0, "text": ["IPR Reserve Threads"], "role": "item", "attrs": {"kagroup": "IPR", "hprop": "karma:global:ipr_reserve_threads"}, "extent": [4793, 4816], "type": "parameters_item", "id": "karma:global:ipr_reserve_threads"}, {"body": [{"indent": 4, "type": "para", "extent": [5682, 5827], "text": ["Whether to use a fixed size cache (", {"text": ["karma:global:cachesize"], "type": "code"}, ") or whether to use a proportion of physical memory (", {"text": ["karma:global:cacheratio"], "type": "code"}, ")"]}], "indent": 0, "text": ["Cache Limit"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:usecacheratio"}, "extent": [5603, 5618], "type": "parameters_item", "id": "karma:global:usecacheratio"}, {"body": [{"indent": 4, "type": "para", "extent": [5910, 5987], "text": ["The proportion of physical memory Karma will use for its unified cache."]}, {"indent": 4, "type": "para", "extent": [5987, 6125], "text": ["For example, with the default ", {"text": ["vm_cacheratio"], "type": "code"}, " of ", {"text": ["0.25"], "type": "code"}, " and 16 Gb of\n    physical memory, Karma will use 4 Gb for its unified cache."]}, {"indent": 4, "type": "para", "extent": [6125, 6228], "text": ["The unified cache stores dynamic, unloadable data used by the render\n    including the following:"]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [6228, 6258], "text": ["2D ", {"text": [".rat"], "type": "code"}, " texture tiles"]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [6258, 6288], "text": ["3D ", {"text": [".i3d"], "type": "code"}, " texture tiles"]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [6288, 6355], "text": ["3D ", {"text": [".pc"], "type": "code"}, " point cloud pages (when not preloaded into memory)"]}], "container": true, "type": "bullet_group"}, {"indent": 4, "type": "para", "extent": [6355, 6424], "text": ["Note:  This value is only used for off-line rendering, not IPR."]}], "indent": 0, "text": ["Cache Memory Ratio"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:cacheratio"}, "extent": [5827, 5849], "type": "parameters_item", "id": "karma:global:cacheratio"}, {"body": [{"indent": 4, "type": "para", "extent": [6503, 6634], "text": ["An explicit memory limit for the unified shading cache.  This is deprecated\n    in favor of using the ", {"text": ["Cache Memory Ratio"], "type": "ui"}, "."]}, {"indent": 4, "type": "para", "extent": [6634, 6703], "text": ["Note:  This value is only used for off-line rendering, not IPR."]}], "indent": 0, "text": ["Cache Size (MB)"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:cachesize"}, "extent": [6424, 6443], "type": "parameters_item", "id": "karma:global:cachesize"}, {"body": [{"indent": 4, "type": "para", "extent": [7983, 8092], "text": ["The number of ray-samples sent through each pixel.  More samples will\n    result in a less noisy image."]}], "indent": 0, "text": ["Pixel Samples"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:samplesperpixel"}, "extent": [7901, 7918], "type": "parameters_item", "id": "karma:global:samplesperpixel"}, {"body": [{"indent": 4, "type": "para", "extent": [6771, 6814], "text": ["The ray-bias used for secondary rays."]}], "indent": 0, "text": ["Ray Bias"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:raybias"}, "extent": [6703, 6715], "type": "parameters_item", "id": "karma:global:raybias"}, {"body": [], "indent": 0, "text": ["Screendoor Limit"], "role": "item", "attrs": {"status": "nd", "kagroup": "Shading", "hprop": "karma:global:screendoorlimit"}, "extent": [8092, 8112], "type": "parameters_item", "id": "karma:global:screendoorlimit"}, {"body": [{"indent": 4, "type": "para", "extent": [3153, 3258], "text": ["Disable all lighting and material evaluation, using only the display color\n    to shade primitives."]}], "indent": 0, "text": ["Disable Lighting"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:disable_lighting"}, "extent": [3068, 3088], "type": "parameters_item", "id": "karma:global:disable_lighting"}, {"body": [{"indent": 4, "type": "para", "extent": [3625, 3723], "text": ["When rendering in headlight mode, perform this many ambient occlusion\n    samples per shade."]}], "indent": 0, "text": ["Headlight AO Samples"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_ao_samples"}, "extent": [3537, 3561], "type": "parameters_item", "id": "karma:global:head_ao_samples"}, {"body": [{"indent": 4, "type": "para", "extent": [3348, 3537], "text": ["When rendering in headlight mode with ambient occlusion shading, this\n    distance is used for occlusion testing.  Smaller values will result in\n    faster, but less accurate shading."]}], "indent": 0, "text": ["Headlight AO Distance"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_ao_distance"}, "extent": [3258, 3283], "type": "parameters_item", "id": "karma:global:head_ao_distance"}, {"body": [{"indent": 4, "type": "para", "extent": [4055, 4113], "text": ["The color of the depthcue fog for disabled lighting."]}], "indent": 0, "text": ["Headlight Fog Color"], "role": "item", "attrs": {"kagroup": "Shading", "hprop": "karma:global:head_depthcue_color"}, "extent": [3964, 3987], "type": "parameters_item", "id": "karma:global:head_depthcue_color"}, {"body": [{"indent": 4, "type": "para", "extent": [8284, 8491], "text": ["Whether Karma should perform uniform sampling of lights or whether\n    rendering should use the light tree.  The light tree can be significantly\n    faster for scenes that have large numbers of lights."]}], "indent": 0, "text": ["Light Sampling Mode"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:light_sampling_mode"}, "extent": [8192, 8215], "type": "parameters_item", "id": "karma:global:light_sampling_mode"}, {"body": [{"indent": 4, "type": "para", "extent": [8589, 8833], "text": ["This is a global control to improve sampling quality for all lights.  This\n    acts as a multiplier on the individual light quality controls.  Increasing\n    the quality will improve direct light sampling as well as\n    shadows/occlusion."]}], "indent": 0, "text": ["Light Sampling Quality"], "role": "item", "attrs": {"kagroup": "Sampling", "hprop": "karma:global:light_sampling_quality"}, "extent": [8491, 8517], "type": "parameters_item", "id": "karma:global:light_sampling_quality"}, {"body": [{"indent": 4, "type": "para", "extent": [9775, 10072], "text": ["The maximum value a shading sample is allowed to contribute to an LPE image\n    plane to reduce appearance of \"fireflies\" caused by undersampling of \n    extremely bright light sources. Note that reducing this value can result in\n    an overall reduction in the amount of light in your scene"]}], "indent": 0, "text": ["Color Limit"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:colorlimit"}, "extent": [9699, 9714], "type": "parameters_item", "id": "karma:global:colorlimit"}, {"body": [{"indent": 4, "type": "para", "extent": [6887, 6914], "text": ["The rendering camera."]}], "indent": 0, "text": ["Camera"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:rendercamera"}, "extent": [6814, 6824], "type": "parameters_item", "id": "karma:global:rendercamera"}, {"body": [{"indent": 4, "type": "para", "extent": [9105, 9699], "text": ["This parameter controls the shading quality scale factor for geometry that\n    is not directly visible to the camera. For geometry that is outside the\n    field of view (ie. visible only to secondary rays), mantra will smoothly\n    reduce the shading quality based on the angle between the geometry and the\n    edge of the viewing frustum.  Smaller values can increase performance\n    particularly in scenes where the camera is within the displacement bound of\n    nearby geometry, where it permits the hidden primitives to be diced more\n    coarsely than those that are directly visible."]}], "indent": 0, "text": ["Offscreen Quality"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:offscreenquality"}, "extent": [9017, 9038], "type": "parameters_item", "id": "karma:global:offscreenquality"}, {"body": [{"indent": 4, "type": "para", "extent": [8905, 9017], "text": ["Karma breaks down an image into multiple tiles for rendering.  This\n    specifies the size of these tiles."]}], "indent": 0, "text": ["Tile Size"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:tilesize"}, "extent": [8833, 8846], "type": "parameters_item", "id": "karma:global:tilesize"}, {"body": [{"indent": 4, "type": "para", "extent": [5048, 5128], "text": ["Image filters post-process the filtered pixels to produce the final image."]}, {"indent": 4, "type": "para", "extent": [5128, 5226], "text": ["This parameter specifies a list of filters.  These filters are specified as\n    a JSON list."]}], "indent": 0, "text": ["Image Filters"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:imagefilter"}, "extent": [4973, 4990], "type": "parameters_item", "id": "karma:global:imagefilter"}, {"body": [{"indent": 4, "type": "para", "extent": [7713, 7803], "text": ["Sample filters are used to modify samples before they are sent to pixel\n    filters."]}, {"indent": 4, "type": "para", "extent": [7803, 7901], "text": ["This parameter specifies a list of filters.  These filters are specified as\n    a JSON list."]}], "indent": 0, "text": ["Sample Filter"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:samplefilter"}, "extent": [7637, 7654], "type": "parameters_item", "id": "karma:global:samplefilter"}, {"body": [{"indent": 4, "type": "para", "extent": [5300, 5422], "text": ["When rendering, a Pixel Oracle tells karma which pixels need additional\n    sampling and which pixels are converged."]}, {"indent": 4, "type": "para", "extent": [5422, 5475], "text": ["This parameter tells karma which oracle to use."]}], "indent": 0, "text": ["Pixel Oracle"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:pixeloracle"}, "extent": [5226, 5242], "type": "parameters_item", "id": "karma:global:pixeloracle"}, {"body": [{"indent": 4, "type": "para", "extent": [5551, 5603], "text": ["This is the random seed to use for the render."]}], "indent": 0, "text": ["Random Seed"], "role": "item", "attrs": {"kagroup": "Rendering", "hprop": "karma:global:randomseed"}, "extent": [5475, 5490], "type": "parameters_item", "id": "karma:global:randomseed"}, {"body": [{"indent": 4, "type": "para", "extent": [183, 300], "text": ["Enabling this option will cause karma to abort the render with an error if it encounters a missing texture map."]}], "indent": 0, "text": ["Abort Missing Texture"], "role": "item", "attrs": {"kagroup": "Control", "hprop": "karma:global:abortmissingtexture"}, "extent": [89, 115], "type": "parameters_item", "id": "karma:global:abortmissingtexture"}, {"body": [{"indent": 4, "type": "para", "extent": [1081, 1435], "text": ["A whitespace-separated list of shading component names that will be\n    computed for export. If you have defined new component labels in your\n    materials, these can be added to the list so that they are exported for\n    per-component export planes. If you are not using some components, remove\n    them from the list to improve render efficiency."]}, {"indent": 4, "type": "para", "extent": [1435, 1656], "text": ["PBR light exports assume that this list is complete - that is, all\n    components created by shaders are listed. If there are unlisted components,\n    light exports may be missing illumination from these components."]}], "indent": 0, "text": ["Export Components"], "role": "item", "attrs": {"kagroup": "Image", "hprop": "karma:global:exportcomponents"}, "extent": [997, 1018], "type": "parameters_item", "id": "karma:global:exportcomponents"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Karma"], "extent": [3959, 3971], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [580, 592], "container": true, "type": "parameters_section", "id": "parameters"}], "title": ["Render Settings"], "summary": ["Creates or edits a UsdRenderSettings prim, which holds the general settings for rendering the scene."], "attrs": {"group": "rendering", "version": null, "namespace": null, "internal": "rendersettings", "context": "lop", "type": "node", "icon": "LOP/rendersettings"}, "included": ["/nodes/lop/_simple_prims", "/props/karma"], "type": "root"}