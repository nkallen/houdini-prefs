{"body": [{"indent": 0, "text": ["ROP Fetch"], "type": "title", "extent": [76, 90], "level": 0}, {"indent": 0, "type": "summary", "extent": [90, 149], "text": ["Creates work items that cook a ROP node or network"]}, {"indent": 0, "type": "para", "extent": [149, 348], "text": ["This node can be used to cook a ROP node or network using TOPs in either the\ncurrent .hip file or an external file. It will create one work item per frame,\nbased on the frame generation parameters."]}, {"indent": 0, "type": "para", "extent": [348, 805], "text": ["The work items can optionally be batched into a single job for all frames, or\ndivided into smaller groups of frames. Each batch is cooked as a single job on\nthe farm or locally. Batching all frames into one job is typically used for\nsimulations so that simulation data can be kept in memory rather than cached\nto disk. Smaller batch sizes such a 4 frames per job can be useful when cooking\na ROP that cooks quickly to avoid overhead loading the .hip file."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [850, 909], "text": ["The path to the .hip file that contains the ROP node."]}], "indent": 0, "text": [{"text": ["hip"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [821, 831], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [944, 1133], "text": ["The name of the parameter on the target ROP node that contains the output\n    file path. For example, when used with a ROP Geometry node this attribute\n    will be set to ", {"text": ["sopoutput"], "type": "code"}, "."]}], "indent": 0, "text": [{"text": ["outputparm"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [909, 925], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1161, 1206], "text": ["The ROP node path within the .hip file."]}], "indent": 0, "text": [{"text": ["rop"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [1133, 1142], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1234, 1375], "text": ["If the ROP is contained within a TOP asset, such as the ROP Geometry\n    node, then this attribute is set to the path to that TOP node."]}], "indent": 0, "text": [{"text": ["top"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [1206, 1215], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1407, 1495], "text": ["When doing a distributed sim, this is set to the path to the Control DOP\n    node."]}], "indent": 0, "text": [{"text": ["control"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [1375, 1388], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1532, 1647], "text": ["When doing a distributed sim, this attribute is set to the identifier for\n    the shared sim tracker process."]}], "indent": 0, "text": [{"text": ["sharedserver"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [1495, 1513], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1683, 1813], "text": ["When doing a distributed sim, this attribute is set to the hostname of the\n    machine that has the distributed sim tracker."]}], "indent": 0, "text": [{"text": ["trackerhost"], "type": "code"}], "role": "item", "attrs": {"type": "string"}, "extent": [1647, 1664], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1850, 2086], "text": ["When doing a distributed sim, this attribute is set to the port used to\n    connect to the sim tracker. Together with ths ", {"text": ["trackerhost"], "type": "code"}, ", this forms\n    the complete address of the simulation tracker, i.e. ", {"text": ["trackerhost:trackerpor"], "type": "code"}, "."]}], "indent": 0, "text": [{"text": ["trackerport"], "type": "code"}], "role": "item", "attrs": {"type": "integer"}, "extent": [1813, 1830], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2116, 2299], "text": ["The start, end and increment frame range values associated with the work\n    item. If the work item is in a batch, these values will refer to the range\n    for the entire batch."]}], "indent": 0, "text": [{"text": ["range"], "type": "code"}], "role": "item", "attrs": {"type": "float3"}, "extent": [2086, 2097], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2330, 2442], "text": ["When doing a distributed sim, this attribute is set to the slice number\n    associated with the work item."]}], "indent": 0, "text": [{"text": ["slice"], "type": "code"}], "role": "item", "attrs": {"type": "integer"}, "extent": [2299, 2310], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2477, 2572], "text": ["The type of distributed since being used, set to either Particles (0) or\n    Volumes (1)."]}], "indent": 0, "text": [{"text": ["slicetype"], "type": "code"}], "role": "item", "attrs": {"type": "integer"}, "extent": [2442, 2457], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2608, 2700], "text": ["When using Volume slices, this attribute is set to the x, y and z slice\n    divisions."]}], "indent": 0, "text": [{"text": ["slicedivs"], "type": "code"}], "role": "item", "attrs": {"type": "integer3"}, "extent": [2572, 2587], "type": "top_attributes_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2735, 2874], "text": ["When using the ROP Fetch to cook a tiled Mantra render, this value is set\n    to the render tile index associated with the work item."]}], "indent": 0, "text": [{"text": ["tileindex"], "type": "code"}], "role": "item", "attrs": {"type": "integer"}, "extent": [2700, 2715], "type": "top_attributes_item"}], "container": true, "role": "item_group", "type": "top_attributes_item_group"}], "indent": 0, "level": 1, "text": "Top_attributes", "role": "section", "extent": [805, 821], "container": true, "type": "top_attributes_section", "id": "top_attributes"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [71, 319], "text": ["Whether this node generates ", {"fragment": "#static", "text": ["static or dynamic"], "value": "/tops/intro#static", "fullpath": "/tops/intro#static", "scheme": null, "type": "link"}, " work items. You should generally leave this set to \"Automatic\" unless you know the node\u2019s work items can be computed statically, or that they need to be generated dynamically."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [332, 495], "text": ["This node always creates dynamic work items: it waits until the upstream work items are known, and generates new work items from the upstream work items."]}], "type": "dt", "indent": 4, "extent": [319, 332], "text": ["Dynamic"]}, {"body": [{"type": "para", "indent": 8, "extent": [507, 696], "text": ["This node always creates static work items: it creates the number of work items it thinks it needs based on the parameters (and any upstream static items) before the network runs."]}], "type": "dt", "indent": 4, "extent": [495, 507], "text": ["Static"]}, {"body": [{"type": "para", "indent": 8, "extent": [711, 902], "text": ["If the input is static (a static processor, or a partitioner with only static inputs, or a mapper), this node generates static work items, otherwise it generates dynamic work items."]}], "type": "dt", "indent": 4, "extent": [696, 711], "text": ["Automatic"]}], "type": "dt_group", "container": true}], "indent": 0, "text": ["Work Item Generation"], "role": "item", "attrs": {"id": "pdg_workitemgeneration"}, "extent": [16, 38], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1190, 1272], "text": ["How the processor node handles work items that report expected file results."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1287, 1476], "text": ["If the expected result file exists on disk, the work item is marked as\n        cooked without being scheduled. If the file does not exist, the item\n        is scheduled as normal."]}], "indent": 4, "type": "dt", "extent": [1272, 1287], "text": ["Automatic"]}, {"body": [{"indent": 8, "type": "para", "extent": [1492, 1665], "text": ["If the expected result file exists on disk, the work item is marked as\n        cooked without being scheduled. Otherwise the work item is marked as\n        failed."]}], "indent": 4, "type": "dt", "extent": [1476, 1492], "text": ["Read Files"]}, {"body": [{"indent": 8, "type": "para", "extent": [1682, 1799], "text": ["Work items are always scheduled and the excepted result file is ignored,\n        even if it exists on disk."]}], "indent": 4, "type": "dt", "extent": [1665, 1682], "text": ["Write Files"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Cache Mode"], "role": "item", "attrs": {"id": "pdg_cachemode"}, "extent": [1154, 1166], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3008, 3087], "text": ["The path to the ROP node or network that will be cooked by this TOP node."]}], "indent": 0, "text": ["ROP Path"], "role": "item", "attrs": {"id": "roppath"}, "extent": [2980, 2990], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3128, 3563], "text": ["This parm can be used to specify the name of the output file parm on the \n    target ROP node. By default, PDG is able to to automatically determine the\n    output name based on the type of ROP, for standard ROP nodes shipped with\n    Houdini. When using a custom ROP or a ROP that PDG fails to detect\n    automatically, this parameter should be set to the string name of the output\n    parm on the ROP specified in ", {"text": ["ROP Path"], "type": "ui"}, "."]}], "indent": 0, "text": ["Output Parm Name"], "role": "item", "attrs": {"id": "customoutput"}, "extent": [3087, 3105], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3604, 3755], "text": ["The path to the .hip file that contains the ROP node. When selecting a ROP\n    in the current file it is not necessary to specify this parameter."]}, {"indent": 4, "type": "para", "extent": [3755, 3875], "text": ["This is typically used when generating a .hip file procedurally as part of\n    an earlier step in the TOP network."]}], "indent": 0, "text": ["External HIP File"], "role": "item", "attrs": {"id": "externalhip"}, "extent": [3563, 3582], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2203, 2480], "text": ["Determines how the TOP node creates work items and executes. When\n    using ", {"text": ["Single Frame"], "type": "ui"}, " the node will create one work item for each upstream\n    frame. When using ", {"text": ["Frame Range"], "type": "ui"}, " the node creates one work item per frame\n    in the range, for each upstream work item."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2498, 2833], "text": ["The node will create a single work item per upstream item, and will set\n        the new work item\u2019s frame to match the upstream item\u2019s frame. If there\n        are no input nodes then a single item set to frame 1 will be created.\n        The single frame value can be overridden using the ", {"text": ["Override Frame"], "type": "ui"}, "\n        parameter."]}], "indent": 4, "type": "dt", "extent": [2480, 2498], "text": ["Single Frame"]}, {"body": [{"indent": 8, "type": "para", "extent": [2850, 3062], "text": ["For each upstream work item, the node will create the full frame range of\n        work items. If there are no upstream items, the node will create one\n        set of items for the specified frame range."]}], "indent": 4, "type": "dt", "extent": [2833, 2850], "text": ["Frame Range"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Evaluate Using"], "role": "item", "attrs": {"id": "framegeneration"}, "extent": [2161, 2177], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3102, 3214], "text": ["When this parameter is enabled, it overrides the frame used with the\n    ", {"text": ["Single Frame"], "type": "ui"}, " Evaluation mode."]}], "indent": 0, "text": ["Override Frame"], "role": "item", "attrs": {"id": "frameoverride"}, "extent": [3062, 3078], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3243, 3348], "text": ["The frame start, end and step size to use when ", {"text": ["Frame Generation"], "type": "ui"}, " is set \n    to ", {"text": ["Frame Range"], "type": "ui"}, "."]}], "indent": 0, "text": ["Frame Range"], "role": "item", "attrs": {"id": "range"}, "extent": [3214, 3227], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4049, 4347], "text": ["When ", {"text": ["Evaluating Using"], "type": "ui"}, " is set to ", {"text": ["Frame Range"], "type": "ui"}, " this toggle can be\n    used to group the work for all frames into a single work item. This option\n    is typically used when cooking a ROP that produces an FBX, Alembic or USD\n    file that contains multiple frames of data in the same file."]}], "indent": 0, "text": ["Cook Frames as Single Work Item"], "role": "item", "attrs": {"id": "singletask"}, "extent": [3995, 4028], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4409, 4553], "text": ["When ", {"text": ["Evaluating Using"], "type": "ui"}, " is set to ", {"text": ["Frame Range"], "type": "ui"}, " this toggle can be\n    used to spread the input file list list across the frame range."]}, {"indent": 4, "type": "para", "extent": [4553, 4839], "text": ["For example, if the upstream work item has 100 output files and the\n    frame range on this node is set to 1 to 50, each work item in this node\n    will have 2 input files. The first work item will have file 1 and file 2,\n    the second work item will have file 3 and file 4, etc."]}], "indent": 0, "text": ["Expand Input Files Across Frame Range"], "role": "item", "attrs": {"id": "expandinputs"}, "extent": [4347, 4386], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3392, 3665], "text": ["When this toggle is enabled, work items from the same frame range are\n    grouped into a batch that is scheduled as a single job. This is used for\n    simulations where each frame depends on the previous frame, and it is\n    advantageous to keep everything in memory."]}], "indent": 0, "text": ["All Frames in One Batch"], "role": "item", "attrs": {"id": "batchall"}, "extent": [3348, 3373], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3708, 3897], "text": ["By default, when this parameter is at 1 each work item is cooked as a \n    separate job. When this parameter is set to a value greater than 1, work\n    items are grouped into batches."]}], "indent": 0, "text": ["Frames per Batch"], "role": "item", "attrs": {"id": "framesperbatch"}, "extent": [3665, 3683], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4955, 5186], "text": ["Determines when batches of frames are scheduled. By default the batch will\n    be scheduled once the dependencies for all frames are cooked, however it is\n    possible to schedule the batch as soon as its first frame can run."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5212, 5326], "text": ["The batch will only be scheduled once all dependencies on all frames in\n        the batch are satisfied."]}], "indent": 4, "type": "dt", "extent": [5186, 5212], "text": ["All Frames are Ready"]}, {"body": [{"indent": 8, "type": "para", "extent": [5352, 5715], "text": ["The batch will be scheduled as soon as its first frame is ready. This is\n        possible because the ROP wrapper script used by PDG will ensure that\n        subsequent frames correctly wait for their dependencies. This is done by\n        communicating back to PDG as the job is running to check the status of\n        the dependencies before each frame."]}, {"indent": 8, "type": "para", "extent": [5715, 6012], "text": ["This incurs slightly more network overhead, and requires ongoing \n        communication between the job and PDG. This option is not available\n        when cooking a ROP Composite node since COP files nodes must be able to\n        load their entire input file sequence on the first frame."]}], "indent": 4, "type": "dt", "extent": [5326, 5352], "text": ["First Frame is Ready"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Cook Batch When"], "role": "item", "attrs": {"id": "cookwhen"}, "extent": [4919, 4936], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6051, 6275], "text": ["When this toggle is enabled, the node will treat the target ROP as part of \n    a distributed simulation. This enables the parameters for configuring a\n    distributed sim, and disables the frame generation parameters."]}], "indent": 0, "text": ["Distributed Sim"], "role": "item", "attrs": {"id": "distributed"}, "extent": [6012, 6029], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6306, 6352], "text": ["The control DOP for the distributed sim."]}], "indent": 0, "text": ["Control DOP"], "role": "item", "attrs": {"id": "control"}, "extent": [6275, 6288], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6384, 6487], "text": ["The type of slicing used for the distributed sim. Can be either\n    ", {"text": ["Particles"], "type": "ui"}, " or ", {"text": ["Volumes"], "type": "ui"}, "."]}], "indent": 0, "text": ["Slice Type"], "role": "item", "attrs": {"id": "slicetype"}, "extent": [6352, 6364], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6521, 6608], "text": ["When using the ", {"text": ["Particles"], "type": "ui"}, " slice type, specifies how many slices there\n    are."]}], "indent": 0, "text": ["Slice Count"], "role": "item", "attrs": {"id": "slicecount"}, "extent": [6487, 6500], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6645, 6755], "text": ["When using the ", {"text": ["Volumes"], "type": "ui"}, " slice type, determines the x, y and z volume\n    divisions for the simulation."]}], "indent": 0, "text": ["Slice Divisions"], "role": "item", "attrs": {"id": "slicedivs"}, "extent": [6608, 6625], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [2874, 2886], "container": true, "type": "parameters_section", "id": "parameters"}], "title": ["ROP Fetch"], "summary": ["Creates work items that cook a ROP node or network"], "attrs": {"version": null, "namespace": null, "internal": "ropfetch", "context": "top", "type": "node", "icon": "TOP/ropfetch"}, "included": ["/nodes/top/processor_common"], "type": "root"}