{"body": [{"indent": 0, "text": ["Attribute Create"], "type": "title", "extent": [0, 21], "level": 0}, {"indent": 0, "type": "summary", "extent": [109, 173], "text": ["Creates or sets an attribute on all incoming work items."]}, {"indent": 0, "type": "para", "extent": [173, 417], "text": ["This node lets you change internal attributes (", {"text": ["pdg_index"], "type": "code"}, ", ", {"text": ["pdg_frame"], "type": "code"}, ", ", {"text": ["pdg_priority"], "type": "code"}, ", ", {"text": ["pdg_output"], "type": "code"}, "), as well as create/set custom attributes. If an attribute with the given name and type already exists, this will overwrite its size/value."]}, {"body": [{"indent": 0, "text": [" Create "], "type": "sep", "extent": [429, 447], "level": 4}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [71, 319], "text": ["Whether this node generates ", {"fragment": "#static", "text": ["static or dynamic"], "value": "/tops/intro#static", "fullpath": "/tops/intro#static", "scheme": null, "type": "link"}, " work items. You should generally leave this set to \"Automatic\" unless you know the node\u2019s work items can be computed statically, or that they need to be generated dynamically."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [332, 495], "text": ["This node always creates dynamic work items: it waits until the upstream work items are known, and generates new work items from the upstream work items."]}], "type": "dt", "indent": 4, "extent": [319, 332], "text": ["Dynamic"]}, {"body": [{"type": "para", "indent": 8, "extent": [507, 696], "text": ["This node always creates static work items: it creates the number of work items it thinks it needs based on the parameters (and any upstream static items) before the network runs."]}], "type": "dt", "indent": 4, "extent": [495, 507], "text": ["Static"]}, {"body": [{"type": "para", "indent": 8, "extent": [711, 902], "text": ["If the input is static (a static processor, or a partitioner with only static inputs, or a mapper), this node generates static work items, otherwise it generates dynamic work items."]}], "type": "dt", "indent": 4, "extent": [696, 711], "text": ["Automatic"]}], "type": "dt_group", "container": true}], "indent": 0, "text": ["Work Item Generation"], "role": "item", "attrs": {"id": "pdg_workitemgeneration"}, "extent": [16, 38], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [532, 833], "text": ["If you turn this on, the node only creates/sets the attribute(s) below to work items where the given expression evaluates to a non-zero value. For example, to only set an attribute on work items whose ", {"text": ["index"], "type": "code"}, " is greater than 5, turn on ", {"text": ["Create when"], "type": "ui"}, " and set the expression to ", {"text": ["@pdg_index > 5"], "type": "code"}, "."]}], "indent": 0, "text": ["Create When"], "role": "item", "attrs": {"id": "condition"}, "extent": [499, 512], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Work Item "], "type": "sep", "extent": [833, 853], "level": 4}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [882, 1154], "text": ["If you turn this on, the node sets each work item\u2019s internal ", {"text": ["index"], "type": "code"}, " attribute to the result of the given expression. For example, to set each work item\u2019s index to be the value of its ", {"text": ["foo"], "type": "code"}, " attribute minus one, turn on ", {"text": ["Index"], "type": "ui"}, " and set the expression to ", {"text": ["@foo - 1"], "type": "code"}, "."]}], "indent": 0, "text": ["Index"], "role": "item", "attrs": {"id": "indexvalue"}, "extent": [853, 861], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1182, 1465], "text": ["If you turn this on, the node sets each work item\u2019s internal ", {"text": ["frame"], "type": "code"}, " attribute to the result of the given expression. For example, to set each work item\u2019s frame number to be the value of its ", {"text": ["source_frame"], "type": "code"}, " attribute, turn on ", {"text": ["Frame"], "type": "ui"}, " and set the expression to ", {"text": ["@source_frame"], "type": "code"}, "."]}], "indent": 0, "text": ["Frame"], "role": "item", "attrs": {"id": "framevalue"}, "extent": [1154, 1161], "type": "parameters_item"}, {"body": [{"indent": 3, "type": "para", "extent": [1499, 1717], "text": ["If you turn this on, the node sets each work item\u2019s internal ", {"text": ["priority"], "type": "code"}, " attribute to the result of the given expression. Work items with higher ", {"text": ["priority"], "type": "code"}, " values are scheduled before work items with lower numbers."]}], "indent": 0, "text": ["Priority"], "role": "item", "attrs": {"id": "priorityvalue"}, "extent": [1465, 1475], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Attributes "], "type": "sep", "extent": [1717, 1738], "level": 4}, {"indent": 0, "type": "para", "extent": [1738, 2271], "text": ["The parameters in this section can be used to create work item attributes of various types. Integer and Float attributes can be created with an array size between 1 and 4, and other attribute types can only be set to scalar values. If you need to create attributes that contain an array of strings or have a longer array length, consider using a ", {"text": ["Python Processor"], "fullpath": "/nodes/top/pythonprocessor", "scheme": "Node", "type": "link", "value": "/nodes/top/pythonprocessor"}, " or ", {"text": ["Python Script"], "fullpath": "/nodes/top/pythonscript", "scheme": "Node", "type": "link", "value": "/nodes/top/pythonscript"}, " instead. Attributes can be created using the PDG work item Python API: ", {"fragment": "#addAttrib", "text": "", "value": "pdg.WorkItem#addAttrib", "fullpath": "/nodes/top/pdg.WorkItem#addAttrib", "scheme": "Py", "type": "link"}, "."]}, {"indent": 0, "text": [" Strings "], "type": "sep", "extent": [2271, 2289], "level": 4}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [2323, 2396], "text": ["A multi-parm allowing you to add/set one or more string attributes."]}], "indent": 0, "text": ["Strings"], "role": "item", "attrs": {"id": "stringattribs"}, "extent": [2289, 2299], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2423, 2473], "text": ["The name of the string attribute to add/set."]}], "indent": 0, "text": ["Name"], "role": "item", "attrs": {"id": "stringname"}, "extent": [2396, 2402], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2513, 3007], "text": ["Determines how to handle a conflict when an existing attribute with the same name is found. If you choose ", {"text": ["Replace Existing Attribute"], "type": "ui"}, " the node will delete the old attribute and add a one described by this multiparm entry. ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " will attempt to update the value if the attribute type matches, otherwise it will issue a warning. ", {"text": ["Generate Warning"], "type": "ui"}, " and ", {"text": ["Generate Error"], "type": "ui"}, " will cause the node to issue a warning or error if the attributes types don\u2019t match."]}], "indent": 0, "text": ["Existing Name"], "role": "item", "attrs": {"id": "stringconflict"}, "extent": [2473, 2488], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3036, 3237], "text": ["The value of the string attribute. This can be an expression that is evaluated for each incoming work item, however remember that in string parameters you must put expressions inside back-ticks."]}], "indent": 0, "text": ["Value"], "role": "item", "attrs": {"id": "stringvalue"}, "extent": [3007, 3014], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Integer Arrays "], "type": "sep", "extent": [3237, 3262], "level": 4}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [3298, 3372], "text": ["A multi-parm allowing you to add/set one or more integer attributes."]}], "indent": 0, "text": ["Integers"], "role": "item", "attrs": {"id": "integerattribs"}, "extent": [3262, 3273], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3396, 3447], "text": ["The name of the integer attribute to add/set."]}], "indent": 0, "text": ["Name"], "role": "item", "attrs": {"id": "intname"}, "extent": [3372, 3378], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3484, 3978], "text": ["Determines how to handle a conflict when an existing attribute with the same name is found. If you choose ", {"text": ["Replace Existing Attribute"], "type": "ui"}, " the node will delete the old attribute and add a one described by this multiparm entry. ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " will attempt to update the value if the attribute type matches, otherwise it will issue a warning. ", {"text": ["Generate Warning"], "type": "ui"}, " and ", {"text": ["Generate Error"], "type": "ui"}, " will cause the node to issue a warning or error if the attributes types don\u2019t match."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3987, 4331], "text": ["If you set this parameter to ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " and specify a ", {"text": ["Size"], "type": "ui"}, " value that is less than the size of an existing attribute array, only the first ", {"text": ["Size"], "type": "ui"}, " components will be updated. For example, you can use this to update the first three values in a four-component vector without affecting the fourth component."]}], "indent": 4, "role": "item", "type": "tip", "extent": [3978, 3987]}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "text": ["Existing Name"], "role": "item", "attrs": {"id": "intconflict"}, "extent": [3447, 3462], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4355, 4471], "text": ["The vector size of the new integer attribute (1-4). Use ", {"text": ["1"], "type": "code"}, " for a single scalar value, or ", {"text": ["3"], "type": "code"}, " for a 3D vector."]}], "indent": 0, "text": ["Size"], "role": "item", "attrs": {"id": "intsize"}, "extent": [4331, 4337], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4497, 4616], "text": ["The value for the new integer attribute. This can be an expression that is evaluated for each incoming work item."]}], "indent": 0, "text": ["Value"], "role": "item", "attrs": {"id": "intvalue"}, "extent": [4471, 4478], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Float Arrays "], "type": "sep", "extent": [4616, 4639], "level": 4}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [4671, 4743], "text": ["A multi-parm allowing you to add/set one or more float attributes."]}], "indent": 0, "text": ["Floats"], "role": "item", "attrs": {"id": "floatattribs"}, "extent": [4639, 4648], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4769, 4818], "text": ["The name of the float attribute to add/set."]}], "indent": 0, "text": ["Name"], "role": "item", "attrs": {"id": "floatname"}, "extent": [4743, 4749], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4857, 5351], "text": ["Determines how to handle a conflict when an existing attribute with the same name is found. If you choose ", {"text": ["Replace Existing Attribute"], "type": "ui"}, " the node will delete the old attribute and add a one described by this multiparm entry. ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " will attempt to update the value if the attribute type matches, otherwise it will issue a warning. ", {"text": ["Generate Warning"], "type": "ui"}, " and ", {"text": ["Generate Error"], "type": "ui"}, " will cause the node to issue a warning or error if the attributes types don\u2019t match."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5360, 5704], "text": ["If you set this parameter to ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " and specify a ", {"text": ["Size"], "type": "ui"}, " value that is less than the size of an existing attribute array, only the first ", {"text": ["Size"], "type": "ui"}, " components will be updated. For example, you can use this to update the first three values in a four-component vector without affecting the fourth component."]}], "indent": 4, "role": "item", "type": "tip", "extent": [5351, 5360]}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "text": ["Existing Name"], "role": "item", "attrs": {"id": "floatconflict"}, "extent": [4818, 4833], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5730, 5844], "text": ["The vector size of the new float attribute (1-4). Use ", {"text": ["1"], "type": "code"}, " for a single scalar value, or ", {"text": ["3"], "type": "code"}, " for a 3D vector."]}], "indent": 0, "text": ["Size"], "role": "item", "attrs": {"id": "floatsize"}, "extent": [5704, 5710], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5872, 5989], "text": ["The value for the new float attribute. This can be an expression that is evaluated for each incoming work item."]}], "indent": 0, "text": ["Value"], "role": "item", "attrs": {"id": "floatvalue"}, "extent": [5844, 5851], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Python Objects "], "type": "sep", "extent": [5989, 6014], "level": 4}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [6052, 6127], "text": ["A multi-parm allowing you to add/set one or more PyObject attributes."]}], "indent": 0, "text": ["PyObjects"], "role": "item", "attrs": {"id": "pyobjectattribs"}, "extent": [6014, 6026], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6156, 6208], "text": ["The name of the PyObject attribute to add/set."]}], "indent": 0, "text": ["Name"], "role": "item", "attrs": {"id": "pyobjectname"}, "extent": [6127, 6133], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6250, 6744], "text": ["Determines how to handle a conflict when an existing attribute with the same name is found. If you choose ", {"text": ["Replace Existing Attribute"], "type": "ui"}, " the node will delete the old attribute and add a one described by this multiparm entry. ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " will attempt to update the value if the attribute type matches, otherwise it will issue a warning. ", {"text": ["Generate Warning"], "type": "ui"}, " and ", {"text": ["Generate Error"], "type": "ui"}, " will cause the node to issue a warning or error if the attributes types don\u2019t match."]}], "indent": 0, "text": ["Existing Name"], "role": "item", "attrs": {"id": "pyobjectconflict"}, "extent": [6208, 6223], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6785, 6917], "text": ["The Python expression for the new PyObject attribute. This can be an expression that is evaluated for each incoming work item."]}], "indent": 0, "text": ["Expression"], "role": "item", "attrs": {"id": "pyobjectexpression"}, "extent": [6744, 6756], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"indent": 0, "text": [" Files "], "type": "sep", "extent": [6917, 6933], "level": 4}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [6962, 7269], "text": ["A multi-parm allowing you to add/set one or more output file paths. (TOPs tracks, for each work item, the file paths of files created by that work item. Often the item\u2019s ", {"fragment": "#script", "text": ["work script"], "value": "/tops/stocknodes#script", "fullpath": "/tops/stocknodes#script", "scheme": null, "type": "link"}, " updates this information automatically, but you can also use this node to set it \"manually\")."]}], "indent": 0, "text": ["Files"], "role": "item", "attrs": {"id": "resultdata"}, "extent": [6933, 6941], "type": "parameters_item"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [7318, 7382], "text": ["The file is added to the work item\u2019s output file list."]}], "indent": 4, "type": "dt", "extent": [7301, 7318], "text": ["Output File"]}, {"body": [{"indent": 8, "type": "para", "extent": [7402, 7484], "text": ["The file is added to the work item as an attribute with the \"file\" type."]}], "indent": 4, "type": "dt", "extent": [7382, 7402], "text": ["File Attribute"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Create As"], "role": "item", "attrs": {"id": "resultmenu"}, "extent": [7269, 7280], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7525, 7616], "text": ["When ", {"text": ["Create As"], "type": "ui"}, " is set to ", {"text": ["Attribute"], "type": "ui"}, ", choose the name of the created attribute."]}], "indent": 0, "text": ["Attribute Name"], "role": "item", "attrs": {"id": "resultattrname"}, "extent": [7484, 7500], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7656, 8222], "text": ["This parameter is only used when ", {"text": ["Create As"], "type": "ui"}, " is set to ", {"text": ["Attribute"], "type": "ui"}, ". Determines how to handle a conflict when an existing attribute with the same name is found. If you choose ", {"text": ["Replace Existing Attribute"], "type": "ui"}, " the node will delete the old attribute and add a one described by this multiparm entry. ", {"text": ["Update Existing Attribute Value"], "type": "ui"}, " will attempt to update the value if the attribute type matches, otherwise it will issue a warning. ", {"text": ["Generate Warning"], "type": "ui"}, " and ", {"text": ["Generate Error"], "type": "ui"}, " will cause the node to issue a warning or error if the attributes types don\u2019t match."]}], "indent": 0, "text": ["Existing Name"], "role": "item", "attrs": {"id": "resultconflict"}, "extent": [7616, 7631], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8255, 8394], "text": ["A file path to add to each work item\u2019s list of file outputs. This can be an expression that is evaluated for each incoming work item."]}], "indent": 0, "text": ["File Path"], "role": "item", "attrs": {"id": "resultvalue"}, "extent": [8222, 8233], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8424, 8691], "text": ["The ", {"text": ["file tag"], "fullpath": "/tops/filetags", "scheme": null, "type": "link", "value": "/tops/filetags"}, " to apply to the added file path. For example, ", {"text": ["file/geo"], "type": "code"}, " or ", {"text": ["file/pic"], "type": "code"}, ". This can be an expression that is evaluated for each incoming work item, however remember that in string parameters you must put expressions inside back-ticks."]}], "indent": 0, "text": ["File Tag"], "role": "item", "attrs": {"id": "resulttag"}, "extent": [8394, 8404], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8738, 8997], "text": ["Determines if the node should verify that the file path exists and is readable before adding it to work items. You can have the node issue either a warning or error when the file path does not exist, or allow the node to skip file validation altogether."]}], "indent": 0, "text": ["Check File Path"], "role": "item", "attrs": {"id": "resultcheckfilepath"}, "extent": [8691, 8708], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [417, 429], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [9006, 9033], "text": [{"text": "", "fullpath": "/nodes/top/attributecopy", "scheme": "Node", "type": "link", "value": "/nodes/top/attributecopy"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [9033, 9062], "text": [{"text": "", "fullpath": "/nodes/top/attributedelete", "scheme": "Node", "type": "link", "value": "/nodes/top/attributedelete"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [9062, 9096], "text": [{"text": "", "fullpath": "/nodes/top/partitionbyattribute", "scheme": "Node", "type": "link", "value": "/nodes/top/partitionbyattribute"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [8997, 9006], "container": true, "type": "related_section", "id": "related"}], "title": ["Attribute Create"], "summary": ["Creates or sets an attribute on all incoming work items."], "attrs": {"version": null, "namespace": null, "internal": "attributecreate", "context": "top", "type": "node", "icon": "SOP/attribcreate"}, "included": ["/nodes/top/processor_common"], "type": "root"}