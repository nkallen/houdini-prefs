{"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [91, 279], "text": ["Turns this node on and off. The node is only active if this value is greater than 0. This is useful to control the effect of this node with an ", {"text": ["expression"], "fullpath": "/expressions/index", "scheme": null, "type": "link", "value": "/expressions/"}, "."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [293, 428], "text": ["This is activation of the node as a whole. You can\u2019t use this parameter to deactivate the node for certain particles."]}], "indent": 8, "role": "item", "type": "note", "extent": [279, 293]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "text": ["Activation"], "attrs": {"channels": "/activate"}, "extent": [45, 61], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [439, 737], "text": ["Only affect a group of points out of all the points in the input. If not specified, this will only affect the points in the current stream.  The current stream is found by walking up the chain of nodes until a node with the ", {"text": ["streamname"], "type": "code"}, " parameter is found, then that ", {"text": ["streamname"], "type": "code"}, " is used."]}], "indent": 4, "type": "dt", "extent": [428, 439], "text": ["Group"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "commonMain"}, "extent": [16, 45], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [791, 827], "text": ["Specifies the SOP to use."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [857, 923], "text": ["Use the SOP specified in the ", {"text": ["SOP"], "type": "ui"}, " parameter below."]}], "indent": 8, "type": "dt", "extent": [827, 857], "text": ["Use Parameter Values"]}, {"body": [{"indent": 12, "type": "para", "extent": [959, 1027], "text": ["Use the SOP connected to the DOP network\u2019s first input."]}], "indent": 8, "type": "dt", "extent": [923, 959], "text": ["Use First Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [1064, 1133], "text": ["Use the SOP connected to the DOP network\u2019s second input."]}], "indent": 8, "type": "dt", "extent": [1027, 1064], "text": ["Use Second Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [1169, 1237], "text": ["Use the SOP connected to the DOP network\u2019s third input."]}], "indent": 8, "type": "dt", "extent": [1133, 1169], "text": ["Use Third Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [1274, 1343], "text": ["Use the SOP connected to the DOP network\u2019s fourth input."]}], "indent": 8, "type": "dt", "extent": [1237, 1274], "text": ["Use Fourth Context Geometry"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "extent": [770, 791], "text": ["Geometry Source"]}, {"body": [{"indent": 8, "type": "para", "extent": [1352, 1447], "text": ["Path to the SOP (when ", {"text": ["Geometry Source"], "type": "ui"}, " is set to ", {"text": ["Use\n        Parameter Values"], "type": "ui"}, ")."]}], "indent": 4, "type": "dt", "extent": [1343, 1352], "text": ["SOP"]}, {"body": [{"indent": 8, "type": "para", "extent": [1473, 1732], "text": ["When ", {"text": ["Geometry Source"], "type": "ui"}, " is set to ", {"text": ["Use Parameter Values"], "type": "ui"}, ", the\n        transform of the object containing the chosen SOP is applied to the\n        geometry. This is useful if the location of the geometry is defined by\n        an object transform. "]}], "indent": 4, "type": "dt", "extent": [1447, 1473], "text": ["Use Object Transform"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "geoSourceParms"}, "extent": [737, 770], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1777, 1831], "text": ["Ignores any  ", {"text": ["mass"], "type": "code"}, "  on the input particles."]}, {"indent": 8, "type": "para", "extent": [1831, 2022], "text": ["Since forces are stored as ", {"text": ["force"], "type": "code"}, " rather than ", {"text": ["accel"], "type": "code"}, " (acceleration), this is done by multiplying the ", {"text": ["force"], "type": "code"}, " by the ", {"text": ["mass"], "type": "code"}, " attribute. This will then be canceled out by the solver."]}, {"indent": 8, "type": "para", "extent": [2022, 2078], "text": [{"text": ["airresist"], "type": "code"}, " will also be similarly multiplied."]}, {"indent": 8, "type": "para", "extent": [2078, 2230], "text": ["Ignoring mass ensures that small pieces of an RBD object move at the same speed as big pieces.  This makes for a more controllable simulation."]}], "indent": 4, "type": "dt", "extent": [1760, 1777], "text": ["Ignore Mass"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "massParms"}, "extent": [1732, 1760], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2279, 2370], "text": ["Ignores any  ", {"fragment": "#props", "text": ["charge attributes"], "value": "/particles/forces#props", "fullpath": "/particles/forces#props", "scheme": null, "type": "link"}, "  on the input particles."]}], "indent": 4, "type": "dt", "extent": [2260, 2279], "text": ["Ignore Charge"]}, {"body": [{"indent": 8, "type": "para", "extent": [2391, 2532], "text": ["Replaces any  ", {"fragment": "#props", "text": ["charge attributes"], "value": "/particles/forces#props", "fullpath": "/particles/forces#props", "scheme": null, "type": "link"}, "  on the input particles with the value of the ", {"text": ["Charge"], "type": "ui"}, " parameter below."]}], "indent": 4, "type": "dt", "extent": [2370, 2391], "text": ["Override Charge"]}, {"body": [{"indent": 8, "type": "para", "extent": [2572, 2627], "text": ["Charge to use when ", {"text": ["Override charge"], "type": "ui"}, " is on."]}], "indent": 4, "text": ["Charge"], "attrs": {"channels": "/charge"}, "extent": [2532, 2544], "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "chargeParms"}, "extent": [2230, 2260], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [2692, 2749], "text": ["Seed value for the random turbulence generator."]}], "indent": 4, "text": ["Seed"], "attrs": {"channels": "/seed"}, "extent": [2656, 2666], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2791, 2846], "text": ["Number of iterations of fractal noise to add."]}], "indent": 4, "text": ["Turbulence"], "attrs": {"channels": "/turb"}, "extent": [2749, 2765], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2888, 2939], "text": ["Scale of noise added with each iteration."]}], "indent": 4, "text": ["Roughness"], "attrs": {"channels": "/rough"}, "extent": [2846, 2861], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [2980, 3017], "text": ["Noise attenuation exponent."]}], "indent": 4, "text": ["Exponent"], "attrs": {"channels": "/atten"}, "extent": [2939, 2953], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3073, 3131], "text": ["Spatial frequency of noise field in X, Y, and Z."]}], "indent": 4, "text": ["Frequency"], "attrs": {"channels": "/freqx /freqy /freqz"}, "extent": [3017, 3032], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3171, 3210], "text": ["Maximum value of noise field."]}], "indent": 4, "text": ["Amplitude"], "attrs": {"channels": "/amp"}, "extent": [3131, 3146], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3269, 3324], "text": ["Amount to shift noise along X, Y, and Z axes."]}], "indent": 4, "text": ["Offset"], "attrs": {"channels": "/offsetx /offsety /offsetz"}, "extent": [3210, 3222], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [3340, 3445], "text": ["Method used to generate noise. ", {"text": ["Hermite Interpolation"], "type": "ui"}, " and ", {"text": ["Improved Hermite"], "type": "ui"}, " are fastest."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [3476, 3543], "text": ["Uses splines to interpolate values in the noise field."]}], "indent": 8, "type": "dt", "extent": [3445, 3476], "text": ["Hermite Interpolation"]}, {"body": [{"indent": 12, "type": "para", "extent": [3571, 3703], "text": ["More computationally expensive, but produces noise fields\n            free of artifacts present in the Hermite methods."]}], "indent": 8, "type": "dt", "extent": [3543, 3571], "text": ["Sparse Convolution"]}, {"body": [{"indent": 12, "type": "para", "extent": [3729, 3814], "text": ["Uses a more linear interpolation than Hermite\n            interpolation."]}], "indent": 8, "type": "dt", "extent": [3703, 3729], "text": ["Improved Hermite"]}, {"body": [{"indent": 12, "type": "para", "extent": [3839, 3911], "text": ["Provides a very different look than the other noise types."]}], "indent": 8, "type": "dt", "extent": [3814, 3839], "text": ["Alligator Noise"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "extent": [3324, 3340], "text": ["Noise Type"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "noiseParms"}, "extent": [2627, 2656], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3958, 4043], "text": ["Controls how the motion of particles is affected by the\n        collision."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [4069, 4096], "text": ["Particle dies."]}], "indent": 8, "type": "dt", "extent": [4043, 4069], "text": ["Die on collision"]}, {"body": [{"indent": 12, "type": "para", "extent": [4125, 4172], "text": ["Particle reflects off the surface."]}], "indent": 8, "type": "dt", "extent": [4096, 4125], "text": ["Bounce on collision"]}, {"body": [{"indent": 12, "type": "para", "extent": [4199, 4227], "text": ["Particle stops."]}], "indent": 8, "type": "dt", "extent": [4172, 4199], "text": ["Stop on collision"]}, {"body": [{"indent": 12, "type": "para", "extent": [4255, 4318], "text": ["Particle stops and attaches itself to the surface."]}], "indent": 8, "type": "dt", "extent": [4227, 4255], "text": ["Stick on collision"]}, {"body": [{"indent": 12, "type": "para", "extent": [4346, 4393], "text": ["Particle slides along the surface."]}], "indent": 8, "type": "dt", "extent": [4318, 4346], "text": ["Slide on collision"]}, {"body": [{"indent": 12, "type": "para", "extent": [4421, 4466], "text": ["Particle motion does not change."]}], "indent": 8, "type": "dt", "extent": [4393, 4421], "text": ["Continue on course"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "extent": [3943, 3958], "text": ["Behavior"]}, {"body": [{"indent": 8, "type": "para", "extent": [4487, 4588], "text": ["Generate this  ", {"text": ["event"], "fullpath": "/particles/events", "scheme": null, "type": "link", "value": "/particles/events"}, "  when any point collides with the target geometry."]}], "indent": 4, "type": "dt", "extent": [4466, 4487], "text": ["Collision Event"]}, {"body": [{"indent": 8, "type": "para", "extent": [4609, 4774], "text": ["The name of a group that will be created to contain the particles that collided. Subsequent operators can use this group to select the particles to affect."]}], "indent": 4, "type": "dt", "extent": [4588, 4609], "text": ["Collision Group"]}, {"body": [{"indent": 8, "type": "para", "extent": [4794, 4943], "text": ["If the group named in the ", {"text": ["Collision group"], "type": "ui"}, " parameter exists, add the collision particles to the group instead of replacing its contents."]}], "indent": 4, "type": "dt", "extent": [4774, 4794], "text": ["Preserve Group"]}, {"body": [{"indent": 8, "type": "para", "extent": [4962, 5144], "text": ["Controls what Houdini sets as the \"hit ID\" (the identity of the geometry the particle collided with). This lets you distinguish a particle that collided in this POP later."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [5159, 5238], "text": ["Sets the hit ID to the value of the ", {"text": ["Hit index"], "type": "ui"}, " parameter below."]}], "indent": 8, "type": "dt", "extent": [5144, 5159], "text": ["index"]}, {"body": [{"indent": 12, "type": "para", "extent": [5272, 5429], "text": ["Sets the hit ID to the value of the ", {"text": ["Hit index"], "type": "ui"}, " parameter below, ", {"text": ["added to"], "type": "em"}, " the primitive number of the primitive the particle collided with."]}, {"indent": 12, "type": "para", "extent": [5429, 5634], "text": ["Typically, you would use large steps for the ", {"text": ["Hit index"], "type": "ui"}, " parameter (hundreds or thousands) so you can still distinguish different collisions after the primitive number\n            is added."]}, {"indent": 12, "type": "para", "extent": [5634, 5973], "text": ["For example, you could have two Collision POPs with hit index settings of 100 and 200. When the Collision POP adds the primitive number to the hit index, you would get hit IDs\n            like 101, 102, 205, 210, and so on. As long as there is no primitive number larger than 99, you can still distinguish the different POPs."]}], "indent": 8, "type": "dt", "extent": [5238, 5272], "text": ["index + primitive number"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "extent": [4943, 4962], "text": ["Use as Hit ID"]}, {"body": [{"indent": 8, "type": "para", "extent": [6018, 6138], "text": ["Number to set in the \"hit ID\" of collision particles. This lets you distinguish different types of collisions."]}], "indent": 4, "text": ["Hit Index"], "attrs": {"channels": "/hitindex"}, "extent": [5973, 5988], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6184, 6350], "text": ["Available when ", {"text": ["Hint"], "type": "ui"}, " (on the ", {"text": ["Collision"], "type": "ui"}, " tab) is ", {"text": ["Translating Geometry"], "type": "ui"}, ". Oversamples the motion of the geometry for more accurate collisions."]}], "indent": 4, "text": ["Oversampling"], "attrs": {"channels": "/sample"}, "extent": [6138, 6156], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6399, 6531], "text": ["Available when ", {"text": ["Behavior"], "type": "ui"}, " is ", {"text": ["Bounce on collision"], "type": "ui"}, ". The maximum number of inter-frame bounces a particle will perform."]}], "indent": 4, "text": ["Bounce Accuracy"], "attrs": {"channels": "/bounce"}, "extent": [6350, 6371], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6578, 6621], "text": ["Energy loss tangent to collision."]}], "indent": 4, "text": ["Gain Tangent"], "attrs": {"channels": "/gaintan"}, "extent": [6531, 6549], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6667, 6709], "text": ["Energy loss normal to collision."]}], "indent": 4, "text": ["Gain Normal"], "attrs": {"channels": "/gainnml"}, "extent": [6621, 6638], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [6729, 7019], "text": ["You can optionally choose a different behavior to use when a particle\u2019s impulse falls below a minimum. For example, if you want particles to stop instead of traveling imperceptibly\n        slowly, set ", {"text": ["Final Behavior"], "type": "ui"}, " to ", {"text": ["Stop"], "type": "ui"}, " and ", {"text": ["Minimum Impulse"], "type": "ui"}, " to a low\n        number."]}], "indent": 4, "type": "dt", "extent": [6709, 6729], "text": ["Final Behavior"]}, {"body": [{"indent": 8, "type": "para", "extent": [7040, 7207], "text": ["Available when ", {"text": ["Final Behavior"], "type": "ui"}, " is not ", {"text": ["Bounce on collision"], "type": "ui"}, ". The impulse value below which a particle will switch to using ", {"text": ["Final Behavior"], "type": "ui"}, " parameter."]}], "indent": 4, "type": "dt", "extent": [7019, 7040], "text": ["Minimum Impulse"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Behavior"], "extent": [3911, 3943], "container": true, "type": "h", "id": "hitBehaveParms"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [7307, 7507], "text": ["Turns ", {"text": ["impulse"], "type": "em"}, " emission on and off. Impulse emits the number of particles in the ", {"text": ["Impulse Birth Rate"], "type": "ui"}, " below each time the operator cooks. A value of 0 means off, any other value means on."]}], "indent": 4, "text": ["Impulse Activation"], "attrs": {"channels": "/impulseactivate"}, "extent": [7246, 7270], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7559, 7658], "text": ["Number of particles to emit each time the node cooks (when ", {"text": ["Impulse activation"], "type": "ui"}, " is on)."]}], "indent": 4, "text": ["Impulse Count"], "attrs": {"channels": "/impulserate"}, "extent": [7507, 7526], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7718, 7903], "text": ["Turns ", {"text": ["constant"], "type": "em"}, " emission on and off. Impulse emits the number of particles in the ", {"text": ["Constant birth rate"], "type": "ui"}, " below each second. A value of 0 means off, any other value means on."]}], "indent": 4, "text": ["Const. Activation"], "attrs": {"channels": "/impulseactivate"}, "extent": [7658, 7681], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [7959, 8046], "text": ["Number of particles to emit per second (when ", {"text": ["Constant  Activation"], "type": "ui"}, " is on)."]}], "indent": 4, "text": ["Const. Birth Rate"], "attrs": {"channels": "/impulserate"}, "extent": [7903, 7926], "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "impulseConstantParms"}, "extent": [7207, 7246], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [8096, 8232], "text": ["Name of a group to put the new points into.  The particles will only be in this group the same substep that they were created."]}], "indent": 4, "type": "dt", "extent": [8075, 8096], "text": ["Just Born Group"]}, {"body": [{"indent": 8, "type": "para", "extent": [8279, 8334], "text": ["How long the particle will live (in seconds)."]}], "indent": 4, "text": ["Life Expectancy"], "attrs": {"channels": "/life"}, "extent": [8232, 8253], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [8382, 8518], "text": ["Particles will live the number of seconds in ", {"text": ["Life Expectancy"], "type": "ui"}, ", plus or minus this number of seconds. Use 0 for no variance."]}], "indent": 4, "text": ["Life Variance"], "attrs": {"channels": "/lifevar"}, "extent": [8334, 8353], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [8541, 8854], "text": ["Rather than have the particles all be created with an age of 0, they are created with a random age within the current timestep. They will also be moved by their starting velocity times this age.  This is useful when adding high velocity particles from emitters as it won\u2019t generate clumps on each frame."]}], "indent": 4, "type": "dt", "extent": [8518, 8541], "text": ["Jitter Birth Time"]}, {"body": [{"indent": 8, "type": "para", "extent": [8878, 9717], "text": ["The source can also be interpolated linearly to better birth particles from fast moving sources.  This uses the ", {"text": ["Jitter Birth Time"], "type": "ui"}, " to decide where in the source to interpolate.  If you are wiring your source into the post solve, the ", {"text": ["Positive"], "type": "ui"}, "  birth time and ", {"text": ["Backwards"], "type": "ui"}, " source should be used, which is useful since it does not require future knowledge of the source.  However, to avoid clumping when large forces are present, you should use ", {"text": ["Negative"], "type": "ui"}, " birth time and ", {"text": ["Forward"], "type": "ui"}, " source. This requires you to delete all particles with negative age when rendering.  Alternatively, you can wire into the Pre-Solve, and then use the ", {"text": ["Forward"], "type": "ui"}, " source with ", {"text": ["Negative"], "type": "ui"}, " birth time and not have to worry about seeing particles with negative age.  However, this requires a source that you can compute outside the simulation."]}], "indent": 4, "type": "dt", "extent": [8854, 8878], "text": ["Interpolate Source"]}, {"body": [{"indent": 8, "type": "para", "extent": [9743, 10263], "text": ["The ", {"text": ["Interpolate Source"], "type": "code"}, " takes two geometries and has to find a way to determine the in-between values of those geometries.  If point counts and polygons match, the Match Topology option can be used for the most accurate result.  Otherwise, point velocities may be computed with the Trail SOP and then Use Point Velocities selected.  In this latter case, only one of the input geometries is needed, but the Fowrad and Backwards options are still used to determine if the born points lead or trail the object."]}], "indent": 4, "type": "dt", "extent": [9717, 9743], "text": ["Interpolation Method"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "birthParms"}, "extent": [8046, 8075], "type": "pxml"}, {"body": [{"indent": 4, "type": "para", "extent": [10295, 10433], "text": ["This tab contains checkboxes for the different attributes you can have set on particles when they collide with the target geometry."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [10460, 10507], "text": ["Number of times collided (", {"text": ["$NUMHIT"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10433, 10460], "text": ["Add Num Hit Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [10533, 10561], "text": ["Hit ID (", {"text": ["$HITID"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10507, 10533], "text": ["Add Hit ID Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [10589, 10630], "text": ["Time of collision (", {"text": ["$HITTIME"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10561, 10589], "text": ["Add Hit Time Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [10662, 10728], "text": ["Position in space where collision occurred (", {"text": ["$HT{XYZ}"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10630, 10662], "text": ["Add Hit Position Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [10763, 10840], "text": ["Parametric position on surface where collision occurred (", {"text": ["$H{UV}"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10728, 10763], "text": ["Add Hit Position UV Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [10870, 10925], "text": ["Normal where collision occurred (", {"text": ["$HN{XYZ}"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10840, 10870], "text": ["Add Hit Normal Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [10962, 11012], "text": ["Diffuse color at collision (", {"text": ["$HC{RGB}"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [10925, 10962], "text": ["Add Hit Diffuse Color Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [11046, 11095], "text": ["Texture uv at collision (", {"text": ["$HMAP{UVW}"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [11012, 11046], "text": ["Add Hit Texture UV Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [11123, 11191], "text": ["Distance from current position to collision (", {"text": ["$DISTANCE"], "type": "code"}, ")."]}], "indent": 4, "type": "dt", "extent": [11095, 11123], "text": ["Add Distance Attribute"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [10263, 10295], "container": true, "type": "h", "id": "hitAttrParms"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [11248, 11316], "text": ["How to set the initial velocity of the emitted particles."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [11348, 11439], "text": ["Use the inherited velocity attribute as the initial velocity of the particles."]}], "indent": 8, "type": "dt", "extent": [11316, 11348], "text": ["Use inherited velocity"]}, {"body": [{"indent": 12, "type": "para", "extent": [11474, 11594], "text": ["Add the inherited velocity attribute to the values from the ", {"text": ["Velocity"], "type": "ui"}, " and ", {"text": ["Variance"], "type": "ui"}, " parameters below."]}], "indent": 8, "type": "dt", "extent": [11439, 11474], "text": ["Add to inherited velocity"]}, {"body": [{"indent": 12, "type": "para", "extent": [11624, 11743], "text": ["Set the initial value of the velocity attribute using the ", {"text": ["Velocity"], "type": "ui"}, " and ", {"text": ["Variance"], "type": "ui"}, " parameters below."]}], "indent": 8, "type": "dt", "extent": [11594, 11624], "text": ["Set initial velocity"]}], "container": true, "type": "dt_group"}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [11757, 11838], "text": ["Acceleration is inherited independently, if applicable."]}], "indent": 8, "role": "item", "type": "note", "extent": [11743, 11757]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "type": "dt", "extent": [11226, 11248], "text": ["Initial Velocity"]}, {"body": [{"indent": 8, "type": "para", "extent": [11892, 12125], "text": ["(When ", {"text": ["Initial velocity"], "type": "ui"}, " is ", {"text": ["Use inherited velocity"], "type": "ui"}, " or ", {"text": ["Add to inherited velocity"], "type": "ui"}, ") The proportion of the inherited velocity to use. Use ", {"text": ["1"], "type": "code"}, " for the full inherited value, ", {"text": ["0.5"], "type": "code"}, " to half the inherited value, and so on."]}], "indent": 4, "text": ["Inherit Velocity"], "attrs": {"channels": "/inheritvel"}, "extent": [11838, 11860], "type": "dt"}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "inheritVeloParms"}, "extent": [11191, 11226], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [12209, 12252], "text": ["Set or add to velocity attribute."]}], "indent": 4, "text": ["Velocity"], "attrs": {"channels": "/velx /vely /velz"}, "extent": [12157, 12171], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [12304, 12436], "text": ["Variance to velocity set above. The node will add +/- from 0 to this number along each axis to the ", {"text": ["Velocity"], "type": "ui"}, " parameter."]}], "indent": 4, "text": ["Variance"], "attrs": {"channels": "/varx /vary /varz"}, "extent": [12252, 12266], "type": "dt"}, {"body": [{"indent": 8, "type": "para", "extent": [12464, 12672], "text": ["By default, the variance (if any) is distributed in a box, the size of which is determined by the ", {"text": ["Variance"], "type": "ui"}, " parameter. When this option is on, the variance is distributed in an ellipsoid instead."]}], "indent": 4, "type": "dt", "extent": [12436, 12464], "text": ["Ellipsoid Distribution"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "veloAttrParms"}, "extent": [12125, 12157], "type": "pxml"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [12729, 12792], "text": ["Add ID and parent attributes to the created particles."]}], "indent": 4, "type": "dt", "extent": [12706, 12729], "text": ["Add ID Attributes"]}], "container": true, "type": "dt_group"}], "indent": 0, "tag": "parameters", "attrs": {"id": "originAttrParms"}, "extent": [12672, 12706], "type": "pxml"}], "type": "root", "attrs": {"type": "include"}}