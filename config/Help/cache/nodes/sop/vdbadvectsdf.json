{"body": [{"indent": 0, "text": ["VDB Advect"], "type": "title", "extent": [87, 102], "level": 0}, {"indent": 0, "type": "summary", "extent": [102, 171], "text": ["Moves VDBs in the input geometry along a VDB velocity field."]}, {"indent": 0, "type": "para", "extent": [16, 105], "text": ["See ", {"text": ["volumes"], "fullpath": "/model/volumes", "scheme": null, "type": "link", "value": "/model/volumes"}, " for an explanation of standard volumes and OpenVDB volumes."]}, {"body": [{"indent": 0, "type": "para", "extent": [210, 359], "text": ["The VDB Advect operation will move both narrow band signed distance fields and other fields according to a velocity field defined in a vector VDB."]}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [195, 210], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [385, 423], "text": [{"text": ["This node is not a feedback loop"], "type": "strong"}, "."]}, {"indent": 0, "type": "para", "extent": [423, 615], "text": ["It moves the fields it finds in the input geometry.\nIt ", {"text": ["cannot"], "type": "em"}, " modify the fields over time.\n(That is, if you hook this node up to do advection, and press play, the fields will not animate.)"]}, {"indent": 0, "type": "para", "extent": [615, 754], "text": ["To set up a feedback loop, where the advection at each frame affects the advected field from the previous frame, do one of the following:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [754, 813], "text": ["Do the advection inside a ", {"text": ["SOP Solver"], "fullpath": "/nodes/sop/solver", "scheme": "Node", "type": "link", "value": "/nodes/sop/solver"}, "."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [813, 1026], "text": ["Set the ", {"text": ["Timestep"], "type": "ui"}, " to $T\n  This will cause the node to recalculate, ", {"text": ["at every frame"], "type": "em"}, ", the path of every particle through ", {"text": ["every previous frame"], "type": "em"}, " to get the current one.\n  This is obviously not very practical."]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Animating advection"], "extent": [359, 385], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1046, 1121], "text": ["A subset of VDBs in the first input to move using the velocity field."]}, {"indent": 4, "type": "para", "extent": [1121, 1176], "text": ["These must be narrow band signed distance fields."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [1038, 1046], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1186, 1269], "text": ["The name of a VDB primitive in the second input to use as the velocity field."]}, {"indent": 4, "type": "para", "extent": [1269, 1410], "text": ["This must be a vector-valued VDB primitive.  You can use the VDB Vector Merge SOP to turn a ", {"text": ["vel.[xyz]"], "type": "code"}, " triple into a single primitive."]}, {"indent": 4, "type": "para", "extent": [1410, 1462], "text": ["See ", {"fragment": "#group", "text": ["specifying volumes"], "value": "/model/volumes#group", "fullpath": "/model/volumes#group", "scheme": null, "type": "link"}, "."]}], "indent": 0, "text": ["Velocity"], "role": "item", "extent": [1176, 1186], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1482, 1665], "text": ["When this option is disabled, all VDBs will use a general numerical\n    advection scheme, otherwise level set VDBs will be advected using\n    a spatial finite-difference scheme."]}], "indent": 0, "text": ["Respect Grid Class"], "role": "item", "extent": [1462, 1482], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1675, 1886], "text": ["Number of seconds of movement to apply to the input points.\n    The default is ", {"text": ["1/$FPS"], "type": "code"}, " (one frame\u2019s worth of time).\n    You can use negative values to move the points backwards through the velocity field."]}], "indent": 0, "text": ["Timestep"], "role": "item", "extent": [1665, 1675], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1905, 1980], "text": ["These control how non-SDF VDBs are transported by the velocity field."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1994, 2209], "text": ["The VDBs have to be pre-dilated for how far they may be moved,\n        so with large velocities the memory footprint can become large.\n        Increasing substeps allows each dilating to be more reasonable."]}], "indent": 4, "type": "dt", "extent": [1980, 1994], "text": ["Substeps"]}, {"body": [{"indent": 8, "type": "para", "extent": [2231, 2522], "text": ["Method to use for tracing through the velocity to find the initial\n        location of each value.   The methods are of increasing accuracy.\n        The MacCormack and BFECC methods are error-correcting methods\n        that try to avoid the smoothing caused by linear interpolation."]}], "indent": 4, "type": "dt", "extent": [2209, 2231], "text": ["Advection Scheme"]}, {"body": [{"indent": 8, "type": "para", "extent": [2542, 2763], "text": ["Controls behavior of error correction when the error corrector\n        results in a value outside of the original possibilities.  Without\n        and error corrector ringing and instabilities can occur."]}], "indent": 4, "type": "dt", "extent": [2522, 2542], "text": ["Limiter Scheme"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["General Advection"], "role": "item", "extent": [1886, 1905], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2784, 2854], "text": ["These control how SDF VDBs are moved through the velocity field."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2874, 3019], "text": ["How accurately the gradients of the signed distance field are computed.\n        The later choices are more accurate but take more time."]}], "indent": 4, "type": "dt", "extent": [2854, 2874], "text": ["Spatial Scheme"]}, {"body": [{"indent": 8, "type": "para", "extent": [3040, 3162], "text": ["How accurately time is evolved within the timestep.  Later choices are\n        more accurate but take more time."]}], "indent": 4, "type": "dt", "extent": [3019, 3040], "text": ["Temporal Scheme"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Level Set Advection"], "role": "item", "extent": [2763, 2784], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3179, 3387], "text": ["After moving the signed distance field, it will often no longer be a proper signed distance field.  A number of renormalizaton passes can be performed to convert it back into a proper field."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [3402, 3485], "text": ["The number of times to renormalize between every substep."]}], "indent": 8, "type": "dt", "extent": [3387, 3402], "text": ["Steps"]}, {"body": [{"indent": 16, "type": "para", "extent": [3509, 3662], "text": ["How accurately the gradients of the signed distance field are computed. The later choices are more accurate but take more time."]}], "indent": 8, "type": "dt", "extent": [3485, 3509], "text": ["Spatial Scheme"]}, {"body": [{"indent": 16, "type": "para", "extent": [3687, 3821], "text": ["How accurately time is evolved within the renormalizaton stage.  Later choices are more accurate but take more time."]}], "indent": 8, "type": "dt", "extent": [3662, 3687], "text": ["Temporal Scheme"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Renormalization"], "role": "item", "extent": [3162, 3179], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1026, 1038], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [3830, 3851], "text": [{"text": "", "fullpath": "/nodes/sop/vdb", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdb"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [3851, 3885], "text": [{"text": "", "fullpath": "/nodes/sop/vdbfromparticles", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbfromparticles"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [3885, 3918], "text": [{"text": "", "fullpath": "/nodes/sop/vdbadvectpoints", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbadvectpoints"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [3918, 3948], "text": [{"text": "", "fullpath": "/nodes/sop/vdbmorphsdf", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbmorphsdf"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [3821, 3830], "container": true, "type": "related_section", "id": "related"}], "title": ["VDB Advect"], "summary": ["Moves VDBs in the input geometry along a VDB velocity field."], "attrs": {"version": null, "tags": "model", "namespace": null, "internal": "vdbadvectsdf", "context": "sop", "type": "node", "icon": "COMMON/openvdb"}, "included": ["/nodes/sop/volume_types"], "type": "root"}