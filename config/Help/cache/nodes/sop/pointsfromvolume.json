{"body": [{"indent": 0, "text": ["Points from Volume"], "type": "title", "extent": [105, 128], "level": 0}, {"indent": 0, "type": "summary", "extent": [128, 184], "text": ["Creates set of regular points filling a volume."]}, {"indent": 0, "type": "para", "extent": [184, 412], "text": ["This operator is used to generate a regular set of points that fill \na given volume. This can be useful for generating a ", {"text": ["field of particles"], "fullpath": "/nodes/pop/location", "scheme": "Node", "type": "link", "value": "/nodes/pop/location"}, ", or initializing \na ", {"text": ["particle fluid"], "fullpath": "/nodes/dop/particlefluidobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/particlefluidobject"}, "."]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [437, 649], "text": ["The type of incoming geometry.  In auto-detect, if the input is a\n        single volume primitive, the Fog or SDF method will be used depending\n        whether the volume primitive has the SDF flag set."]}, {"indent": 8, "type": "para", "extent": [649, 727], "text": ["In Geometry mode, the input is treated as a closed manifold surface."]}, {"indent": 8, "type": "para", "extent": [727, 898], "text": ["In Fog mode, the first volume of the input is treated as a fog volume.\n        Voxels with a 1 value will have points, those with 0 will not have\n        points."]}, {"indent": 8, "type": "para", "extent": [898, 1089], "text": ["In SDF mode, the first volume of the input is treated as a signed\n        distance field.  Voxels with negative values will have points, those\n        with positive values will not."]}], "indent": 0, "text": ["Source Type"], "role": "item", "extent": [424, 437], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1142, 1190], "text": ["The method used for generating points."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [1210, 1606], "text": ["Creates points inside the entire bounding box of the input, then\n            removes those outside the volume.  This method is efficient for\n            inputs that are close to axis-aligned boxes, but can be slow and\n            memory inefficient for more sparse configurations. This method also\n            provides backwards compatibility for files created prior to Houdini 14.5."]}], "indent": 8, "type": "dt", "extent": [1190, 1210], "text": ["Dense Grid"]}, {"body": [{"indent": 12, "type": "para", "extent": [1629, 2143], "text": ["Creates points only in the active voxels of the input volume if they also lie\n            inside the bounding volume.  This method can handle very sparse configurations\n            where the input objects are distributed across space and do not fit well into\n            an axis-aligned bounding box.  Because a sparse volume is required, this method\n            creates an ", {"text": ["OpenVDB volume"], "fullpath": "/model/volumes", "scheme": null, "type": "link", "value": "/model/volumes"}, " of the input internally, and the\n            ", {"text": ["Convert To Fog"], "type": "ui"}, " option will always be applied."]}], "indent": 8, "type": "dt", "extent": [1606, 1629], "text": ["Sparse Volume"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Construction Method"], "role": "item", "attrs": {"channels": "/pointmethod"}, "extent": [1089, 1110], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2158, 2427], "text": ["Inverts the sense of which points will be kept.  Because the space\n        is seeded with a bounding box of points outside of the object,\n        this often results in a surrounding cube of points unless the \n        border condition of the volume is altered."]}], "indent": 0, "text": ["Invert Volume"], "role": "item", "extent": [2143, 2158], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2478, 2575], "text": ["The configuration of the points to be generated, before any \n        jitter is applied."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [2589, 2721], "text": ["A loosely packed configuration that places the points at \n            the vertices of a regular three-dimensional grid."]}], "indent": 8, "type": "dt", "extent": [2575, 2589], "text": ["Grid"]}, {"body": [{"indent": 12, "type": "para", "extent": [2742, 2877], "text": ["A tightly packed configuration placing points at equal \n            distance from each of the three other closest points."]}], "indent": 8, "type": "dt", "extent": [2721, 2742], "text": ["Tetrahedral"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Point Configuration"], "role": "item", "attrs": {"channels": "/inittype"}, "extent": [2427, 2448], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2932, 3042], "text": ["The smallest distance between any two of the generated points \n        in the initial configuration."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [3055, 3167], "text": ["Increasing this value will generate fewer total points, \n            but will be faster to process."]}], "indent": 8, "role": "item", "type": "tip", "extent": [3042, 3055]}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "text": ["Point Separation"], "role": "item", "attrs": {"channels": "/particlesep"}, "extent": [2877, 2895], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3177, 3338], "text": ["The SDF value that is considered the outer surface of the volume.  This parameter\n        is only enabled for the ", {"text": ["Sparse Volume"], "type": "ui"}, " construction method."]}], "indent": 0, "text": ["Isovalue"], "role": "item", "extent": [3167, 3177], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3352, 3598], "text": ["If enabled, the SDF value that is considered the inner surface of the volume, allowing point\n        creation within only a slice of the input volume. This parameter is only enabled for the\n        ", {"text": ["Sparse Volume"], "type": "ui"}, " construction method."]}], "indent": 0, "text": ["Min Isovalue"], "role": "item", "extent": [3338, 3352], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3651, 3692], "text": ["Random seed for creating jitter."]}], "indent": 0, "text": ["Jitter Seed"], "role": "item", "attrs": {"channels": "/jitterseed"}, "extent": [3598, 3611], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3747, 3897], "text": ["The amount of jitter to apply to the positional values of the points.  \n        Jitter causes random changes to the positions of the points."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [3910, 3978], "text": ["Set this value to 0 if no jitter whatsoever is desired."]}], "indent": 8, "role": "item", "type": "tip", "extent": [3897, 3910]}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "text": ["Jitter Scale"], "role": "item", "attrs": {"channels": "/jitterscale"}, "extent": [3692, 3706], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3994, 4251], "text": ["The input geometry will first be converted into a fog volume\n        using the giving point separation.  This consumes more memory,\n        but can greatly reduce the total time as the inside test can\n        be performed very quickly on a volume."]}, {"indent": 8, "type": "para", "extent": [4251, 4354], "text": ["If the input is already a volume, and a volume source type is set, this\n        does nothing."]}], "indent": 0, "text": ["Convert To Fog"], "role": "item", "extent": [3978, 3994], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4367, 4546], "text": ["The points generated will be centered to this offset of the origin.  A\n        value of 0,0,0 means that the origin would be included in the generated\n        point set."]}], "indent": 0, "text": ["Grid Offset"], "role": "item", "extent": [4354, 4367], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4567, 4802], "text": ["Creates the ", {"text": ["pscale"], "type": "code"}, " attribute and sets it to 2\u00d7 the particle\n        separation.  This allows the ", {"text": ["Particle Fluid Surface SOP"], "fullpath": "/nodes/sop/particlefluidsurface", "scheme": "Node", "type": "link", "value": "/nodes/sop/particlefluidsurface"}, " to\n        get the right scale for rebuilding the original surface."]}], "indent": 0, "text": ["Add Scale Attribute"], "role": "item", "extent": [4546, 4567], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4825, 5022], "text": ["The scale attribute is this multiple of the particle\n        separation.  Having the particles larger than the separation\n        ensures no particles are lost in the gaps between voxels."]}], "indent": 0, "text": ["Particle Radius Scale"], "role": "item", "extent": [4802, 4825], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5038, 5470], "text": ["If a uniform lattice of points is being built, then the surface layer will exhibit terracing as points cross the boundary.  This dithers the points, comparing the distance to the cut-off threshold with a random number to see if the point should be kept.  This causes points to be kept outside of the threshold, as it expands half a grid scale in both directions. Turning this on will result in a more randomized surface layer."]}], "indent": 0, "text": ["Dither Surface"], "role": "item", "extent": [5022, 5038], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5485, 5952], "text": ["Often an object has one face that is free, and the other faces are constrained by collisions.  If you don\u2019t want to dither the colliding faces (as particles may be generated outside of the collision range, or holes made that will collapse) you can use this normal and the angle to specify which regions of the source are available for dithering.  The geometric normal of the SDF built from the surface is used, not any normal attribute on the incoming geometry."]}], "indent": 0, "text": ["Dither Normal"], "role": "item", "extent": [5470, 5485], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5966, 6107], "text": ["How many degrees away from the dither normal is eligible for dithering.  Setting this value to 180 will cause all faces to be dithered."]}], "indent": 0, "text": ["Dither Angle"], "role": "item", "extent": [5952, 5966], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6124, 6386], "text": ["Scatter points on the surface of the geometry if provided, or the zero isosurface of\n    the provided volume.  For a value of 1 the scattered points will be approximately separated by ", {"text": ["Point Separation"], "type": "ui"}, ". Increasing this value will oversample the surface."]}], "indent": 0, "text": ["Scatter Density"], "role": "item", "extent": [6107, 6124], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6404, 6789], "text": ["When enabled, scattered points will be relaxed, pushed away from each other, to avoid clumping. This is done gradually, to avoid chaotic behavior and to allow control over how much relaxation takes place.  More relaxation iterations results in points that are more separated from each other. A distribution of points in which they are well separated is often called \"blue noise\"."]}], "indent": 0, "text": ["Relax Iterations"], "role": "item", "extent": [6386, 6404], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6803, 6936], "text": ["The amount to oversample the points within a distance from the zero isosurface, as specified by the ", {"text": ["Oversampling Bandwidth"], "type": "ui"}, "."]}], "indent": 0, "text": ["Oversampling"], "role": "item", "extent": [6789, 6803], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6960, 7114], "text": ["The points will be oversampled to this distance from the zero isosurface.  This parameter\n    is specified in multiples of the ", {"text": ["Point Separation"], "type": "ui"}, "."]}], "indent": 0, "text": ["Oversampling Bandwidth"], "role": "item", "extent": [6936, 6960], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7135, 7188], "text": ["Create a group containing the generated points."]}], "indent": 0, "text": ["Create Output Group"], "role": "item", "extent": [7114, 7135], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7202, 7253], "text": ["The name of the generated output point group."]}], "indent": 0, "text": ["Output Group"], "role": "item", "extent": [7188, 7202], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [412, 424], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [7262, 7297], "text": [{"text": ["Scatter"], "fullpath": "/nodes/sop/scatter", "scheme": "Node", "type": "link", "value": "/nodes/sop/scatter"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [7253, 7262], "container": true, "type": "related_section", "id": "related"}], "summary": ["Creates set of regular points filling a volume."], "type": "root", "attrs": {"version": null, "tags": "points, volume", "namespace": null, "internal": "pointsfromvolume", "context": "sop", "type": "node", "icon": "SOP/pointsfromvolume"}, "title": ["Points from Volume"]}