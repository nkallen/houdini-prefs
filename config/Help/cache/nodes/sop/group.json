{"body": [{"indent": 0, "text": ["Group"], "type": "title", "extent": [0, 10], "level": 0}, {"indent": 0, "type": "summary", "extent": [86, 173], "text": ["Generates groups of points, primitives, or edges according to various criteria."]}, {"body": [{"indent": 0, "type": "para", "extent": [188, 365], "text": ["Elements can occur in more than one group. Groups are used in many parts of the Parameter Editor to specify which portions of input geometry you wish an operator to act upon."]}, {"indent": 0, "type": "para", "extent": [365, 445], "text": ["You can also create ordered groups. To do so, enable the ", {"text": ["Ordered"], "type": "ui"}, " checkbox."]}, {"indent": 0, "type": "para", "extent": [445, 802], "text": ["This operator is very powerful and is ideal for combining geometry that is\nsimilar. For example, all the primitive geometry of a group of door\nstructures for a three-dimensional architectural model could be\ngrouped together and consequently scaled and re-sized together using\na ", {"text": ["Transform node"], "fullpath": "/nodes/sop/xform", "scheme": "Node", "type": "link", "value": "/nodes/sop/xform"}, ". Works in conjunction with most\nfilter nodes."]}, {"indent": 0, "type": "para", "extent": [802, 926], "text": ["Group name specifiers become very powerful when you use \n", {"fragment": "#manual", "text": ["pattern matching"], "value": "/model/groups#manual", "fullpath": "/model/groups#manual", "scheme": null, "type": "link"}, " in your group specifiers."]}, {"body": [{"body": [{"type": "ord", "blevel": 6, "indent": 4, "extent": [313, 411], "text": [{"text": ["Select"], "fullpath": "/basics/select", "scheme": null, "type": "link", "value": "/basics/select"}, " the points, primitives, edges, or vertices you want to group."]}, {"type": "ord", "blevel": 6, "indent": 4, "extent": [411, 521], "text": ["Click the ", {"text": "", "fullpath": "/shelf/SOP/group", "scheme": "Icon", "type": "link", "value": "SOP/group"}, " ", {"text": ["Group Geometry"], "fullpath": "/nodes/sop/group", "scheme": "Node", "type": "link", "value": "/nodes/sop/group"}, " tool on the ", {"text": ["Model"], "type": "ui"}, " tab of the shelf."]}, {"type": "ord", "blevel": 6, "indent": 4, "extent": [521, 614], "text": ["Enter a ", {"text": ["Group Name"], "type": "ui"}, " in the operation controls toolbar or the parameter editor."]}], "type": "ord_group", "container": true}, {"type": "para", "indent": 4, "extent": [614, 667], "text": [{"text": "", "fullpath": "/images/shelf/groupgeometry.png", "scheme": "Image", "type": "link", "value": "/images/shelf/groupgeometry.png"}]}], "container": true, "level": 3, "text": ["Using Group Geometry"], "extent": [274, 313], "indent": 0, "type": "h", "id": "includeme"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [973, 1202], "text": ["When using the ", {"text": ["hotkeys to select edges"], "fullpath": "/basics/select", "scheme": null, "type": "link", "value": "/basics/select"}, " to group, \n    press ", {"keys": ["Tab"], "text": null, "type": "keys"}, " once the selection is complete (instead of ", {"keys": ["Enter"], "text": null, "type": "keys"}, "), \n    and select the ", {"text": ["Group Geometry"], "type": "ui"}, " operation in the ", {"text": ["tab menu"], "fullpath": "/basics/tabmenu", "scheme": null, "type": "link", "value": "/basics/tabmenu"}, "."]}], "indent": 0, "role": "item", "type": "tip", "extent": [968, 973]}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [173, 188], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [1250, 1391], "text": ["You can create groups based on point/primitive attributes using the ", {"text": ["Combine"], "type": "ui"}, " tab and ", {"fragment": "#manual", "text": ["group specification"], "value": "/model/groups#manual", "fullpath": "/model/groups#manual", "scheme": null, "type": "link"}, " syntax."]}, {"indent": 0, "type": "para", "extent": [1391, 1479], "text": ["For example, to create a group containing all points with Y position greater than ", {"text": ["0"], "type": "code"}, ":"]}, {"body": [{"indent": 0, "blevel": 2, "type": "ord", "extent": [1479, 1553], "text": ["In the parameter editor for the Group node, click the ", {"text": ["Combine"], "type": "ui"}, " tab."]}, {"indent": 0, "blevel": 2, "type": "ord", "extent": [1553, 1764], "text": ["In the ", {"text": ["Group"], "type": "ui"}, " field (below ", {"text": ["Combine entity"], "type": "ui"}, "), set the left side to the name of the group you want to create, click the ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/equal", "scheme": "Icon", "type": "link", "value": "BUTTONS/equal"}, " equal button in the middle, and set the right side to ", {"text": ["@P.y>0"], "type": "code"}]}], "container": true, "type": "ord_group"}, {"indent": 0, "type": "para", "extent": [1764, 2069], "text": ["In this example, ", {"text": ["P"], "type": "code"}, " is the name of the position vector attribute, ", {"text": [".y"], "type": "code"}, " takes the Y component of the vector, and ", {"text": [">0"], "type": "code"}, " selects points where the component is greater than 0. See the ", {"text": ["@"], "type": "code"}, " ", {"fragment": "#manual", "text": ["group specification syntax"], "value": "/model/groups#manual", "fullpath": "/model/groups#manual", "scheme": null, "type": "link"}, " for more information. Note that the ", {"text": ["@"], "type": "code"}, " syntax does not allow spaces."]}], "indent": 0, "level": 2, "text": ["Creating groups based on point attributes"], "extent": [1202, 1250], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2095, 2144], "text": ["The geometry on which to create the groups."]}], "indent": 0, "type": "dt", "extent": [2077, 2095], "text": ["Source geometry"]}, {"body": [{"indent": 4, "type": "para", "extent": [2161, 2256], "text": ["Bounding geometry. (Only works for point\n    groups when selecting by bounding geometry.)"]}, {"indent": 4, "type": "para", "extent": [2256, 2283], "text": ["Accepts all geometry."]}], "indent": 0, "type": "dt", "extent": [2144, 2161], "text": ["Bounding object"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [2069, 2077], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2339, 2377], "text": ["The name of the group to create."]}], "indent": 0, "text": ["Group Name"], "role": "item", "attrs": {"id": "crname"}, "extent": [2309, 2322], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2402, 2453], "text": ["Whether to create a primitive or point group."]}], "indent": 0, "text": ["Entity"], "role": "item", "attrs": {"id": "entity"}, "extent": [2377, 2385], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2486, 2538], "text": ["What sort of primitives to allow in the group."]}], "indent": 0, "text": ["Geometry Type"], "role": "item", "attrs": {"id": "geotype"}, "extent": [2453, 2468], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2573, 2672], "text": ["How to resolve collisions between the newly created group with an already\n    existing group."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2694, 2768], "text": ["The newly created group will replace the existing group."]}], "indent": 4, "type": "dt", "extent": [2672, 2694], "text": ["Replace Existing"]}, {"body": [{"indent": 8, "type": "para", "extent": [2793, 2918], "text": ["The group will consist of the union between the newly created group\n        and the already existing group."]}], "indent": 4, "type": "dt", "extent": [2768, 2793], "text": ["Union With Existing"]}, {"body": [{"indent": 8, "type": "para", "extent": [2947, 3079], "text": ["The group will consist of the intersection between the newly created\n        group and the already existing group."]}], "indent": 4, "type": "dt", "extent": [2918, 2947], "text": ["Intersect With Existing"]}, {"body": [{"indent": 8, "type": "para", "extent": [3107, 3239], "text": ["The group will consist of the contents of the already existing group\n        that are not also in the newly created group."]}], "indent": 4, "type": "dt", "extent": [3079, 3107], "text": ["Subtract From Existing"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Merge Operation"], "role": "item", "attrs": {"id": "mergeop"}, "extent": [2538, 2555], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [3289, 3326], "text": ["Enables grouping by number."]}], "indent": 0, "text": ["Enable"], "role": "item", "attrs": {"id": "groupnumber"}, "extent": [3254, 3263], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3360, 3468], "text": ["Orders the points/primitives in the group in the order they\n    are entered. Useful when skinning."]}], "indent": 0, "text": ["Create Ordered"], "role": "item", "attrs": {"id": "ordered"}, "extent": [3326, 3342], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3497, 3554], "text": ["Groups by a pattern, a range, or an expression."]}], "indent": 0, "text": ["Operation"], "role": "item", "attrs": {"id": "groupop"}, "extent": [3468, 3479], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3590, 3776], "text": ["This is evaluated for every point or primitive. If it is\n    true, the element is added to the group. It supports all the\n    local variables of the Point and Primitive operations."]}, {"indent": 4, "type": "para", "extent": [3776, 3839], "text": ["Edge groups are currently not supported with expressions."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3849, 3963], "text": ["Points and primitives that match the expression will be in the final group regardless of the other tabs."]}], "indent": 4, "role": "item", "type": "note", "extent": [3839, 3849]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Filter Expression"], "role": "item", "attrs": {"id": "filter"}, "extent": [3554, 3573], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3994, 4037], "text": ["Enter the pattern to be grouped. "]}, {"indent": 4, "type": "para", "extent": [4037, 4108], "text": ["This field also accepts edge patterns:\n    ", {"body": [{"body": [{"text": [{"text": [{"text": ["n"], "type": "var"}], "type": "code"}, " "], "role": "td", "indent": 0, "extent": [39, 50], "type": "cell"}, {"body": [{"type": "para", "indent": 4, "extent": [50, 91], "text": ["All edges in primitive number ", {"text": ["n"], "type": "var"}, "."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"text": [{"text": ["p", {"text": ["n"], "type": "var"}], "type": "code"}, " "], "role": "td", "indent": 0, "extent": [91, 102], "type": "cell"}, {"body": [{"type": "para", "indent": 4, "extent": [102, 158], "text": ["Point number ", {"text": ["n"], "type": "var"}, " / edges with point number ", {"text": ["n"], "type": "var"}, "."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"text": [{"text": [{"text": ["n"], "type": "var"}, "e", {"text": ["m"], "type": "var"}], "type": "code"}, " "], "role": "td", "indent": 0, "extent": [158, 174], "type": "cell"}, {"body": [{"type": "para", "indent": 4, "extent": [174, 216], "text": ["Edge number ", {"text": ["m"], "type": "var"}, " of primitive ", {"text": ["n"], "type": "var"}, "."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}, {"body": [{"text": [{"text": ["p", {"text": ["a"], "type": "var"}, "-", {"text": ["b"], "type": "var"}], "type": "code"}, " "], "role": "td", "indent": 0, "extent": [216, 233], "type": "cell"}, {"body": [{"type": "para", "indent": 4, "extent": [233, 294], "text": ["Edges between point number ", {"text": ["a"], "type": "var"}, " and point number ", {"text": ["b"], "type": "var"}, "."]}], "type": "cell", "role": "td"}], "type": "row", "divider": false}], "type": "table", "thead": [{"body": [{"text": ["Code "], "role": "th", "indent": 0, "extent": [16, 24], "type": "cell"}, {"role": "th", "text": ["Meaning "], "indent": 4, "extent": [24, 39], "type": "cell"}], "type": "row", "divider": false}]}]}], "indent": 0, "text": ["Pattern"], "role": "item", "attrs": {"id": "pattern"}, "extent": [3963, 3972], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4136, 4256], "text": ["The start of the range to be grouped. For edge groups the ranges will\n    be interpreted as primitive indices."]}], "indent": 0, "text": ["Start"], "role": "item", "attrs": {"id": "rangestart"}, "extent": [4108, 4115], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4280, 4394], "text": ["The end of the range to be grouped. For edge groups the ranges will\n    be interpreted as primitive indices."]}], "indent": 0, "text": ["End"], "role": "item", "attrs": {"id": "rangeend"}, "extent": [4256, 4261], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4430, 4518], "text": ["Group every # of # primitives/points. Edges are grouped here by primitive numbers."]}], "indent": 0, "text": ["Select ", {"text": ["_"], "type": "code"}, " of ", {"text": ["_"], "type": "code"}], "role": "item", "attrs": {"id": "select"}, "extent": [4394, 4413], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Number"], "extent": [3239, 3254], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [4572, 4617], "text": ["Enable grouping by bounding volume."]}], "indent": 0, "text": ["Enable"], "role": "item", "attrs": {"id": "groupbounding"}, "extent": [4535, 4544], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4656, 4687], "text": ["Shape of bounding volume."]}], "indent": 0, "text": ["Bounding Type"], "role": "item", "attrs": {"id": "boundtype"}, "extent": [4617, 4632], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4730, 4760], "text": ["Size of bounding volume."]}], "indent": 0, "text": ["Size"], "role": "item", "attrs": {"channels": "/sizex /sizey /sizez"}, "extent": [4687, 4693], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4796, 4828], "text": ["Center of bounding volume."]}], "indent": 0, "text": ["Center"], "role": "item", "attrs": {"channels": "/tx /ty /tz"}, "extent": [4760, 4768], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4847, 5103], "text": ["The iso surface of volume to do the grouping with.  Points\n    whose volume value are less than this will be grouped.  A value of 0\n    is good for SDF volumes.  For fog volumes, use a\n    value of 0.5 and turn on ", {"text": ["Invert Volumes"], "type": "ui"}, " for best results."]}], "indent": 0, "text": ["Iso"], "role": "item", "attrs": {"id": "iso"}, "extent": [4828, 4833], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5141, 5188], "text": ["Inverts sense of being inside the volume."]}], "indent": 0, "text": ["Invert Volume"], "role": "item", "attrs": {"id": "invertvolume"}, "extent": [5103, 5118], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5263, 5343], "text": ["Include entities that are not wholly contained within the bounding object."]}], "indent": 0, "text": ["Include Entities Not Wholly Contained"], "role": "item", "attrs": {"id": "includenotwhollycontained"}, "extent": [5188, 5227], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Bounding"], "extent": [4518, 4535], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5393, 5429], "text": ["Enable grouping by normal."]}], "indent": 0, "text": ["Enable"], "role": "item", "attrs": {"id": "groupnormal"}, "extent": [5358, 5367], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5454, 5493], "text": ["Normal direction to group by."]}], "indent": 0, "text": ["Direction"], "role": "item", "attrs": {"id": "dir"}, "extent": [5429, 5440], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5523, 5584], "text": ["Deviation from the direction to allow in the group."]}], "indent": 0, "text": ["Spread Angle"], "role": "item", "attrs": {"id": "angle"}, "extent": [5493, 5507], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5620, 5673], "text": ["Groups primitives facing away from this object."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5683, 5903], "text": ["Unlike grouping by normal this operation will remove items that satisfy the backface condition from any group created via another tab. If no other group is created, this operation will add satisfying items."]}], "indent": 4, "role": "item", "type": "note", "extent": [5673, 5683]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Backface from"], "role": "item", "attrs": {"id": "camerapath"}, "extent": [5584, 5599], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5944, 6006], "text": ["Groups polygons that are non-planar given the tolerance."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6016, 6111], "text": ["Polygons that are non-planar will be added to the group regardless of the other tabs."]}], "indent": 4, "role": "item", "type": "note", "extent": [6006, 6016]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Non-Planar Polys"], "role": "item", "attrs": {"id": "nonplanartol"}, "extent": [5903, 5921], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Normal"], "extent": [5343, 5358], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [6132, 6259], "text": ["Points, primitives, and edges that match the edge grouping rules will be in the final group regardless of the other tabs."]}], "indent": 0, "role": "item", "type": "note", "extent": [6125, 6132]}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [6292, 6320], "text": ["Enables edge grouping."]}], "indent": 0, "text": ["Enable"], "role": "item", "attrs": {"id": "groupedges"}, "extent": [6259, 6267], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6359, 6557], "text": ["Groups primitives with at least this angle between their normals. For edge\n    groups, an edge is included in the group if the two primitives that share \n    it satisfy this angle requirement."]}], "indent": 0, "text": ["Min Edge Angle"], "role": "item", "attrs": {"id": "minedgeangle"}, "extent": [6320, 6336], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6596, 6793], "text": ["Groups primitives with at most this angle between their normals. For edge\n    groups, an edge is included in the group if the two primitives that share \n    it satisfy this angle requirement."]}], "indent": 0, "text": ["Max Edge Angle"], "role": "item", "attrs": {"id": "maxedgeangle"}, "extent": [6557, 6573], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6862, 7057], "text": ["For edge groups only, when this option is checked edges are included\n    in the group based on the angle between themselves, instead of the angle\n    between the primitives that share them."]}, {"indent": 4, "type": "para", "extent": [7057, 7140], "text": ["Each edge is compared against all other edges that share a point\n    with it."]}], "indent": 0, "text": ["Edge Angle Uses Angle Between Edges"], "role": "item", "attrs": {"id": "edgeanglebetweenedges"}, "extent": [6793, 6830], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7178, 7228], "text": ["Groups edges that have at least this length."]}], "indent": 0, "text": ["Min Edge Length"], "role": "item", "attrs": {"id": "minedgelen"}, "extent": [7140, 7157], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7266, 7315], "text": ["Groups edges that have at most this length."]}], "indent": 0, "text": ["Max Edge Length"], "role": "item", "attrs": {"id": "maxedgelen"}, "extent": [7228, 7245], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7346, 7404], "text": ["Number of edges away from the points in Point Group."]}], "indent": 0, "text": ["Edge Depth"], "role": "item", "attrs": {"id": "edgestep"}, "extent": [7315, 7327], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7437, 7481], "text": ["Points around which group is centered."]}], "indent": 0, "text": ["Point Group"], "role": "item", "attrs": {"id": "edgeptgrp"}, "extent": [7404, 7417], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7520, 7677], "text": ["Groups all points/primitives/edges with unshared edges. For edge groups,\n    an edge is added to the group if it only has one primitive adjacent to it."]}], "indent": 0, "text": ["Unshared Edges"], "role": "item", "attrs": {"id": "unshared"}, "extent": [7481, 7497], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7726, 7781], "text": ["Create groups containing surface boundary points."]}], "indent": 0, "text": ["Create Boundary Groups"], "role": "item", "attrs": {"id": "boundarygroups"}, "extent": [7677, 7701], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Edges"], "extent": [6111, 6125], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Create"], "extent": [2295, 2309], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [7795, 7851], "text": ["Combines different groups based on boolean operators."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [7867, 8034], "text": ["The type of group on which to operate. While it can usually\n    be determined from the given groups, this parameter is\n    useful to resolve ambiguous cases."]}], "indent": 0, "text": ["Combine Entity"], "role": "item", "extent": [7851, 7867], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8041, 8548], "text": ["This section allows you to create a new group out of existing groups. \n    Enter the group to operate on or create in the first field and the name of \n    the existing group in the field on the other side of the buttons. You can \n    either include the contents of the other group by selecting \n    ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/equal", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/equal"}, " ", {"text": ["Equals"], "type": "ui"}, " or everything that is not the other \n    group by selecting ", {"text": "", "fullpath": "/nodes/sop/BUTTONS/not_equal", "scheme": "Smallicon", "type": "link", "value": "BUTTONS/not_equal"}, " ", {"text": ["Equals all but"], "type": "ui"}, ". Use \n    the fields below to combine additional groups."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [8034, 8041], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Combine"], "extent": [7781, 7795], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "type": "para", "extent": [8575, 8847], "text": ["Renames an existing group to something else. When renaming\ngroups, you can use wildcards to rename several\ngroups that match the specified pattern. For more\ninformation about the pattern substitution rules, please see\n", {"text": ["Attrib String Edit"], "fullpath": "/nodes/sop/attribstringedit", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribstringedit"}, "."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [8872, 8898], "text": ["Group to rename."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "oldname"}, "extent": [8847, 8854], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8926, 8954], "text": ["New name of group."]}], "indent": 0, "text": ["New Name"], "role": "item", "attrs": {"id": "newname"}, "extent": [8898, 8908], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Rename"], "extent": [8559, 8575], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [8970, 9244], "text": ["Converts between different types of groups. When converting\ngroups, you can use wildcards to convert several\ngroups that match the specified pattern. For more\ninformation about the pattern substitution rules, please see\n", {"text": ["Attrib String Edit"], "fullpath": "/nodes/sop/attribstringedit", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribstringedit"}, "."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [9280, 9304], "text": ["Source group type."]}], "indent": 0, "text": ["Convert From"], "role": "item", "attrs": {"id": "cnvfromtype"}, "extent": [9244, 9258], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9336, 9371], "text": ["Newly created group type."]}], "indent": 0, "text": ["Convert To"], "role": "item", "attrs": {"id": "cnvtotype"}, "extent": [9304, 9316], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9397, 9424], "text": ["Group to convert."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "convertg"}, "extent": [9371, 9378], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9461, 9564], "text": ["The new name of the converted group. Leave this empty to keep the name of the original group."]}], "indent": 0, "text": ["Convert Name"], "role": "item", "attrs": {"id": "cnvtname"}, "extent": [9424, 9438], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9602, 9640], "text": ["Preserves original geometry."]}], "indent": 0, "text": ["Preserve Original"], "role": "item", "attrs": {"id": "preserve"}, "extent": [9564, 9583], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9732, 9970], "text": ["This option allows only primitives that have all of their points or edges\n    in the original point group to be included in the\n    resulting primitive group, when converting from a point group or an edge group to a primitive group."]}, {"indent": 4, "type": "para", "extent": [9970, 10169], "text": ["The same thing applies when converting from a point group or a primitive group to an edge \n    group. Only edges with both points in the original point group will be added to the new group."]}], "indent": 0, "text": ["Omit Entities in New Group not Wholly Contained in the Old Group"], "role": "item", "attrs": {"id": "primswithallpts"}, "extent": [9640, 9706], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Convert"], "extent": [8954, 8970], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [10184, 10225], "text": ["Deletes an existing group."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [10254, 10276], "text": ["Group to delete."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "destroyname"}, "extent": [10225, 10232], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Delete"], "extent": [10169, 10184], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Edit"], "extent": [8548, 8559], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [2283, 2295], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [10288, 10332], "text": ["(number of points/primitives/edges) -1"]}], "indent": 0, "type": "dt", "extent": [10284, 10288], "text": ["N"]}], "container": true, "type": "dt_group"}, {"indent": 0, "type": "para", "extent": [10332, 10385], "text": ["See list of ", {"text": ["standard variables"], "fullpath": "/nodes/sop/standardvariables", "scheme": null, "type": "link", "value": "standardvariables"}, "."]}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [10276, 10284], "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [10394, 10415], "text": [{"text": "", "fullpath": "/nodes/sop/delete", "scheme": "Node", "type": "link", "value": "/nodes/sop/delete"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [10415, 10438], "text": [{"text": "", "fullpath": "/nodes/sop/partition", "scheme": "Node", "type": "link", "value": "/nodes/sop/partition"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [10438, 10461], "text": [{"text": "", "fullpath": "/nodes/sop/groupcopy", "scheme": "Node", "type": "link", "value": "/nodes/sop/groupcopy"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [10461, 10489], "text": [{"text": "", "fullpath": "/nodes/sop/grouptransfer", "scheme": "Node", "type": "link", "value": "/nodes/sop/grouptransfer"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [10385, 10394], "container": true, "type": "related_section", "id": "related"}], "title": ["Group"], "summary": ["Generates groups of points, primitives, or edges according to various criteria."], "attrs": {"version": null, "tags": "groups", "namespace": null, "internal": "group", "context": "sop", "type": "node", "icon": "SOP/group"}, "included": ["/nodes/sop/edgespec", "/shelf/groupgeometry"], "type": "root"}