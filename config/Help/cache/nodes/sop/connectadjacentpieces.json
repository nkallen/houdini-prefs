{"body": [{"indent": 0, "text": ["Connect Adjacent Pieces"], "type": "title", "extent": [0, 28], "level": 0}, {"indent": 0, "type": "summary", "extent": [169, 213], "text": ["Creates lines between nearby pieces."]}, {"indent": 0, "type": "para", "extent": [213, 445], "text": ["This node creates a set of polygons that connect points together from nearby\npieces. This is useful for creating a ", {"text": ["Constraint Network"], "fullpath": "/nodes/dop/constraintnetwork", "scheme": "Node", "type": "link", "value": "/nodes/dop/constraintnetwork"}, " that constrains or glues together adjacent objects in a simulation."]}, {"indent": 0, "type": "para", "extent": [445, 663], "text": ["The ", {"text": ["name"], "type": "code"}, " primitive attribute is used to determine which primitives in the input geometry belong to each piece. The output geometry contains a ", {"text": ["name"], "type": "code"}, " point attribute to identify the piece that each point belongs to."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [693, 763], "text": ["Specifies how connections between nearby pieces will be created."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [796, 985], "text": ["Each point will be connected to the closest point from another\n        piece. The ", {"text": ["Max Connections"], "type": "ui"}, " parameter can be used to allow\n        connections to multiple nearby pieces."]}], "indent": 4, "type": "dt", "extent": [763, 796], "text": ["Adjacent Pieces from Points"]}, {"body": [{"indent": 8, "type": "para", "extent": [1026, 1232], "text": ["The centroids of nearby pieces will be connected together. Before\n        searching for adjacent pieces, points will be scattered across the\n        surface to aid the detection of close surfaces."]}], "indent": 4, "type": "dt", "extent": [985, 1026], "text": ["Adjacent Pieces from Surface Points"]}, {"body": [{"indent": 8, "type": "para", "extent": [1253, 1455], "text": ["Connections will be made between raw points, ignoring any\n        name attribute.  This is useful if the geometry is already\n        packed, or constraints are being built for the sand solver."]}], "indent": 4, "type": "dt", "extent": [1232, 1253], "text": ["Adjacent Points"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Connection Type"], "role": "item", "extent": [675, 693], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1486, 1661], "text": ["When connection ", {"text": ["Adjacent Points"], "type": "ui"}, ", any ", {"text": ["pscale"], "type": "code"}, " attibute found\n    will be assumed to be the same for all points.  This allows\n    a much faster query to be performed."]}], "indent": 0, "text": ["Assume Uniform Radius"], "role": "item", "extent": [1455, 1486], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1678, 1968], "text": ["Specifies the string primitive attribute used to determine which primitives in the input geometry belong to each piece.\n    This attribute will be transferred to the points of the output geometry.\n    The default value is ", {"text": ["name"], "type": "code"}, ", which is the standard attribute used for rigid bodies."]}], "indent": 0, "text": ["Piece Attribute"], "role": "item", "extent": [1661, 1678], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1995, 2218], "text": ["Only create connections between adjacent pieces that have different values of the ", {"text": ["Cluster Attribute"], "type": "ui"}, ".\n    This can be useful for creating constraints between pieces at the boundary between different material types."]}], "indent": 0, "text": ["Find Boundary Connections"], "role": "item", "extent": [1968, 1995], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2237, 2434], "text": ["Specifies the primitive attribute used to determine which pieces belong to each cluster when ", {"text": ["Find Boundary Connections"], "type": "ui"}, " is enabled.\n    This attribute can be either an integer or a string."]}], "indent": 0, "text": ["Cluster Attribute"], "role": "item", "extent": [2218, 2237], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2451, 2813], "text": ["When connecting ", {"text": ["Adjacent Pieces from Surfaces"], "type": "ui"}, ", points are first seeded on the\n    surface of all the objects. There must be enough points for close\n    points to occur to detect close surfaces. This should be scaled down\n    by the square of the geometry size. For example, if your geometry is 10\u00d7 bigger, you\n    should have 1/100 the points per area."]}], "indent": 0, "text": ["Points per Area"], "role": "item", "extent": [2434, 2451], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2831, 3178], "text": ["When connecting ", {"text": ["Adjacent Pieces from Surfaces"], "type": "ui"}, ", the scattered points\n    will be pushed away from each other to avoid clumping. This is done\n    gradually, to avoid chaotic behavior and to allow control over how much\n    relaxation takes place. More relaxation iterations will result in\n    points that are more separated from each other."]}], "indent": 0, "text": ["Relax Iterations"], "role": "item", "extent": [2813, 2831], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3193, 3271], "text": ["Specifies the maximum allowed distance when searching for nearby points."]}, {"indent": 4, "type": "para", "extent": [3271, 3446], "text": ["If in ", {"text": ["Adjacent Points"], "type": "ui"}, " mode, this will be multiplied by any ", {"text": ["pscale"], "type": "code"}, " attribute.  If ", {"text": ["pscale"], "type": "code"}, " isn\u2019t present, it is treated as 1 so this refers to an absolute distance."]}], "indent": 0, "text": ["Search Radius"], "role": "item", "extent": [3178, 3193], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3465, 3743], "text": ["Specifies an upper limit on the number of nearby points that can be\n    inspected. Lower numbers will improve performance, but run the risk\n    that only points from the same piece will be detected rather than\n    points on nearby pieces, causing connections to be missed."]}], "indent": 0, "text": ["Max Search Points"], "role": "item", "extent": [3446, 3465], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3760, 4077], "text": ["Specifies an upper limit on the number of pieces that each seed point\n    can be connected to. This is primarily useful when connecting\n    ", {"text": ["Adjacent Pieces from Points"], "type": "ui"}, ", but may also improve the detection of ", {"text": ["Adjacent\n    Pieces from Surface Points"], "type": "ui"}, ". However, increasing this value will reduce performance."]}], "indent": 0, "text": ["Max Connections"], "role": "item", "extent": [3743, 3760], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [995, 1040], "text": ["Specifies how the centroid is computed."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1060, 1244], "text": ["Computes the center of mass of the geometry in the same manner as the ", {"text": ["Bullet solver"], "fullpath": "/nodes/dop/bulletrbdsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/bulletrbdsolver"}, ".\n        This method requires the geometry to contain polygons."]}], "indent": 4, "type": "dt", "extent": [1040, 1060], "text": ["Center of Mass"]}, {"body": [{"indent": 8, "type": "para", "extent": [1269, 1330], "text": ["Computes the center of the geometry\u2019s bounding box."]}], "indent": 4, "type": "dt", "extent": [1244, 1269], "text": ["Bounding Box Center"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Centroid Method"], "role": "item", "extent": [4077, 4094], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4166, 4461], "text": ["When connecting ", {"text": ["Adjacent Pieces from Surface Points"], "type": "ui"}, ", each point is moved away from the\n    centroid in the direction of the other point that it is connected to. A\n    value of 0 will leave the point at the centroid, and a value of 1 will\n    move the point to the surface of its piece."]}], "indent": 0, "text": ["Offset From Centroid"], "role": "item", "extent": [4144, 4166], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4486, 4565], "text": ["Create a primitive attribute that contains the length of each connection."]}], "indent": 0, "text": ["Create Length Attribute"], "role": "item", "extent": [4461, 4486], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4583, 4688], "text": ["Specifies the name of the primitive attribute used to record the length\n    of each connection."]}], "indent": 0, "text": ["Length Attribute"], "role": "item", "extent": [4565, 4583], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [663, 675], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [4705, 4751], "text": ["The geometry to find adjacent pieces in."]}], "indent": 0, "type": "dt", "extent": [4696, 4705], "text": ["Pieces"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [4688, 4696], "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [4760, 4791], "text": [{"text": "", "fullpath": "/nodes/dop/constraintnetwork", "scheme": "Node", "type": "link", "value": "/nodes/dop/constraintnetwork"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [4791, 4813], "text": [{"text": "", "fullpath": "/nodes/sop/assemble", "scheme": "Node", "type": "link", "value": "/nodes/sop/assemble"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [4813, 4842], "text": [{"text": "", "fullpath": "/nodes/sop/voronoifracture", "scheme": "Node", "type": "link", "value": "/nodes/sop/voronoifracture"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [4751, 4760], "container": true, "type": "related_section", "id": "related"}], "title": ["Connect Adjacent Pieces"], "summary": ["Creates lines between nearby pieces."], "attrs": {"version": null, "tags": "lowlevel, tech, rbd, dynamics, breaking", "namespace": null, "internal": "connectadjacentpieces", "context": "sop", "type": "node", "icon": "SOP/connectadjacentpieces"}, "included": ["/nodes/sop/extractcentroid"], "type": "root"}