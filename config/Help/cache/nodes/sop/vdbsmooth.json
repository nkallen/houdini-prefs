{"body": [{"indent": 0, "text": ["VDB Smooth"], "type": "title", "extent": [89, 104], "level": 0}, {"indent": 0, "type": "summary", "extent": [104, 162], "text": ["Smooths out the values in a VDB volume primitive."]}, {"type": "para", "indent": 0, "extent": [16, 105], "text": ["See ", {"text": ["volumes"], "fullpath": "/model/volumes", "scheme": null, "type": "link", "value": "/model/volumes"}, " for an explanation of standard volumes and OpenVDB volumes."]}, {"indent": 0, "type": "para", "extent": [186, 409], "text": ["For each voxel, this node computes an average (see the ", {"text": ["Operation"], "type": "ui"}, " parameter) from the surrounding values and sets the voxel to that average.\n(The \"surrounding area\" is a cube, despite the name ", {"text": ["Filter Voxel Radius"], "type": "ui"}, ")."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [415, 482], "text": ["To smooth an SDF, use ", {"text": ["VDB Smooth SDF"], "fullpath": "/nodes/sop/vdbsmoothsdf", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbsmoothsdf"}, "."]}], "indent": 0, "role": "item", "type": "note", "extent": [409, 415]}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [502, 616], "text": ["The name of VDB primitive(s) in the input to be smoothed.\n    See ", {"fragment": "#group", "text": ["specifying volumes"], "value": "/model/volumes#group", "fullpath": "/model/volumes#group", "scheme": null, "type": "link"}, "."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [494, 502], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [646, 844], "text": ["If enabled, it will use the second input\u2019s VDB for alpha masking. Assumes\n    voxel values are between 0 to 1 inclusive.\n    See ", {"fragment": "#group", "text": ["specifying volumes"], "value": "/model/volumes#group", "fullpath": "/model/volumes#group", "scheme": null, "type": "link"}, " for more information."]}], "indent": 0, "text": ["Alpha Mask"], "role": "item", "attrs": {"id": "maskname"}, "extent": [616, 628], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [855, 892], "text": ["How to smooth the voxel values."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [908, 1039], "text": ["Find the mean (", {"text": ["total/count"], "type": "code"}, ") of the surrounding values.\n        This is equivalent to a box blur of the same radius."]}], "indent": 4, "type": "dt", "extent": [892, 908], "text": ["Mean Value"]}, {"body": [{"indent": 8, "type": "para", "extent": [1057, 1232], "text": ["Find the median (middle value) of the surrounding values.\n        This is useful for de-spiking noisy data as extreme values will not contribute to the final result."]}], "indent": 4, "type": "dt", "extent": [1039, 1057], "text": ["Median Value"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Operation"], "role": "item", "extent": [844, 855], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1274, 1481], "text": ["The number of voxels to run the smooth operation over.\n    This is measured in voxels, not distance.\n    This distance defines a ", {"text": ["cube"], "type": "em"}, ", so increasing the \"radius\" will exponentially increase the work."]}], "indent": 0, "text": ["Filter Voxel Radius"], "role": "item", "attrs": {"id": "radius"}, "extent": [1232, 1253], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1493, 1549], "text": ["Number of times to repeat the smoothing operation."]}, {"indent": 4, "type": "para", "extent": [1549, 1696], "text": ["For a cone blur, multiply the radius by ", {"text": ["0.454545"], "type": "code"}, " and use two passes.\n    For a gaussian, multiply the radius by ", {"text": ["0.33"], "type": "code"}, " and use four passes."]}], "indent": 0, "text": ["Iterations"], "role": "item", "extent": [1481, 1493], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1004, 1124], "text": ["The method for smoothing the SDF after each iteration.\n    Later options in the list are slower but more accurate."]}], "indent": 0, "text": ["Renorm Accuracy"], "role": "item", "attrs": {"id": "accuracy"}, "extent": [964, 981], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1769, 1838], "text": ["Inverts the alpha mask so that values from 0-1 maps to 1-0."]}], "indent": 0, "text": ["Invert Alpha Mask"], "role": "item", "attrs": {"id": "invert"}, "extent": [1734, 1753], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1872, 1923], "text": ["Alpha mask values below this are mapped to 0."]}], "indent": 0, "text": ["Min Mask Cutoff"], "role": "item", "attrs": {"id": "minmask"}, "extent": [1838, 1855], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1957, 2008], "text": ["Alpha mask values above this are mapped to 1."]}], "indent": 0, "text": ["Max Mask Cutoff"], "role": "item", "attrs": {"id": "maxmask"}, "extent": [1923, 1940], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [482, 494], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [2017, 2045], "text": [{"text": "", "fullpath": "/nodes/sop/vdbsmoothsdf", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbsmoothsdf"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [2008, 2017], "container": true, "type": "related_section", "id": "related"}], "title": ["VDB Smooth"], "summary": ["Smooths out the values in a VDB volume primitive."], "attrs": {"version": null, "tags": "vdb, merge", "namespace": null, "internal": "vdbsmooth", "context": "sop", "type": "node", "icon": "COMMON/openvdb"}, "included": ["/nodes/sop/vdbrenormalizesdf", "/nodes/sop/volume_types"], "type": "root"}