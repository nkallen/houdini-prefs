{"body": [{"indent": 0, "text": ["Sort"], "type": "title", "extent": [0, 9], "level": 0}, {"indent": 0, "type": "summary", "extent": [103, 181], "text": ["Reorders points and primitives in different ways, including randomly."]}, {"body": [{"indent": 0, "type": "para", "extent": [196, 466], "text": ["In Houdini, points and primitives have an inherent order, and each point/primitive knows its own \"point number\" or \"primitive number\" (its index within the list of points/primitives). This node lets you change the order of points/primitives based on certain criteria."]}, {"indent": 0, "type": "para", "extent": [466, 568], "text": ["To change the order of vertices within a primitive, use the ", {"text": ["Reverse SOP"], "fullpath": "/nodes/sop/reverse", "scheme": "Node", "type": "link", "value": "/nodes/sop/reverse"}, " instead."]}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [181, 196], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [616, 700], "text": ["Do not use this node\u2019s option to sort \"by expression\". Instead, do the following:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "ord", "extent": [700, 912], "text": ["Use ", {"text": ["Create Attribute"], "fullpath": "/nodes/sop/createattribute", "scheme": "Node", "type": "link", "value": "/nodes/sop/createattribute"}, " or ", {"text": ["Attribute Wrangle"], "fullpath": "/nodes/sop/attribwrangle", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribwrangle"}, " to set an attribute on each point/primitive with a \"comparison key\" value which can be used to order each element."]}, {"indent": 0, "blevel": 2, "type": "ord", "extent": [912, 981], "text": ["Use the Sort node to sort \"by attribute\" using the key attribute."]}], "container": true, "type": "ord_group"}, {"indent": 0, "type": "para", "extent": [981, 1036], "text": ["This has two advantages over sorting \"by expression\":"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [1036, 1175], "text": ["You can view the attribute contents in the ", {"text": ["Geometry spreadsheet"], "fullpath": "/ref/panes/geosheet", "scheme": null, "type": "link", "value": "/ref/panes/geosheet"}, " to make sure you are generating the right values."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1175, 1301], "text": ["It is usually ", {"text": ["much"], "type": "em"}, " faster, since sorting by attribute can be multi-threaded but expressions with local variables cannot."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1307, 1570], "text": ["The Sort SOP does ", {"text": ["not"], "type": "em"}, " properly sort Vector3/Vector4 values or arrays: it only sorts by a single component. However, because the Sort SOP uses a stable sort, you can wire together multiple Sort nodes to sort by multiple components, or multiple attributes."]}], "indent": 0, "role": "item", "type": "note", "extent": [1301, 1307]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "level": 2, "text": ["Sorting by an arbitrary expression"], "extent": [568, 616], "container": true, "type": "h", "id": "expr"}, {"body": [{"indent": 0, "type": "para", "extent": [1578, 1793], "text": ["This node does not have any special local variables. You can use the ", {"fragment": "#globals", "text": ["common local variables"], "value": "/network/expressions#globals", "fullpath": "/network/expressions#globals", "scheme": null, "type": "link"}, " when sorting \"by expression\", however see ", {"fragment": "#expr", "text": ["sorting by arbitrary expression"], "value": "#expr", "fullpath": "/nodes/sop/sort#expr", "scheme": null, "type": "link"}, " above."]}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [1570, 1578], "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1835, 1866], "text": ["How to sort the elements."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1881, 1944], "text": ["Do not change the order (preserve the current order)."]}], "indent": 4, "type": "dt", "extent": [1866, 1881], "text": ["No Change"]}, {"body": [{"indent": 8, "type": "para", "extent": [1979, 2068], "text": ["Sort points to match the orderof the vertices on the primitives they belong to."]}, {"indent": 8, "type": "para", "extent": [2068, 2195], "text": ["If you have a curve whose point numbers don\u2019t increase along the curve, this will give the points the proper numbers."]}], "indent": 4, "type": "dt", "extent": [1944, 1979], "text": ["By vertex order (points only)"]}, {"body": [{"indent": 8, "type": "para", "extent": [2209, 2264], "text": ["Sorts by the element\u2019s X, Y, or Z coordinate."]}], "indent": 4, "type": "dt", "extent": [2195, 2209], "text": ["By X/Y/Z"]}, {"body": [{"indent": 8, "type": "para", "extent": [2277, 2319], "text": ["Reverses the ", {"text": ["current"], "type": "em"}, " ordering."]}], "indent": 4, "type": "dt", "extent": [2264, 2277], "text": ["Reverse"]}, {"body": [{"indent": 8, "type": "para", "extent": [2331, 2384], "text": ["Scrambles the elements into a random order."]}], "indent": 4, "type": "dt", "extent": [2319, 2331], "text": ["Random"]}, {"body": [{"indent": 8, "type": "para", "extent": [2395, 2537], "text": ["Shifts the current element numbers forward by a certain offset. Point numbers at the end of the point list wrap around to the start."]}], "indent": 4, "type": "dt", "extent": [2384, 2395], "text": ["Shift"]}, {"body": [{"indent": 8, "type": "para", "extent": [2561, 2632], "text": ["Orders the elements by how close they are to a certain point."]}, {"indent": 8, "type": "para", "extent": [2632, 2799], "text": ["This can be useful for limiting a point cloud to only the N closest points to a target: sort the points by proximity, then delete all but the first N points."]}], "indent": 4, "type": "dt", "extent": [2537, 2561], "text": ["Proximity to point"]}, {"body": [{"indent": 8, "type": "para", "extent": [2817, 3004], "text": ["Orders the elements by their position along a certain line in 3D space. This is similar to \"By X/Y/Z\" but lets you specify an arbitrary line instead of one of the cardinal axes."]}], "indent": 4, "type": "dt", "extent": [2799, 2817], "text": ["Along vector"]}, {"body": [{"indent": 8, "type": "para", "extent": [3023, 3182], "text": ["This option lets you sort elements using \"key values\" generated by an expression, however it is ", {"fragment": "#expr", "text": ["faster and more convenient to use attributes"], "value": "#expr", "fullpath": "/nodes/sop/sort#expr", "scheme": null, "type": "link"}, "."]}], "indent": 4, "type": "dt", "extent": [3004, 3023], "text": ["By expression"]}, {"body": [{"indent": 8, "type": "para", "extent": [3204, 3305], "text": ["Changes the order so elements that are near to each other in 3D space have similar numbers."]}], "indent": 4, "type": "dt", "extent": [3182, 3204], "text": ["Spatial locality"]}, {"body": [{"indent": 8, "type": "para", "extent": [3323, 3628], "text": ["Uses the value of an attribute as a \"key value\" to sort by. For Vector3/Vector4 attributes, the node can only sort by a single component at a time. However, because the Sort SOP uses a stable sort, you can wire together multiple Sort nodes to sort by multiple components, or multiple attributes."]}], "indent": 4, "type": "dt", "extent": [3305, 3323], "text": ["By attribute"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Point sort"], "role": "item", "attrs": {"id": "ptsort"}, "extent": [1805, 1818], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3634, 3777], "text": ["When the sort method is \"Random\", the seed to use for the random number generator. Different seeds will generate different random orders."]}], "indent": 0, "text": ["Seed"], "role": "item", "extent": [3628, 3634], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3785, 3882], "text": ["When the sort method is \"Shift\", the number of places to shift the element numbers forward."]}], "indent": 0, "text": ["Offset"], "role": "item", "extent": [3777, 3785], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3889, 3987], "text": ["When the sort method is \"Proximity\", order the elements by how close they are to this point."]}], "indent": 0, "text": ["Point"], "role": "item", "extent": [3882, 3889], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4002, 4166], "text": ["When the sort method is \"Along vector\", if you enter a path to an Object node here, the Sort node will use that objects translate as the vector to sort along."]}, {"indent": 4, "type": "para", "extent": [4166, 4258], "text": ["This lets you sort along a vector from the origin to the object\u2019s current 3D position."]}], "indent": 0, "text": ["Vector Object"], "role": "item", "extent": [3987, 4002], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4266, 4457], "text": ["When the sort method is \"Along vector\", the vector to use for sorting. This vector is signed, so a value of ", {"text": ["0, 1, 0"], "type": "code"}, " is the equivalent of sorting By Y, while ", {"text": ["0, -1, 0"], "type": "code"}, " is the reverse."]}], "indent": 0, "text": ["Vector"], "role": "item", "extent": [4258, 4266], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4469, 4650], "text": ["When the sort method is \"By expression\", this is the per-element expression to use to generate key values. However, it is ", {"fragment": "#expr", "text": ["faster and more convenient to use attributes"], "value": "#expr", "fullpath": "/nodes/sop/sort#expr", "scheme": null, "type": "link"}, "."]}], "indent": 0, "text": ["Expression"], "role": "item", "extent": [4457, 4469], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4661, 4758], "text": ["When the sort method is \"By attribute\", the name of the attribute to use a the sorting key."]}], "indent": 0, "text": ["Attribute"], "role": "item", "extent": [4650, 4661], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4769, 5102], "text": ["When the sort method is \"By attribute\", which component of a compound (vector/matrix) value to use as the sorting key. The Sort node can only sort by a single component at a time. However, because the Sort SOP uses a stable sort, you can wire together multiple Sort nodes to sort by multiple components, or multiple attributes."]}], "indent": 0, "text": ["Component"], "role": "item", "extent": [4758, 4769], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5145, 5326], "text": ["Reverses the sorted ordering computed by the controls above. For example, if you set the sort method to \"By X\" and turn this on, points are sorted by ", {"text": ["decreasing"], "type": "em"}, " X positions."]}], "indent": 0, "text": ["Reverse point sort"], "role": "item", "attrs": {"id": "pointreverse"}, "extent": [5102, 5122], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5361, 5405], "text": ["See the help for ", {"text": ["Point sort"], "type": "ui"}, " above."]}], "indent": 0, "text": ["Primitive sort"], "role": "item", "attrs": {"id": "primsort"}, "extent": [5326, 5342], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5469, 5553], "text": ["Sort vertex numbers to have the same order as point numbers in each primitive."]}], "indent": 0, "text": ["Sort vertices by order in primitives"], "role": "item", "attrs": {"id": "vertexprimorder"}, "extent": [5405, 5443], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1793, 1805], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": ["Reorders points and primitives in different ways, including randomly."], "type": "root", "attrs": {"version": null, "tags": "tech, topology, points", "namespace": null, "internal": "sort", "context": "sop", "type": "node", "icon": "MISC/generic"}, "title": ["Sort"]}