{"body": [{"indent": 0, "text": ["Attribute from Volume"], "type": "title", "extent": [0, 26], "level": 0}, {"indent": 0, "type": "summary", "extent": [139, 260], "text": ["Copies information from a volume onto the point attributes of\nanother piece of geometry, with optional remapping."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [280, 379], "text": ["The points in the first input that will have their attributes\n    set from the volume values."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [272, 280], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [387, 575], "text": ["The volumes in the second input to use for sampling the\n    attribute values.  If there are not enough volumes for the\n    size of the attribute, the volumes will be re-used in turn."]}, {"indent": 4, "type": "para", "extent": [575, 802], "text": ["For convenience, volumes may be specified directly by \"name\",\n    ie, the value of their name attribute.  Thus the density\n    volume can be retrieved with \"density\" and the velocity set of\n    three volumes with ", {"text": ["vel.*"], "type": "code"}, "."]}], "indent": 0, "text": ["Volume"], "role": "item", "extent": [379, 387], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 0, "type": "para", "extent": [818, 1057], "text": ["These parameters control what attribute the node saves the volume\ninformation into. They also control what type of attribute the node\ncreates. If the attribute already exists in the first input, the\nnode ignores the creation parameters."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1073, 1101], "text": ["Name of the attribute."]}], "indent": 0, "text": ["Attribute Name"], "role": "item", "extent": [1057, 1073], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1126, 1195], "text": ["Specifies whether to create a local variable for the attribute."]}], "indent": 0, "text": ["Create Variable Mapping"], "role": "item", "extent": [1101, 1126], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1211, 1389], "text": ["The name scripts/expressions can use to refer to the attribute as\n    a local variable. If you leave this blank, Houdini will use the\n    name of the attribute in all caps."]}], "indent": 0, "text": ["Local Variable"], "role": "item", "extent": [1195, 1211], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1405, 1557], "text": ["The sort of attribute to create.  \n    The ", {"text": ["Vector"], "type": "ui"}, " attribute is distinct from a triple of floats because it is often transformed like a normal."]}], "indent": 0, "text": ["Attribute Type"], "role": "item", "extent": [1389, 1405], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1573, 1760], "text": ["The number of components in the attribute type. For example,\n    setting ", {"text": ["Attribute type"], "type": "ui"}, " to \"Float\" and ", {"text": ["Attribute size"], "type": "ui"}, " to\n    ", {"text": ["1"], "type": "code"}, " creates a simple scalar float attribute."]}], "indent": 0, "text": ["Attribute Size"], "role": "item", "extent": [1557, 1573], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1769, 2022], "text": ["The default value of the attribute. Four text fields are always\n    visible but the node only uses the number of fields corresponding\n    to the ", {"text": ["Attribute size"], "type": "ui"}, ". If the size is greater than ", {"text": ["4"], "type": "code"}, ", the\n    node cycles back through the four fields."]}], "indent": 0, "text": ["Default"], "role": "item", "extent": [1760, 1769], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attribute"], "extent": [802, 818], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [2036, 2205], "text": ["Instead of directly copying the value from the volume, you can\noptionally map the to get the volume values into a different range\nand/or scale the values using ramps."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [2218, 2352], "text": ["The volume value will be remapped so that this min/max\n    pair become the 0..1 interval prior to applying any of the\n    ramps."]}], "indent": 0, "text": ["Input Range"], "role": "item", "extent": [2205, 2218], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2373, 2515], "text": ["Specifies a ramp to apply to all channels equally.  Out of\n    range values will either be clamped or wrapped according\n    to the mode."]}], "indent": 0, "text": ["Map Volume to Value"], "role": "item", "extent": [2352, 2373], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2537, 2872], "text": ["Specifies a color ramp.  Each channel of the color ramp\n    is applied to each volume in turn, so if there are three\n    volumes, the first will get the red, the second green, and\n    third blue ramps.  However, since volumes are reused, this\n    means that if you have a single volume you can color it\n    using the vector ramp."]}], "indent": 0, "text": ["Map Volume to Vector"], "role": "item", "extent": [2515, 2537], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2886, 2994], "text": ["The ramps output a 0..1 interval.  This is then remapped\n    to the min/max given in the output range."]}], "indent": 0, "text": ["Output Range"], "role": "item", "extent": [2872, 2886], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Mapping"], "extent": [2022, 2036], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [260, 272], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [3003, 3027], "text": [{"text": "", "fullpath": "/nodes/sop/volumevop", "scheme": "Node", "type": "link", "value": "/nodes/sop/volumevop"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [3027, 3060], "text": [{"text": "", "fullpath": "/nodes/sop/volumevisualization", "scheme": "Node", "type": "link", "value": "/nodes/sop/volumevisualization"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [3060, 3083], "text": [{"text": "", "fullpath": "/nodes/sop/isooffset", "scheme": "Node", "type": "link", "value": "/nodes/sop/isooffset"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [3083, 3101], "text": [{"text": "", "fullpath": "/nodes/sop/iso", "scheme": "Node", "type": "link", "value": "/nodes/sop/iso"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [2994, 3003], "container": true, "type": "related_section", "id": "related"}], "summary": ["Copies information from a volume onto the point attributes of\nanother piece of geometry, with optional remapping."], "type": "root", "attrs": {"version": null, "tags": "attrs, volumes, merge", "namespace": null, "internal": "attribfromvolume", "context": "sop", "type": "node", "icon": "SOP/attribfromvolume"}, "title": ["Attribute from Volume"]}