{"body": [{"indent": 0, "text": ["volumesample"], "type": "title", "extent": [0, 17], "level": 0}, {"indent": 0, "type": "summary", "extent": [73, 118], "text": ["Samples the volume primitive\u2019s value."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "extent": [118, 184], "text": [" ", {"text": ["float volumesample(<geometry>, int primnum, vector pos)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [184, 257], "text": [" ", {"text": ["float volumesample(<geometry>, string volumename, vector pos)"], "type": "code"}]}], "container": true, "role": "item_group", "type": "usage_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [58, 235], "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."]}, {"indent": 4, "type": "para", "extent": [235, 423], "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"text": [".bgeo"], "type": "code"}, ") to read from. When running inside Houdini, this can be an ", {"text": ["op:/path/to/sop"], "type": "code"}, " reference."]}], "indent": 0, "text": [{"text": ["<geometry>"], "type": "code"}], "role": "item", "attrs": {"id": "geometry"}, "extent": [16, 35], "type": "arg"}, {"body": [{"indent": 4, "type": "para", "extent": [295, 364], "text": ["The volume primitive\u2019s sampled value at the given position."]}, {"indent": 4, "type": "para", "extent": [364, 505], "text": ["Returns 0 if ", {"text": ["primnum"], "type": "code"}, " or ", {"text": ["inputnum"], "type": "code"}, " is out of range, the geometry is invalid, or the given primitive is not a vector volume primitive."]}], "indent": 0, "returns": true, "role": "item", "extent": [285, 295], "type": "arg"}], "container": true, "role": "item_group", "type": "arg_group"}], "title": ["volumesample"], "summary": ["Samples the volume primitive\u2019s value."], "attrs": {"showtags": "true", "group": "volume", "type": "vex", "context": "all", "tags": "volume"}, "included": ["/vex/functions/_common"], "type": "root"}