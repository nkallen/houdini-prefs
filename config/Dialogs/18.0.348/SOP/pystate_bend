// Magic: 4bf084fb
// Automatically generated PSI dialog (PSI version 18.0.348)
// Sat Feb 22 21:45:42 2020


f_tmp = FLOAT_FIELD;	// dialog.top.ui

group.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    group.label = PARM_LABEL("Group", "group") WIDTH(1.5);
    PARM_FIELD(string, "group") VALUE(group.val) 
	LABELREF(group.label) HSTRETCH;

    group.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    ACTION_ICONBUTTON "BUTTONS_reselect" VALUE(group.script_action)
	HELP("Select geometry from an available viewport.\nShift-click to turn on Select Groups.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

}

grouptype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Group Type", "grouptype") WIDTH(1.5);
    { WIDTH(0.09) }

    grouptype.menu;

    { HSTRETCH }

}

dodeform.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("dodeform", "Enable Deformation") toggle VALUE(dodeform.val);

    { HSTRETCH }

}

limit_deformation.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("limit_deformation", "Limit Deformation to Capture Region") toggle VALUE(limit_deformation.val);

    { HSTRETCH }

}

vis_falloff.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vis_falloff", "Visualize Falloff") toggle VALUE(vis_falloff.val);

    { HSTRETCH }

}

bendmode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Bend Mode", "bendmode") WIDTH(1.5);
    { WIDTH(0.09) }

    bendmode.menu;

    { HSTRETCH }

}

bend.gad = ROW
{
   HSTRETCH

   bend.label = PARM_LABEL( "Bend", "bend" ) WIDTH(1.5);
   PARM(float, 1, "bend", none, none) RANGE(-90, 90)
	LABELREF( bend.label ) HSTRETCH;

}

up.gad = ROW
{
   HSTRETCH

   up.label = PARM_LABEL("Up Vector", "up") WIDTH(1.5);
   PARM(float, 3, "up", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(up.label)
	HSTRETCH;

}

goaldir.gad = ROW
{
   HSTRETCH

   goaldir.label = PARM_LABEL("Goal Direction", "goaldir") WIDTH(1.5);
   PARM(float, 3, "goaldir", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(goaldir.label)
	HSTRETCH;

}

twist.gad = ROW
{
   HSTRETCH

   twist.label = PARM_LABEL( "Twist", "twist" ) WIDTH(1.5);
   PARM(float, 1, "twist", none, none) RANGE(-180, 180)
	LABELREF( twist.label ) HSTRETCH;

}

lengthscale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 lengthscale.label = PARM_LABEL("Length Scale", "lengthscale") WIDTH(1.5);
 PARM(float, 1, "lengthscale", none, none) RANGE(0,2)
	 LABELREF(lengthscale.label) HSTRETCH;

}

preservevolume.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("preservevolume", "Preserve Volume") toggle VALUE(preservevolume.val);

    { HSTRETCH }

}

tapermode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Taper Mode", "tapermode") WIDTH(1.5);
    { WIDTH(0.09) }

    tapermode.menu;

    { HSTRETCH }

}

taper.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 taper.label = PARM_LABEL("Taper", "taper") WIDTH(1.5);
 PARM(float, 1, "taper", none, none) RANGE(0,2)
	 LABELREF(taper.label) HSTRETCH;

}

squish.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 squish.label = PARM_LABEL("Squish", "squish") WIDTH(1.5);
 PARM(float, 1, "squish", none, none) RANGE(0,2)
	 LABELREF(squish.label) HSTRETCH;

}

origin.gad = ROW
{
   HSTRETCH

   origin.label = PARM_LABEL("Capture Origin", "origin") WIDTH(1.5);
   PARM(float, 3, "origin", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(origin.label)
	HSTRETCH;

}

dir.gad = ROW
{
   HSTRETCH

   dir.label = PARM_LABEL("Capture Direction", "dir") WIDTH(1.5);
   PARM(float, 3, "dir", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(dir.label)
	HSTRETCH;

}

length.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 length.label = PARM_LABEL("Capture Length", "length") WIDTH(1.5);
 PARM(float, 1, "length", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(length.label) HSTRETCH;

}

guide_scale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 guide_scale.label = PARM_LABEL("Guide Scale", "guide_scale") WIDTH(1.5);
 PARM(float, 1, "guide_scale", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(guide_scale.label) HSTRETCH;

}

userest.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("userest", "Use Rest Positions") toggle VALUE(userest.val);

    { HSTRETCH }

}

attribs.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    attribs.label = PARM_LABEL("Attributes to Transform", "attribs") WIDTH(1.5);
    PARM_FIELD(string, "attribs") VALUE(attribs.val) 
	LABELREF(attribs.label) HSTRETCH;

    attribs.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

}

updateaffectednmls.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("updateaffectednmls", "Recompute Affected Normals") toggle VALUE(updateaffectednmls.val);

    { HSTRETCH }

}

vlength.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("vlength", "Preserve Normal Length") toggle VALUE(vlength.val);

    { HSTRETCH }

}

derivative_stepsize.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 derivative_stepsize.label = PARM_LABEL("Step Size", "derivative_stepsize") WIDTH(1.5);
 PARM(float, 1, "derivative_stepsize", none, none) RANGE(0,1)
	LOCK_RANGE_MIN LABELREF(derivative_stepsize.label) HSTRETCH;

}

folder0.gad = 
GROUP simple "Capture"
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    origin.gad;		
	    dir.gad;		
	    length.gad;		
} 

folder2.gad = 
GROUP simple "Deformation"
{ 
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH 
	    bendmode.gad;		
	    bend.gad;		
	    up.gad;		
	    goaldir.gad;		
	    twist.gad;		
	    lengthscale.gad;		
	    preservevolume.gad;		
	    tapermode.gad;		
	    taper.gad;		
	    squish.gad;		
} 

folder1.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 "folder1.gad"
    { 
	VALUE(folder1.gad.val) STRETCH(1,0)

	TAB "Deformation"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    dodeform.gad;		
	    limit_deformation.gad;		
	    vis_falloff.gad;		
	    folder2.gad;		
	    folder0.gad;		
	    guide_scale.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Attributes"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    userest.gad;		
	    attribs.gad;		
	    updateaffectednmls.gad;		
	    vlength.gad;		
	    derivative_stepsize.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

# warning cpp warning: "GenV3/subdialog.top.ui":5 Macro "PARMSPACING" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":6 Macro "LAYOUTDIR" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":7 Macro "LOOK_PLAIN" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":8 Macro "DO_JUSTIFY" redefined.  Using later definition
dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    group.gad; 
    grouptype.gad; 
    folder1.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
