// Magic: 408226c5
// Automatically generated PSI dialog (PSI version 18.0.348)
// Tue Jan 28 12:01:25 2020


f_tmp = FLOAT_FIELD;	// dialog.top.ui

density.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 density.label = PARM_LABEL("Density", "density") WIDTH(1.5);
 PARM(float, 1, "density", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(density.label) HSTRETCH;

    density.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(density.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

density_channel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    density_channel.label = PARM_LABEL("Density Channel", "density_channel") WIDTH(1.5);
    PARM_FIELD(string, "density_channel") VALUE(density_channel.val) 
	LABELREF(density_channel.label) HSTRETCH;

    density_channel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(density_channel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scatter.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 scatter.label = PARM_LABEL("Scatter", "scatter") WIDTH(1.5);
 PARM(float, 1, "scatter", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(scatter.label) HSTRETCH;

    scatter.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scatter.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scatter_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    scatter_color.label = PARM_LABEL("Scatter Color", "scatter_color") WIDTH(1.5);
    PARM(float, 3, "scatter_color", none, COLOR, "R,G,B") 
	LABELREF(scatter_color.label) HSTRETCH;

    scatter_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scatter_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scatter_color_channel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    scatter_color_channel.label = PARM_LABEL("Scatter Channel", "scatter_color_channel") WIDTH(1.5);
    PARM_FIELD(string, "scatter_color_channel") VALUE(scatter_color_channel.val) 
	LABELREF(scatter_color_channel.label) HSTRETCH;

    scatter_color_channel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scatter_color_channel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

scatter_anisotropy.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 scatter_anisotropy.label = PARM_LABEL("Anisotropy", "scatter_anisotropy") WIDTH(1.5);
 PARM(float, 1, "scatter_anisotropy", none, none) RANGE(-1,1)
	LOCK_RANGE LABELREF(scatter_anisotropy.label) HSTRETCH;

    scatter_anisotropy.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(scatter_anisotropy.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

transparent.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    transparent.label = PARM_LABEL("Transparent Color", "transparent") WIDTH(1.5);
    PARM(float, 3, "transparent", none, COLOR, "R,G,B") 
	LABELREF(transparent.label) HSTRETCH;

    transparent.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(transparent.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

transparent_channel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    transparent_channel.label = PARM_LABEL("Transparent Channel", "transparent_channel") WIDTH(1.5);
    PARM_FIELD(string, "transparent_channel") VALUE(transparent_channel.val) 
	LABELREF(transparent_channel.label) HSTRETCH;

    transparent_channel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(transparent_channel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

transparent_depth.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 transparent_depth.label = PARM_LABEL("Transparent Depth", "transparent_depth") WIDTH(1.5);
 PARM(float, 1, "transparent_depth", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(transparent_depth.label) HSTRETCH;

    transparent_depth.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(transparent_depth.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

emission_mode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Mode", "emission_mode") WIDTH(1.5);
    { WIDTH(0.09) }

    emission_mode.menu;

    { HSTRETCH }

    emission_mode.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(emission_mode.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

emission.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 emission.label = PARM_LABEL("Emission", "emission") WIDTH(1.5);
 PARM(float, 1, "emission", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(emission.label) HSTRETCH;

    emission.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(emission.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

emission_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    emission_color.label = PARM_LABEL("Emission Color", "emission_color") WIDTH(1.5);
    PARM(float, 3, "emission_color", none, COLOR, "R,G,B") 
	LABELREF(emission_color.label) HSTRETCH;

    emission_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(emission_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

emission_channel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    emission_channel.label = PARM_LABEL("Emission Channel", "emission_channel") WIDTH(1.5);
    PARM_FIELD(string, "emission_channel") VALUE(emission_channel.val) 
	LABELREF(emission_channel.label) HSTRETCH;

    emission_channel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(emission_channel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

temperature.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 temperature.label = PARM_LABEL("Temperature Scale", "temperature") WIDTH(1.5);
 PARM(float, 1, "temperature", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(temperature.label) HSTRETCH;

    temperature.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(temperature.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

temperature_channel.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    temperature_channel.label = PARM_LABEL("Temperature Channel", "temperature_channel") WIDTH(1.5);
    PARM_FIELD(string, "temperature_channel") VALUE(temperature_channel.val) 
	LABELREF(temperature_channel.label) HSTRETCH;

    temperature_channel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(temperature_channel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

blackbody_kelvin.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 blackbody_kelvin.label = PARM_LABEL("Blackbody Kelvin", "blackbody_kelvin") WIDTH(1.5);
 PARM(float, 1, "blackbody_kelvin", none, none) RANGE(0,10000)
	LOCK_RANGE_MIN LABELREF(blackbody_kelvin.label) HSTRETCH;

    blackbody_kelvin.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(blackbody_kelvin.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

blackbody_intensity.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 blackbody_intensity.label = PARM_LABEL("Blackbody Intensity", "blackbody_intensity") WIDTH(1.5);
 PARM(float, 1, "blackbody_intensity", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(blackbody_intensity.label) HSTRETCH;

    blackbody_intensity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(blackbody_intensity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

displacement.gad = ROW
{
   HSTRETCH

   displacement.label = PARM_LABEL("Displacement", "displacement") WIDTH(1.5);
   PARM(float, 3, "displacement", none, none, "X,Y,Z")
	RANGE(0,1)  LABELREF(displacement.label)
	HSTRETCH;

    displacement.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(displacement.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

interpolation.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH

    PARM_LABEL_SIMPLE("Interpolation", "interpolation") WIDTH(1.5);
    { WIDTH(0.09) }

    interpolation.menu;

    { HSTRETCH }

    interpolation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(interpolation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

sampling_group.gad = 
GROUP collapsible "Sampling"
{ 
    VALUE(sampling_group.gad.val) LAYOUT(vertical) HSTRETCH
	    displacement.gad;		
	    interpolation.gad;		
} 

emission_group.gad = 
GROUP simple "Emission"
{ 
    VALUE(emission_group.gad.val) LAYOUT(vertical) HSTRETCH 
	    emission_mode.gad;		
	    emission.gad;		
	    emission_color.gad;		
	    emission_channel.gad;		
	    temperature.gad;		
	    temperature_channel.gad;		
	    blackbody_kelvin.gad;		
	    blackbody_intensity.gad;		
} 

transparent_group.gad = 
GROUP simple "Transparent"
{ 
    VALUE(transparent_group.gad.val) LAYOUT(vertical) HSTRETCH 
	    transparent.gad;		
	    transparent_channel.gad;		
	    transparent_depth.gad;		
} 

scatter_group.gad = 
GROUP simple "Scatter"
{ 
    VALUE(scatter_group.gad.val) LAYOUT(vertical) HSTRETCH 
	    scatter.gad;		
	    scatter_color.gad;		
	    scatter_color_channel.gad;		
	    scatter_anisotropy.gad;		
} 

density_group.gad = 
GROUP simple "Density"
{ 
    VALUE(density_group.gad.val) LAYOUT(vertical) HSTRETCH 
	    density.gad;		
	    density_channel.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    density_group.gad; 
    scatter_group.gad; 
    transparent_group.gad; 
    emission_group.gad; 
    sampling_group.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
